<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='68410' time_ms='1572101687248'>
<vm_version>
<name>
OpenJDK 64-Bit Server VM
</name>
<release>
14-internal+0-adhoc.xiaomingcong.openjdk10
</release>
<info>
OpenJDK 64-Bit Server VM (slowdebug 14-internal+0-adhoc.xiaomingcong.openjdk10) for bsd-amd64 JRE (14-internal+0-adhoc.xiaomingcong.openjdk10), built on Oct 26 2019 10:56:42 by &quot;xiaomingcong&quot; with clang 4.2.1 Compatible Apple LLVM 11.0.0 (clang-1100.0.33.8)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+PrintCompilation -XX:+PrintInlining -XX:+PrintOptoAssembly -XX:PrintIdealGraphLevel=2 -XX:PrintIdealGraphFile=ideal.xml -Didea.launcher.port=59129 -Didea.launcher.bin.path=/Applications/IntelliJ IDEA CE.app/Contents/bin -Dfile.encoding=UTF-8 </args>
<command>
com.intellij.rt.execution.application.AppMainV2 jvmLearning.chapter11.Test
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=14-internal+0-adhoc.xiaomingcong.openjdk10
java.vm.name=OpenJDK 64-Bit Server VM
jdk.debug=slowdebug
sun.boot.library.path=/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/lib
java.library.path=/Users/xiaomingcong/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
java.home=/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk
java.class.path=/Users/xiaomingcong/eclipse-workspace/FileReadTest/target/classes:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/java.base:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/java.compiler:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/java.datatransfer:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/java.desktop:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/java.instrument:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/java.logging:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/java.management:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/java.management.rmi:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/java.naming:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/java.net.http:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/java.prefs:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/java.rmi:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/java.scripting:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/java.se:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/java.security.jgss:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/java.security.sasl:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/java.smartcardio:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/java.sql:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/java.sql.rowset:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/java.transaction.xa:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/java.xml:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/java.xml.crypto:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.accessibility:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.aot:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.attach:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.charsets:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.compiler:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.crypto.cryptoki:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.crypto.ec:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.dynalink:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.editpad:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.hotspot.agent:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.httpserver:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.internal.ed:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.internal.jvmstat:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.internal.le:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.internal.opt:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.internal.vm.ci:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.internal.vm.compiler:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.internal.vm.compiler.management:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.jartool:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.javadoc:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.jcmd:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.jconsole:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.jdeps:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.jdi:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.jdwp.agent:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.jfr:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.jlink:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.jshell:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.jsobject:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.jstatd:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.localedata:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.management:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.management.agent:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.management.jfr:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.naming.dns:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.naming.rmi:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.net:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.nio.mapmode:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.pack:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.rmic:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.scripting.nashorn:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.scripting.nashorn.shell:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.sctp:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.security.auth:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.security.jgss:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.unsupported:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.unsupported.desktop:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.xml.dom:/Users/xiaomingcong/openjdk10/build/macosx-x86_64-server-slowdebug/jdk/modules/jdk.zipfs:/Applications/IntelliJ IDEA CE.app/Contents/lib/idea_rt.jar
jdk.boot.class.path.append=
java.vm.info=mixed mode, sharing
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=14
java.vm.vendor=Oracle Corporation
idea.launcher.port=59129
idea.launcher.bin.path=/Applications/IntelliJ IDEA CE.app/Contents/bin
file.encoding=UTF-8
sun.java.command=com.intellij.rt.execution.application.AppMainV2 jvmLearning.chapter11.Test
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='9219'/>
<blob name='MethodHandlesAdapterBlob' size='182000'>
<sect index='1' size='182000' free='179994'/>
</blob>
<writer thread='42755'/>
    238    1       3       java.lang.Object::&lt;init&gt; (1 bytes)
    272    2       3       java.lang.String::isLatin1 (19 bytes)
    308    3       3       java.lang.String::charAt (25 bytes)
                              @ 1   java.lang.String::isLatin1 (19 bytes)
                              @ 12   java.lang.StringLatin1::charAt (28 bytes)
                                @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 21  java/lang/StringUTF16::charAt (not loaded)   not inlineable
    312    4       3       java.lang.StringLatin1::charAt (28 bytes)
                              @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
    314    5       3       java.lang.String::hashCode (60 bytes)
                              @ 17   java.lang.String::isLatin1 (19 bytes)
                              @ 27   java.lang.StringLatin1::hashCode (42 bytes)   callee is too large
                              @ 37  java/lang/StringUTF16::hashCode (not loaded)   not inlineable
<writer thread='9219'/>
    372    6     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLL)L (native)   (static)
<writer thread='42755'/>
    399    7       3       java.lang.String::coder (15 bytes)
<writer thread='9219'/>
    407    8     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLL)L (native)   (static)
<writer thread='42755'/>
    408    9       3       java.lang.StringLatin1::hashCode (42 bytes)
    409   10       3       java.lang.String::length (11 bytes)
                              @ 6   java.lang.String::coder (15 bytes)
    410   11       1       java.lang.Enum::ordinal (5 bytes)
<writer thread='9219'/>
    411   12     n 0       java.lang.Object::hashCode (native)   
    413   13     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLL)L (native)   
<writer thread='42755'/>
    413   14       3       java.util.Objects::requireNonNull (14 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='9219'/>
    413   15     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLL)L (native)   (static)
    414   16     n 0       java.lang.System::arraycopy (native)   (static)
<writer thread='42755'/>
    415   17       1       java.lang.Class::getClassLoader0 (5 bytes)
<writer thread='9219'/>
    415   18     n 0       java.lang.Class::isPrimitive (native)   
<writer thread='42755'/>
    416   19       3       java.lang.StringLatin1::indexOf (61 bytes)
                              @ 1   java.lang.StringLatin1::canEncode (13 bytes)
<writer thread='43011'/>
    426   20       4       java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='9219'/>
    428   21     n 0       java.lang.invoke.MethodHandle::invokeBasic(LL)L (native)   
    428   22     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLL)L (native)   (static)
<writer thread='42755'/>
    429   23       3       jdk.internal.org.objectweb.asm.SymbolTable::get (13 bytes)
    430   24       3       java.lang.Math::min (11 bytes)
    431   26       3       jdk.internal.org.objectweb.asm.ByteVector::putUTF8 (144 bytes)
<writer thread='43011'/>

============================= C2-compiled nmethod ==============================
<opto_assembly compile_id='20'>
----------------------- MetaData before Compile_id = 20 ------------------------
{method}
 - this oop:          0x0000000121d81588
 - method holder:     &apos;java/lang/Object&apos;
 - constants:         0x0000000121d81138 constant pool [92] {0x0000000121d81138} for &apos;java/lang/Object&apos; cache=0x0000000121e9b4a8
 - access:            0x81000001  public 
 - name:              &apos;&lt;init&gt;&apos;
 - signature:         &apos;()V&apos;
 - max stack:         1
 - max locals:        1
 - size of params:    1
 - method size:       13
 - intrinsic id:      300 _Object_init
 - highest level:     3
 - vtable index:      -2
 - i2i entry:         0x0000000105ef3de0
 - adapters:          AHE@0x00007f850a0037e0: 0xb0000000 i2c: 0x0000000105fec760 c2i: 0x0000000105fec81d c2iUV: 0x0000000105fec7e4 c2iNCI: 0x0000000105fec85a
 - compiled entry     0x00000001066241e0
 - code size:         1
 - code start:        0x0000000121d81568
 - code end (excl):   0x0000000121d81569
 - method data:       0x0000000121f93438
 - checked ex length: 0
 - linenumber start:  0x0000000121d81569
 - localvar length:   1
 - localvar start:    0x0000000121d81572
 - compiled code: nmethod    431    1       3       java.lang.Object::&lt;init&gt; (1 bytes)

------------------------ OptoAssembly for Compile_id = 20 -----------------------
#
#  void ( java/lang/Object:NotNull * )
#
#r018 rsi:rsi   : parm 0: java/lang/Object:NotNull *
# -- Old rsp -- Framesize: 32 --
#r583 rsp+28: in_preserve
#r582 rsp+24: return address
#r581 rsp+20: in_preserve
#r580 rsp+16: saved fp register
#r579 rsp+12: pad2, stack alignment
#r578 rsp+ 8: pad2, stack alignment
#r577 rsp+ 4: Fixed slot 1
#r576 rsp+ 0: Fixed slot 0
#
000     N14: #	out( B1 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
000     movl    rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	decode_klass_not_null rscratch1, rscratch1
	cmpq    rax, rscratch1	 # Inline cache check
	jne     SharedRuntime::_ic_miss_stub
	nop	# nops to align entry point


020     B1: #	out( N14 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
020     # stack bang (96 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #16	# Create frame

02c     addq    rsp, 16	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

03b     ret

--------------------------------------------------------------------------------
</opto_assembly>
<writer thread='42755'/>
                              @ 1   java.lang.String::length (11 bytes)
                                @ 6   java.lang.String::coder (15 bytes)
<writer thread='43011'/>
    432    1       3       java.lang.Object::&lt;init&gt; (1 bytes)   made not entrant
    432   25       4       java.lang.String::charAt (25 bytes)
<writer thread='42755'/>
                              @ 17   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 43   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   callee is too large
                              @ 85   java.lang.String::charAt (25 bytes)
                                @ 1   java.lang.String::isLatin1 (19 bytes)
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)
                                  @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='43011'/>
<writer thread='42755'/>
                                @ 21   java.lang.StringUTF16::charAt
<writer thread='43011'/>
<writer thread='42755'/>
 (11 bytes)
                                  @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
                                    @ 2   java.lang.StringUTF16::length (5 bytes)
                                    @ 5   java.lang.String::checkIndex (48 bytes)   callee is too large
                                  @ 7   java.lang.StringUTF16::getChar (60 bytes)   intrinsic
                              @ 127   jdk.internal.org.objectweb.asm.ByteVector::encodeUtf8 (337 bytes)   callee is too large
<writer thread='9219'/>
    435   30     n 0       jdk.internal.misc.Unsafe::getReferenceVolatile (native)   
<writer thread='42755'/>
    444   28       3       java.util.concurrent.ConcurrentHashMap::tabAt (22 bytes)
                              @ 15   jdk.internal.misc.Unsafe::getReferenceAcquire (7 bytes)
                                @ 3   jdk.internal.misc.Unsafe::getReferenceVolatile (0 bytes)   intrinsic
    446   29       3       jdk.internal.misc.Unsafe::getReferenceAcquire (7 bytes)
                              @ 3   jdk.internal.misc.Unsafe::getReferenceVolatile (0 bytes)   intrinsic
    447   27       3       jdk.internal.org.objectweb.asm.SymbolTable::hash (10 bytes)
                              @ 4   java.lang.String::hashCode (60 bytes)   callee is too large
    454   31       3       java.lang.StringLatin1::canEncode (13 bytes)
<writer thread='9219'/>
    461   32     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLL)L (native)   (static)
<writer thread='42755'/>
    461   33       3       java.lang.invoke.MemberName::testFlags (16 bytes)
<writer thread='43011'/>

============================= C2-compiled nmethod ==============================
<opto_assembly compile_id='25'>
----------------------- MetaData before Compile_id = 25 ------------------------
{method}
 - this oop:          0x0000000121d87150
 - method holder:     &apos;java/lang/String&apos;
 - constants:         0x0000000121d82360 constant pool [1059]/operands[28] {0x0000000121d82360} for &apos;java/lang/String&apos; cache=0x0000000121ea1220
 - access:            0x81000001  public 
 - name:              &apos;charAt&apos;
 - signature:         &apos;(I)C&apos;
 - max stack:         3
 - max locals:        2
 - size of params:    2
 - method size:       13
 - highest level:     3
 - vtable index:      -2
 - i2i entry:         0x0000000105ef3de0
 - adapters:          AHE@0x00007f850a00fa40: 0xba000000 i2c: 0x0000000105f3a9e0 c2i: 0x0000000105f3aac6 c2iUV: 0x0000000105f3aa8d c2iNCI: 0x0000000105f3ab03
 - compiled entry     0x0000000106624a60
 - code size:         25
 - code start:        0x0000000121d87110
 - code end (excl):   0x0000000121d87129
 - method data:       0x00000001220363a8
 - checked ex length: 0
 - linenumber start:  0x0000000121d87129
 - localvar length:   2
 - localvar start:    0x0000000121d87136
 - compiled code: nmethod    462    3       3       java.lang.String::charAt (25 bytes)

------------------------ OptoAssembly for Compile_id = 25 -----------------------
#
#  char ( java/lang/String:NotNull:exact *, int )
#
#r018 rsi:rsi   : parm 0: java/lang/String:NotNull:exact *
#r016 rdx   : parm 1: int
# -- Old rsp -- Framesize: 48 --
#r583 rsp+44: in_preserve
#r582 rsp+40: return address
#r581 rsp+36: in_preserve
#r580 rsp+32: saved fp register
#r579 rsp+28: pad2, stack alignment
#r578 rsp+24: pad2, stack alignment
#r577 rsp+20: Fixed slot 1
#r576 rsp+16: Fixed slot 0
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N67: #	out( B1 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
000     movl    rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	decode_klass_not_null rscratch1, rscratch1
	cmpq    rax, rscratch1	 # Inline cache check
	jne     SharedRuntime::_ic_miss_stub
	nop	# nops to align entry point


020     B1: #	out( B5 B2 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
020     # stack bang (240 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #32	# Create frame

02c     movsbl  R10, [RSI + #20 (8-bit)]	# byte ! Field: java/lang/String.coder (constant)
031     testl   R10, R10
034     jne,s   B5  P=0.000000 C=6360.000000

036     B2: #	out( B7 B3 ) &lt;- in( B1 )  Freq: 1
036     movl    RBP, [RSI + #12 (8-bit)]	# compressed ptr ! Field: java/lang/String.value (constant)
039     movl    R10, [R12 + RBP &lt;&lt; 3 + #12] (compressed oop addressing)	# range
03e     NullCheck RBP

03e     B3: #	out( B6 B4 ) &lt;- in( B2 )  Freq: 0.999999
03e     cmpl    RDX, R10	# unsigned
041     jnb,us  B6  P=0.000000 C=5767.000000

043     B4: #	out( N67 ) &lt;- in( B3 )  Freq: 0.999998
043     decode_heap_oop_not_null R10,RBP
047     movzbl  RAX, [R10 + #16 + RDX]	# ubyte
04d     addq    rsp, 32	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

05c     ret

05d     B5: #	out( N67 ) &lt;- in( B1 )  Freq: 5e-07
05d     movq    RBP, RSI	# spill
060     movl    [rsp + #0], RDX	# spill
063     movl    [rsp + #4], R10	# spill
068     movl    RSI, #-187	# int
        nop 	# 2 bytes pad for loops and calls
06f     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.lang.String::isLatin1 @ bci:10  L[0]=_ STK[0]=rsp + #4
        # java.lang.String::charAt @ bci:1  L[0]=RBP L[1]=rsp + #0
        # OopMap {rbp=Oop off=116/0x74}
074     ud2	# ShouldNotReachHere

088     B6: #	out( N67 ) &lt;- in( B3 )  Freq: 4.76836e-07
088     movl    RSI, #-27	# int
08d     movl    [rsp + #4], RDX	# spill
        nop 	# 2 bytes pad for loops and calls
093     call,static  wrapper for: uncommon_trap(reason=&apos;range_check&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.lang.StringLatin1::charAt @ bci:1  L[0]=RBP L[1]=rsp + #4 STK[0]=rsp + #4
        # java.lang.String::charAt @ bci:12  L[0]=_ L[1]=_
        # OopMap {rbp=NarrowOop off=152/0x98}
098     ud2	# ShouldNotReachHere

0ac     B7: #	out( N67 ) &lt;- in( B2 )  Freq: 1.01328e-06
0ac     movl    RSI, #-10	# int
0b1     movl    [rsp + #4], RDX	# spill
        nop 	# 2 bytes pad for loops and calls
0b7     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.StringLatin1::charAt @ bci:1  L[0]=RBP L[1]=rsp + #4 STK[0]=rsp + #4
        # java.lang.String::charAt @ bci:12  L[0]=_ L[1]=_
        # OopMap {rbp=NarrowOop off=188/0xbc}
0bc     ud2	# ShouldNotReachHere

--------------------------------------------------------------------------------
</opto_assembly>
<writer thread='42755'/>
    463   34       3       jdk.internal.org.objectweb.asm.Symbol::&lt;init&gt; (38 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
    465   37       3       jdk.internal.org.objectweb.asm.ByteVector::putShort (52 bytes)
                              @ 18   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   callee is too large
    466   35       3       jdk.internal.org.objectweb.asm.SymbolTable::put (150 bytes)
<writer thread='43011'/>
    467    3       3       java.lang.String::charAt (25 bytes)   made not entrant
                              @ 1   java.lang.String::isLatin1 (19 bytes)   inline (hot)
                              @ 12   java.lang.StringLatin1::charAt (28 bytes)   inline (hot)
<writer thread='42755'/>
    471   36       3       java.lang.AbstractStringBuilder::ensureCapacityInternal (39 bytes)
                              @ 24   java.lang.AbstractStringBuilder::newCapacity (55 bytes)   callee is too large
                              @ 32   java.util.Arrays::copyOf (19 bytes)
                                @ 11   java.lang.Math::min (11 bytes)
                                @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
<writer thread='9219'/>
    482   38     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLL)V (native)   (static)
<writer thread='42755'/>
    482   39       3       java.lang.String::&lt;init&gt; (15 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
    483   40       3       jdk.internal.org.objectweb.asm.ByteVector::putByte (39 bytes)
                              @ 18   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   callee is too large
<writer thread='9219'/>
    484   45     n 0       java.lang.invoke.MethodHandle::linkToStatic(LL)L (native)   (static)
<writer thread='42755'/>
    485   43       3       jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8 (98 bytes)
                              @ 2   jdk.internal.org.objectweb.asm.SymbolTable::hash (10 bytes)
<writer thread='9219'/>
    485   48     n 0       java.lang.invoke.MethodHandle::invokeBasic(L)L (native)   
<writer thread='42755'/>
                                @ 4   java.lang.String::hashCode (60 bytes)   callee is too large
                              @ 8   jdk.internal.org.objectweb.asm.SymbolTable::get (13 bytes)
                              @ 37   java.lang.String::equals (50 bytes)   callee is too large
                              @ 61   jdk.internal.org.objectweb.asm.ByteVector::putByte (39 bytes)   callee is too large
                              @ 65   jdk.internal.org.objectweb.asm.ByteVector::putUTF8 (144 bytes)   callee is too large
                              @ 88   jdk.internal.org.objectweb.asm.SymbolTable$Entry::&lt;init&gt; (17 bytes)
                                @ 7   jdk.internal.org.objectweb.asm.Symbol::&lt;init&gt; (38 bytes)   callee is too large
                              @ 91   jdk.internal.org.objectweb.asm.SymbolTable::put (150 bytes)   callee is too large
    491   41       3       jdk.internal.org.objectweb.asm.SymbolTable$Entry::&lt;init&gt; (17 bytes)
                              @ 7   jdk.internal.org.objectweb.asm.Symbol::&lt;init&gt; (38 bytes)   callee is too large
    492   44       3       java.lang.String::equals (50 bytes)
                              @ 44   java.lang.StringLatin1::equals (36 bytes)   callee is too large
    494   50       3       java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
    495   51       3       java.lang.invoke.MemberName::isInvocable (8 bytes)
                              @ 4   java.lang.invoke.MemberName::testAnyFlags (15 bytes)
                                @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
    497   53       3       java.lang.StringBuilder::append (8 bytes)
                              @ 2   java.lang.AbstractStringBuilder::append (77 bytes)   callee is too large
    498   46       3       java.lang.String::indexOf (29 bytes)
                              @ 1   java.lang.String::isLatin1 (19 bytes)
                              @ 13   java.lang.StringLatin1::indexOf (61 bytes)   callee is too large
                              @ 25   java.lang.StringUTF16::indexOf (43 bytes)   callee is too large
    500   52       3       java.util.Arrays::copyOfRange (64 bytes)
                              @ 16   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
                              @ 20   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
                              @ 26   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 30   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
                              @ 33   java.lang.StringBuilder::toString (35 bytes)
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
                              @ 36   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 55   java.lang.Math::min (11 bytes)
                              @ 58   java.lang.System::arraycopy (0 bytes)   intrinsic
<writer thread='43011'/>
    505   65       4       java.lang.String::isLatin1 (19 bytes)
<writer thread='9219'/>
    506   68     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLL)I (native)   (static)
<writer thread='42755'/>
    509   56       3       java.io.BufferedInputStream::getBufIfOpen (21 bytes)
<writer thread='24579'/>
    509   55  s    3       java.io.BufferedInputStream::read (49 bytes)
<writer thread='42755'/>
                              @ 15  java/io/IOException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='40963'/>
    509   64       3       java.lang.String::codePointAt (50 bytes)
<writer thread='24579'/>
                              @ 12   java.io.BufferedInputStream::fill (203 bytes)   callee is too large
<writer thread='40963'/>
                              @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='24579'/>
                              @ 29   java.io.BufferedInputStream::getBufIfOpen (21 bytes)
<writer thread='24323'/>
    509   60       3       java.lang.Character::charCount (12 bytes)
<writer thread='40963'/>
                              @ 13   java.lang.String::checkIndex (48 bytes)   callee is too large
<writer thread='24579'/>
                                @ 15  java/io/IOException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='40963'/>
                              @ 37   java.lang.String::checkIndex (48 bytes)   callee is too large
<writer thread='42755'/>
    510   57       3       java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
<writer thread='40963'/>
                              @ 46   java.lang.StringUTF16::codePointAt (8 bytes)
                                @ 4   java.lang.StringUTF16::codePointAt (86 bytes)   callee is too large
<writer thread='24323'/>
    510   58       3       java.lang.AbstractStringBuilder::append (77 bytes)
                              @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (39 bytes)   callee is too large
                              @ 11   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
                              @ 18   java.lang.StringLatin1::canEncode (13 bytes)
<writer thread='42755'/>
    511   59       3       java.lang.String::indexOf (7 bytes)
<writer thread='24323'/>
                              @ 46   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
<writer thread='42755'/>
                              @ 3   java.lang.String::indexOf (29 bytes)
                                @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='24323'/>
                              @ 53   java.lang.AbstractStringBuilder::inflate (42 bytes)   callee is too large
<writer thread='24579'/>
    512   62       3       java.net.URI::match (56 bytes)
<writer thread='24323'/>
                              @ 72   java.lang.StringUTF16::putCharSB (12 bytes)
                                @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
<writer thread='42755'/>
                                @ 13   java.lang.StringLatin1::indexOf (61 bytes)   callee is too large
<writer thread='24323'/>
                                  @ 2   java.lang.StringUTF16::length (5 bytes)
<writer thread='42755'/>
                                @ 25   java.lang.StringUTF16::indexOf (43 bytes)   callee is too large
<writer thread='24323'/>
                                  @ 5   java.lang.String::checkIndex (48 bytes)   callee is too large
                                @ 8   java.lang.StringUTF16::putChar (54 bytes)   intrinsic
<writer thread='40963'/>
    513   67       3       java.util.HashMap::hash (20 bytes)
                              @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
<writer thread='24579'/>
    514   66       3       java.io.DataInputStream::readUnsignedShort (39 bytes)
<writer thread='42755'/>
    514   61       3       sun.nio.fs.UnixUriUtils::match (50 bytes)
<writer thread='24579'/>
                              @ 4   java.io.InputStream::read (0 bytes)   no static binding
                              @ 12   java.io.InputStream::read (0 bytes)   no static binding
<writer thread='40963'/>
    515   54       3       sun.nio.fs.UnixPath::checkNotNul (16 bytes)
<writer thread='24579'/>
                              @ 26  java/io/EOFException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='40963'/>
                              @ 11  java/nio/file/InvalidPathException::&lt;init&gt; (not loaded)   not inlineable
    516   63       3       java.lang.String::checkIndex (48 bytes)
<writer thread='24579'/>
    516   49       1       java.lang.invoke.MemberName::getDeclaringClass (5 bytes)
<writer thread='40963'/>
                              @ 17   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
                              @ 23   java.lang.StringBuilder::append (8 bytes)
<writer thread='24579'/>
    517   47       1       sun.invoke.util.Wrapper::basicTypeChar (5 bytes)
<writer thread='40963'/>
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
<writer thread='42755'/>
    517   42       1       java.lang.invoke.MethodType::returnType (5 bytes)
<writer thread='40963'/>
                              @ 27   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
                              @ 33   java.lang.StringBuilder::append (8 bytes)
             
<writer thread='43011'/>

============================= C2-compiled nmethod ==============================
<opto_assembly compile_id='65'>
----------------------- MetaData before Compile_id = 65 ------------------------
{method}
 - this oop:          0x0000000121d8cdf8
 - method holder:     &apos;java/lang/String&apos;
 - constants:         0x0000000121d82360 constant pool [1059]/operands[28] {0x0000000121d82360} for &apos;java/lang/String&apos; cache=0x0000000121ea1220
 - access:            0x81000000  
 - name:              &apos;isLatin1&apos;
 - signature:         &apos;()Z&apos;
 - max stack:         2
 - max locals:        1
 - size of params:    1
 - method size:       13
 - highest level:     3
 - vtable index:      -2
 - i2i entry:         0x0000000105ef3de0
 - adapters:          AHE@0x00007f850a00f860: 0xb0000000 i2c: 0x0000000105f3bee0 c2i: 0x0000000105f3bfc3 c2iUV: 0x0000000105f3bf8a c2iNCI: 0x0000000105f3c000
 - compiled entry     0x0000000106624560
 - code size:         19
 - code start:        0x0000000121d8cdd0
 - code end (excl):   0x0000000121d8cde3
 - method data:       0x0000000121fec8a8
 - checked ex length: 0
 - linenumber start:  0x0000000121d8cde3
 - localvar length:   1
 - localvar start:    0x0000000121d8cdea
 - compiled code: nmethod    517    2       3       java.lang.String::isLatin1 (19 bytes)

------------------------ OptoAssembly for Compile_id = 65 -----------------------
#
#  bool ( java/lang/String:NotNull:exact * )
#
#r018 rsi:rsi   : parm 0: java/lang/String:NotNull:exact *
# -- Old rsp -- Framesize: 32 --
#r583 rsp+28: in_preserve
#r582 rsp+24: return address
#r581 rsp+20: in_preserve
#r580 rsp+16: saved fp register
#r579 rsp+12: pad2, stack alignment
#r578 rsp+ 8: pad2, stack alignment
#r577 rsp+ 4: Fixed slot 1
#r576 rsp+ 0: Fixed slot 0
#
000     N30: #	out( B1 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
000     movl    rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	decode_klass_not_null rscratch1, rscratch1
	cmpq    rax, rscratch1	 # Inline cache check
	jne     SharedRuntime::_ic_miss_stub
	nop	# nops to align entry point


020     B1: #	out( B3 B2 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
020     # stack bang (112 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #16	# Create frame

02c     movsbl  R11, [RSI + #20 (8-bit)]	# byte ! Field: java/lang/String.coder (constant)
031     testl   R11, R11
034     jne,s   B3  P=0.000000 C=11611.000000

036     B2: #	out( N30 ) &lt;- in( B1 )  Freq: 1
036     movl    RAX, #1	# int
03b     addq    rsp, 16	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

04a     ret

04b     B3: #	out( N30 ) &lt;- in( B1 )  Freq: 5e-07
04b     movl    RSI, #-187	# int
050     movl    RBP, R11	# spill
053     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.lang.String::isLatin1 @ bci:10  L[0]=_ STK[0]=RBP
        # OopMap {off=88/0x58}
058     ud2	# ShouldNotReachHere

--------------------------------------------------------------------------------
</opto_assembly>
<writer thread='40963'/>
                   @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 37   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
                              @ 40   java.lang.StringBuilder::toString (35 bytes)
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
                              @ 43  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='43011'/>
    520    2       3       java.lang.String::isLatin1 (19 bytes)   made not entrant
<writer thread='42755'/>
    541   69       3       java.lang.invoke.MethodTypeForm::canonicalize (233 bytes)
<writer thread='9219'/>
    542   70     n 0       java.lang.invoke.MethodHandle::linkToVirtual(LL)V (native)   (static)
<writer thread='42755'/>
                              @ 10   java.lang.Class::isPrimitive (0 bytes)   intrinsic
                              @ 53   sun.invoke.util.Wrapper::asPrimitiveType (20 bytes)
                                @ 1   sun.invoke.util.Wrapper::findWrapperType (25 bytes)
                                  @ 4   sun.invoke.util.Wrapper::hashWrap (63 bytes)   callee is too large
                                @ 10   sun.invoke.util.Wrapper::primitiveType (5 bytes)
                                @ 14   sun.invoke.util.Wrapper::forceType (72 bytes)   callee is too large
<writer thread='40963'/>
    543   71       3       java.lang.String::getBytes (44 bytes)
<writer thread='42755'/>
                              @ 149   sun.invoke.util.Wrapper::asWrapperType (18 bytes)
<writer thread='40963'/>
                              @ 1   java.lang.String::coder (15 bytes)
<writer thread='42755'/>
                                @ 1   java.lang.Class::isPrimitive (0 bytes)   intrinsic
                                @ 8   sun.invoke.util.Wrapper::forPrimitiveType (49 bytes)   callee is too large
<writer thread='40963'/>
                              @ 22   java.lang.System::arraycopy (0 bytes)   intrinsic
<writer thread='42755'/>
                                @ 12   sun.invoke.util.Wrapper::wrapperType (52 bytes)   callee is too large
<writer thread='40963'/>
                              @ 40   java.lang.StringLatin1::inflate (10 bytes)
                                @ 6   java.lang.StringUTF16::inflate (42 bytes)   callee is too large
<writer thread='24579'/>
    545   72       3       java.util.Objects::equals (23 bytes)
<writer thread='9219'/>
    545   73     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLL)I (native)   (static)
<writer thread='24579'/>
                              @ 11   java.lang.Object::equals (11 bytes)   no static binding
<writer thread='24323'/>
    546   74       3       java.lang.StringLatin1::replace (198 bytes)
                              @ 1   java.lang.StringLatin1::canEncode (13 bytes)
                              @ 41   java.lang.StringLatin1::canEncode (13 bytes)
<writer thread='40963'/>
    546   75       3       java.lang.AbstractStringBuilder::putStringAt (29 bytes)
<writer thread='9219'/>
    546   77     n 0       java.lang.Class::isArray (native)   
<writer thread='24323'/>
                              @ 49   java.lang.StringConcatHelper::
<writer thread='40963'/>
                              @ 1  
<writer thread='24323'/>
newArray
<writer thread='40963'/>
 java.lang.AbstractStringBuilder::getCoder
<writer thread='24323'/>
 (26 bytes)   force inline by annotation
<writer thread='40963'/>
 (15 bytes)
<writer thread='24579'/>
    547   76       3       java.lang.AbstractStringBuilder::getCoder (15 bytes)
<writer thread='24323'/>
                                @ 19   jdk.internal.misc.Unsafe::
<writer thread='40963'/>
                              @ 5  
<writer thread='24323'/>
allocateUninitializedArray
<writer thread='40963'/>
 java.lang.String::
<writer thread='24323'/>
 (55 bytes)   callee is too large
<writer thread='40963'/>
coder (15 bytes)
                              @ 12   java.lang.AbstractStringBuilder::inflate (42 bytes)   callee is too large
<writer thread='24323'/>
                              @ 123  
<writer thread='40963'/>
                              @ 25   java.lang.String::
<writer thread='24323'/>
 java.lang.String::&lt;init&gt;
<writer thread='40963'/>
getBytes (44 bytes)
<writer thread='24323'/>
 (15 bytes)
<writer thread='40963'/>
   callee is too large
<writer thread='24323'/>
                                @ 1  
<writer thread='24579'/>
    548   78       3       java.lang.invoke.MethodType::parameterType (7 bytes)
<writer thread='24323'/>
 java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 128   java.lang.StringUTF16::newBytesFor (61 bytes)   callee is too large
                              @ 140   java.lang.StringLatin1::inflate (10 bytes)
                                @ 6   java.lang.StringUTF16::inflate (42 bytes)   callee is too large
                              @ 176   java.lang.StringUTF16::putChar (54 bytes)   intrinsic
                              @ 192   java.lang.String::&lt;init&gt; (15 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
    559   79       3       java.lang.invoke.MethodType::hashCode (53 bytes)
<writer thread='40963'/>
    559   80       3       java.lang.invoke.MethodType::checkPtype (19 bytes)
<writer thread='24323'/>
                              @ 6   java.lang.Object::hashCode (0 bytes)   native method
<writer thread='40963'/>
                              @ 1   java.util.Objects::requireNonNull (14 bytes)
<writer thread='24579'/>
    559   81       3       java.lang.Class::getClassLoader (28 bytes)
<writer thread='24323'/>
                              @ 40   java.lang.Object::
<writer thread='40963'/>
                                @ 8  
<writer thread='24323'/>
hashCode
<writer thread='42755'/>
    559   82       3       java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements (27 bytes)
<writer thread='40963'/>
 java.lang.NullPointerException::
<writer thread='24579'/>
             
<writer thread='24323'/>
 (0 bytes)   native method
<writer thread='40963'/>
&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='24579'/>
                 @ 1   java.lang.Class::getClassLoader0 (5 bytes)
<writer thread='42755'/>
               !m             @ 4   java.lang.ref.ReferenceQueue::poll (28 bytes)
<writer thread='40963'/>
                              @ 14   java.lang.invoke.MethodHandleStatics::newIllegalArgumentException (9 bytes)
<writer thread='24579'/>
                              @ 11   java.lang.System::getSecurityManager (12 bytes)
<writer thread='40963'/>
                                @ 5   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
<writer thread='42755'/>
                                @ 17   java.lang.ref.ReferenceQueue::reallyPoll
<writer thread='24579'/>
                                @ 0   java.lang.System::allowSecurityManager
<writer thread='42755'/>
 (65 bytes)   callee is too large
<writer thread='24579'/>
 (13 bytes)
                              @ 20  
<writer thread='42755'/>
                          
<writer thread='24579'/>
 jdk.internal.reflect.Reflection::getCallerClass
<writer thread='42755'/>
    @ 17  
<writer thread='24579'/>
 (0 bytes)   native method
<writer thread='42755'/>
 java.util.concurrent.ConcurrentHashMap::remove (8 bytes)
<writer thread='24579'/>
                              @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                @ 0   java.lang.System::getSecurityManager (12 bytes)
                                  @ 0   java.lang.System::allowSecurityManager (13 bytes)
<writer thread='24323'/>
    562   83   !   3       java.lang.ref.ReferenceQueue::poll (28 bytes)
<writer thread='42755'/>
               !m               @ 4   java.util.concurrent.ConcurrentHashMap::replaceNode (437 bytes)   callee is too large
<writer thread='24579'/>
                                @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
<writer thread='24323'/>
             
<writer thread='24579'/>
                                  
<writer thread='24323'/>
                 @ 17  
<writer thread='24579'/>
@ 7   java.lang.Class::
<writer thread='24323'/>
 java.lang.ref.ReferenceQueue::reallyPoll
<writer thread='24579'/>
getClassLoader0 (5 bytes)
<writer thread='24323'/>
 (65 bytes)   callee is too large
<writer thread='24579'/>
                                @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                  @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
<writer thread='40963'/>
    582   84       3       java.lang.StringLatin1::newString (17 bytes)
                              @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
<writer thread='24323'/>
    583   85       3       java.lang.AbstractStringBuilder::newCapacity (55 bytes)
<writer thread='40963'/>
             
<writer thread='42755'/>
    583   87       3       java.lang.String::checkBoundsBeginEnd (63 bytes)
<writer thread='40963'/>
                 @ 13  
<writer thread='24579'/>
    583   86       3       java.lang.String::substring (58 bytes)
<writer thread='40963'/>
 java.lang.String::&lt;init&gt; (15 bytes)
<writer thread='24323'/>
                              @ 47   java.lang.AbstractStringBuilder::hugeCapacity (41 bytes)   callee is too large
<writer thread='40963'/>
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24579'/>
                              
<writer thread='42755'/>
                              @ 22  
<writer thread='24579'/>
@ 1   java.lang.String::
<writer thread='42755'/>
 java.lang.StringBuilder::&lt;init&gt;
<writer thread='24579'/>
length
<writer thread='42755'/>
 (7 bytes)
<writer thread='24579'/>
 (11 bytes)
<writer thread='42755'/>
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
<writer thread='24579'/>
                                @ 6   java.lang.String::coder (15 bytes)
<writer thread='42755'/>
                              @ 28   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
<writer thread='24579'/>
                              @ 8   java.lang.String::checkBoundsBeginEnd (63 bytes)   callee is too large
                              @ 28  
<writer thread='42755'/>
             
<writer thread='24579'/>
 java.lang.String::isLatin1 (19 bytes)
<writer thread='42755'/>
                 @ 32   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
<writer thread='24579'/>
                              @ 41   java.lang.StringLatin1::
<writer thread='42755'/>
                   
<writer thread='24579'/>
newString (17 bytes)
<writer thread='42755'/>
           @ 38   java.lang.StringBuilder::append (8 bytes)
             
<writer thread='24579'/>
                                @ 9   java.util.Arrays::
<writer thread='42755'/>
             
<writer thread='24579'/>
copyOfRange
<writer thread='42755'/>
      
<writer thread='24579'/>
 (64 bytes)   callee is too large
<writer thread='42755'/>
@ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
<writer thread='24579'/>
                                @ 13   java.lang.String::&lt;init&gt; (15 bytes)
<writer thread='42755'/>
                              @ 42   java.lang.StringBuilder::append (8 bytes)
<writer thread='24579'/>
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='42755'/>
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
                              @ 48   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
<writer thread='24579'/>
                              @ 54   java.lang.StringUTF16::newString (50 bytes)   callee is too large
<writer thread='42755'/>
                              @ 52   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
                              @ 55   java.lang.StringBuilder::toString (35 bytes)
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
<writer thread='40963'/>
    586   88       3       java.lang.StringBuilder::append (8 bytes)
<writer thread='24323'/>
    586   89       3       java.lang.AbstractStringBuilder::append (45 bytes)
<writer thread='42755'/>
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
<writer thread='40963'/>
                              @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
<writer thread='42755'/>
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
                              @ 5   java.lang.AbstractStringBuilder::appendNull (83 bytes)   callee is too large
                              @ 10   java.lang.String::length (11 bytes)
                                @ 6   java.lang.String::coder (15 bytes)
<writer thread='42755'/>
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
                              @ 58  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24323'/>
                              @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (39 bytes)   callee is too large
                              @ 30   java.lang.AbstractStringBuilder::putStringAt (29 bytes)
                                @ 1   java.lang.AbstractStringBuilder::getCoder (15 bytes)
<writer thread='40963'/>
    587   90       3       java.lang.StringLatin1::lastIndexOf (40 bytes)
<writer thread='24323'/>
                                @ 5   java.lang.String::coder (15 bytes)
<writer thread='40963'/>
                              @ 1   java.lang.StringLatin1::canEncode (13 bytes)
<writer thread='24323'/>
                                @ 12   java.lang.AbstractStringBuilder::inflate (42 bytes)   callee is too large
<writer thread='43011'/>
    588   92       4       java.lang.StringLatin1::indexOf (61 bytes)
<writer thread='40963'/>
                              @ 14   java.lang.Math::min (11 bytes)
<writer thread='24323'/>
                                @ 25   java.lang.String::getBytes (44 bytes)   callee is too large
<writer thread='43011'/>
<writer thread='24579'/>
    590   94       3       java.lang.StringLatin1::equals (36 bytes)
<writer thread='40963'/>
    591   93       3       java.lang.String::isEmpty (14 bytes)
<writer thread='24579'/>
    592   95       1       java.io.File::getPrefixLength (5 bytes)
<writer thread='24323'/>
    592   96       1       java.io.File::getPath (5 bytes)
<writer thread='40963'/>
    592   91       3       java.lang.Class::getName (18 bytes)
                              @ 14   java.lang.Class::initClassName (0 bytes)   native method
<writer thread='9219'/>
    595   97     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLL)L (native)   (static)
<writer thread='24323'/>
    596   98       3       java.lang.invoke.MemberName::testAllFlags (7 bytes)
                              @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
<writer thread='24579'/>
    596   99       3       java.lang.StringBuilder::toString (35 bytes)
                              @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
                              @ 16   java.lang.StringLatin1::newString (17 bytes)
                                @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
                                @ 13   java.lang.String::&lt;init&gt; (15 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
<writer thread='40963'/>
    598  100       3       java.util.concurrent.ConcurrentHashMap::get (162 bytes)
                              @ 1   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
<writer thread='24323'/>
    598  101       3       java.lang.StringBuilder::&lt;init&gt; (7 bytes)
<writer thread='42755'/>
    598  102       3       java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)
<writer thread='40963'/>
                              @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (22 bytes)
<writer thread='24323'/>
                              @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
<writer thread='42755'/>
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='40963'/>
                                @ 15   jdk.internal.misc.Unsafe::getReferenceAcquire (7 bytes)
                                  @ 3   jdk.internal.misc.Unsafe::getReferenceVolatile (0 bytes)   intrinsic
                              @ 73   java.lang.Object::equals (11 bytes)   no static binding
                              @ 93   java.util.concurrent.ConcurrentHashMap$Node::find (52 bytes)   no static binding
                              @ 149   java.lang.Object::equals (11 bytes)   no static binding
<writer thread='9219'/>
    611  103     n 0       java.lang.invoke.MethodHandle::invokeBasic()L (native)   
    611  104     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LL)L (native)   (static)
<writer thread='24323'/>
    612  105       1       java.lang.invoke.MethodType::form (5 bytes)
<writer thread='40963'/>
    614  106       3       jdk.internal.org.objectweb.asm.ByteVector::put12 (64 bytes)
                              @ 18   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   callee is too large
<writer thread='24579'/>
    615  107       1       java.lang.invoke.MethodType::ptypes (5 bytes)
<writer thread='9219'/>
    625  108     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LL)V (native)   (static)
<writer thread='24323'/>
    626  109       3       java.lang.invoke.MethodType::makeImpl (108 bytes)
<writer thread='42755'/>
    626  111       3       java.lang.invoke.MethodType$ConcurrentWeakInternSet::get (47 bytes)
<writer thread='24579'/>
    626  110       3       java.lang.invoke.MethodType::&lt;init&gt; (15 bytes)
<writer thread='42755'/>
             
<writer thread='24323'/>
             
<writer thread='42755'/>
                 @ 8  
<writer thread='24323'/>
                 
<writer thread='24579'/>
             
<writer thread='24323'/>
@ 17  
<writer thread='42755'/>
 java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='24323'/>
 java.lang.invoke.MethodType::
<writer thread='24579'/>
                 @ 1   java.lang.Object::&lt;init&gt;
<writer thread='24323'/>
&lt;init&gt; (15 bytes)
<writer thread='24579'/>
 (1 bytes)
<writer thread='40963'/>
    626  112   !   3       java.lang.invoke.MemberName::getMethodType (203 bytes)
<writer thread='24579'/>

<writer thread='42755'/>
                              @ 13  
<writer thread='24323'/>
                          
<writer thread='42755'/>
 java.lang.invoke.MethodType$ConcurrentWeakInternSet::
<writer thread='24323'/>
      @ 1  
<writer thread='42755'/>
expungeStaleElements
<writer thread='24323'/>
 java.lang.Object::
<writer thread='42755'/>
 (27 bytes)
<writer thread='24323'/>
&lt;init&gt; (1 bytes)
<writer thread='42755'/>
               !m               @ 4   java.lang.ref.ReferenceQueue::poll (28 bytes)
<writer thread='40963'/>
                              @ 8   java.lang.invoke.MemberName::expandFromVM (21 bytes)
<writer thread='24323'/>
                              @ 25   java.lang.invoke.MethodType$ConcurrentWeakInternSet::get (47 bytes)   callee is too large
                              @ 42   java.lang.invoke.MethodType::checkRtype (6 bytes)
<writer thread='40963'/>
                                @ 9   java.lang.invoke.MemberName::isResolved (13 bytes)
<writer thread='24323'/>
                                @ 1   java.util.Objects::requireNonNull (14 bytes)
<writer thread='42755'/>
                                  @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
<writer thread='24323'/>
                                  @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='40963'/>
                                @ 17   java.lang.invoke.MethodHandleNatives::expand (0 bytes)   native method
<writer thread='42755'/>
                                @ 17   java.util.concurrent.ConcurrentHashMap::remove (8 bytes)
<writer thread='24323'/>
                              @ 50   java.lang.invoke.MethodType::checkPtypes
<writer thread='40963'/>
                              @ 21  
<writer thread='24323'/>
 (61 bytes)   callee is too large
<writer thread='40963'/>
 java.lang.invoke.MemberName::isInvocable (8 bytes)
<writer thread='42755'/>
               !m                 @ 4   java.util.concurrent.ConcurrentHashMap::replaceNode (437 bytes)   callee is too large
<writer thread='24323'/>
        
<writer thread='40963'/>
             
<writer thread='24323'/>
                      @ 63  
<writer thread='40963'/>
      
<writer thread='24323'/>
 java.util.Arrays::
<writer thread='40963'/>
             
<writer thread='24323'/>
copyOf (10 bytes)
<writer thread='40963'/>
@ 4   java.lang.invoke.MemberName::testAnyFlags (15 bytes)
<writer thread='42755'/>
                              @ 21   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   callee is too large
<writer thread='24323'/>
                                @ 3   java.lang.Object::getClass (0 bytes)   intrinsic
<writer thread='40963'/>
                                  @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
<writer thread='42755'/>
                              @ 35   java.lang.ref.Reference::get (5 bytes)   intrinsic
<writer thread='24323'/>
                                @ 6   java.util.Arrays::copyOf (40 bytes)   callee is too large
                              @ 71   java.lang.invoke.MethodType::checkPtypes (61 bytes)   callee is too large
                              @ 81   java.lang.invoke.MethodType::&lt;init&gt; (15 bytes)
<writer thread='40963'/>
                              
<writer thread='24323'/>
                                
<writer thread='40963'/>
@ 29  
<writer thread='24323'/>
@ 1  
<writer thread='40963'/>
 java.lang.invoke.MethodHandleStatics::
<writer thread='24323'/>
 java.lang.Object::
<writer thread='40963'/>
newIllegalArgumentException
<writer thread='24323'/>
&lt;init&gt; (1 bytes)
<writer thread='40963'/>
 (9 bytes)
<writer thread='9219'/>
    629  113     n 0       java.lang.invoke.MethodHandle::linkToInterface(LLL)I (native)   (static)
<writer thread='40963'/>
                                @ 5   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
<writer thread='24323'/>
                              @ 90   java.lang.invoke.MethodTypeForm::findForm (25 bytes)
<writer thread='24579'/>
    629  114       3       java.lang.invoke.MethodType::parameterCount (6 bytes)
<writer thread='24323'/>
                                @ 3   java.lang.invoke.MethodTypeForm::canonicalize (64 bytes)   callee is too large
<writer thread='40963'/>
                              @ 74   java.lang.invoke.MemberName::getClassLoader (8 bytes)
                                @ 4   java.lang.Class::getClassLoader (28 bytes)   force inline by annotation
<writer thread='24323'/>
                                @ 16   java.lang.invoke.MethodTypeForm::&lt;init&gt; (322 bytes)   callee is too large
<writer thread='40963'/>
                                  @ 1   java.lang.Class::getClassLoader0 (5 bytes)
<writer thread='24323'/>
                                @ 21   java.lang.invoke.MethodType::form (5 bytes)
<writer thread='24579'/>
    630  116       3       java.lang.invoke.MethodType::checkSlotCount (33 bytes)
                              @ 13   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
<writer thread='40963'/>
             
<writer thread='24579'/>
             
<writer thread='40963'/>
                     @ 11  
<writer thread='24579'/>
             
<writer thread='40963'/>
 java.lang.System::getSecurityManager
<writer thread='24323'/>
             
<writer thread='24579'/>
      @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
<writer thread='40963'/>
 (12 bytes)
<writer thread='24323'/>
                 @ 101   java.lang.invoke.MethodType$ConcurrentWeakInternSet::add (66 bytes)   callee is too large
<writer thread='24579'/>
                   
<writer thread='40963'/>
             
<writer thread='24579'/>
           
<writer thread='40963'/>
                       @ 0  
<writer thread='24579'/>
@ 18  
<writer thread='40963'/>
 java.lang.System::
<writer thread='24579'/>
 java.lang.StringBuilder::
<writer thread='40963'/>
allowSecurityManager (13 bytes)
<writer thread='24579'/>
append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 22   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
                              @ 25   java.lang.StringBuilder::toString (35 bytes)
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
<writer thread='40963'/>
                                  @ 20   jdk.internal.reflect.Reflection::getCallerClass (0 bytes)   native method
                                  @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)   callee is too large
<writer thread='24579'/>
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
                                  @ 9  
<writer thread='40963'/>
             
<writer thread='24579'/>
 java.util.Arrays::copyOfRange
<writer thread='40963'/>
                 @ 77  
<writer thread='24579'/>
 (64 bytes)   callee is too large
<writer thread='40963'/>
 java.lang.invoke.MethodType::fromDescriptor (90 bytes)   callee is too large
<writer thread='24579'/>
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
                              @ 28   java.lang.invoke.MethodHandleStatics::
<writer thread='40963'/>
                              @ 126   java.lang.invoke.MethodType::makeImpl (108 bytes)
<writer thread='24579'/>
newIllegalArgumentException
<writer thread='40963'/>
   callee is too large
<writer thread='24579'/>
 (9 bytes)
                                @ 5   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
<writer thread='42755'/>
    633  115       1       java.lang.invoke.LambdaForm$Name::index (5 bytes)
    634  117       1       jdk.internal.org.objectweb.asm.SymbolTable::getMajorVersion (5 bytes)
<writer thread='9219'/>
    643  118     n 0       java.lang.Object::getClass (native)   
<writer thread='24579'/>
    643  119       1       sun.nio.fs.UnixPath::getFileSystem (5 bytes)
<writer thread='24323'/>
    646  120       1       java.util.HashMap::size (5 bytes)
<writer thread='40963'/>
    646  121       3       java.lang.StringUTF16::compress (50 bytes)
<writer thread='24323'/>
    646  122       3       java.io.DataInputStream::readUTF (501 bytes)
<writer thread='24579'/>
    647  123       3       java.util.AbstractCollection::&lt;init&gt; (5 bytes)
<writer thread='42755'/>
    647  124       3       java.util.HashMap::putVal (300 bytes)
<writer thread='24579'/>
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
                              @ 1   java.io.DataInputStream::readUnsignedShort (39 bytes)   callee is too large
<writer thread='24579'/>
    648  126       3       java.util.HashMap::newNode (13 bytes)
<writer thread='42755'/>
                              @ 20   java.util.HashMap::resize (356 bytes)   callee is too large
<writer thread='24323'/>
                              @ 87   java.io.DataInputStream::readFully (63 bytes)   callee is too large
<writer thread='42755'/>
                              @ 56   java.util.HashMap::
<writer thread='24579'/>
                              @ 9  
<writer thread='42755'/>
newNode
<writer thread='24579'/>
 java.util.HashMap$Node::
<writer thread='40963'/>
    648  131       3       java.util.HashMap$HashIterator::nextNode (100 bytes)
<writer thread='24579'/>
&lt;init&gt;
<writer thread='42755'/>
 (13 bytes)
<writer thread='24579'/>
 (26 bytes)
<writer thread='24323'/>
                              @ 259  java/io/UTFDataFormatException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24579'/>
                                @ 1  
<writer thread='42755'/>
             
<writer thread='24579'/>
 java.lang.Object::
<writer thread='42755'/>
             
<writer thread='24579'/>
&lt;init&gt;
<writer thread='42755'/>
      @ 9  
<writer thread='24579'/>
 (1 bytes)
<writer thread='42755'/>
 java.util.HashMap$Node::
<writer thread='24323'/>
             
<writer thread='40963'/>
             
<writer thread='24323'/>
        
<writer thread='40963'/>
                 
<writer thread='24323'/>
         @ 291  
<writer thread='40963'/>
@ 23  
<writer thread='42755'/>
&lt;init&gt;
<writer thread='24323'/>
 java.lang.StringBuilder::
<writer thread='40963'/>
java/util/ConcurrentModificationException::
<writer thread='42755'/>
 (26 bytes)
<writer thread='24323'/>
&lt;init&gt;
<writer thread='40963'/>
&lt;init&gt;
<writer thread='24323'/>
 (7 bytes)
<writer thread='40963'/>
 (not loaded)   not inlineable
<writer thread='42755'/>
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
<writer thread='40963'/>
                              @ 35  java/util/NoSuchElementException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24323'/>
                              @ 296   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 301   java.lang.StringBuilder::append (8 bytes)
<writer thread='42755'/>
                              @ 91   java.lang.Object::equals
<writer thread='24323'/>
                   
<writer thread='42755'/>
 (11 bytes)   no static binding
<writer thread='24323'/>
             @ 2  
<writer thread='42755'/>

<writer thread='24323'/>
 java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
                              @ 304   java.lang.StringBuilder::toString (35 bytes)
<writer thread='42755'/>
                              @ 123   java.util.HashMap$TreeNode::putTreeVal (314 bytes)   not inlineable
<writer thread='24323'/>
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
<writer thread='42755'/>
                              @ 152   java.util.HashMap::newNode (13 bytes)
                                
<writer thread='24579'/>
    650  130       3       java.util.HashMap::put (13 bytes)
<writer thread='42755'/>
@ 9   java.util.HashMap$Node::&lt;init&gt; (26 bytes)
                                  @ 1   java.lang.Object::
<writer thread='24323'/>
             
<writer thread='42755'/>
&lt;init&gt; (1 bytes)
<writer thread='24323'/>
                   @ 16  
<writer thread='24579'/>
                              @ 2   java.util.HashMap::
<writer thread='24323'/>
 java.lang.StringLatin1::
<writer thread='24579'/>
hash (20 bytes)
<writer thread='24323'/>
newString (17 bytes)
<writer thread='24579'/>
                                
<writer thread='24323'/>
                                  @ 9  
<writer thread='24579'/>
@ 9  
<writer thread='24323'/>
 java.util.Arrays::
<writer thread='24579'/>
 java.lang.Object::
<writer thread='24323'/>
copyOfRange (64 bytes)   callee is too large
<writer thread='24579'/>
hashCode (0 bytes)   no static binding
<writer thread='24323'/>
                                  
<writer thread='42755'/>
             
<writer thread='24323'/>
@ 13  
<writer thread='42755'/>
                 @ 169  
<writer thread='24323'/>
 java.lang.String::&lt;init&gt; (15 bytes)
<writer thread='42755'/>
 java.util.HashMap::treeifyBin (110 bytes)   callee is too large
<writer thread='24579'/>
                              @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
<writer thread='24323'/>
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='42755'/>
                              @ 203   java.lang.Object::equals (11 bytes)   no static binding
                              @ 253   java.util.HashMap::afterNodeAccess (1 bytes)
<writer thread='24323'/>
                                @ 31  
<writer thread='42755'/>
                          
<writer thread='24323'/>
 java.lang.StringUTF16::
<writer thread='42755'/>
    @ 288  
<writer thread='24323'/>
newString
<writer thread='42755'/>
 java.util.HashMap::
<writer thread='24323'/>
 (50 bytes)   callee is too large
<writer thread='42755'/>
resize (356 bytes)   callee is too large
<writer thread='24323'/>
                              @ 307  java/io/UTFDataFormatException
<writer thread='42755'/>
                              @ 295  
<writer thread='24323'/>
::
<writer thread='42755'/>
 java.util.HashMap::
<writer thread='24323'/>
&lt;init&gt; (not loaded)   not inlineable
<writer thread='42755'/>
afterNodeInsertion (1 bytes)
<writer thread='24323'/>
                              @ 351  java/io/UTFDataFormatException::&lt;init&gt; (not loaded)   not inlineable
                              @ 403   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
<writer thread='40963'/>
    652  127       3       java.util.HashMap$Node::&lt;init&gt; (26 bytes)
<writer thread='24323'/>
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
<writer thread='40963'/>
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
                              @ 408   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 415   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
                              @ 418   java.lang.StringBuilder::toString (35 bytes)
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
<writer thread='24579'/>
    653  128       3       java.util.HashMap::afterNodeInsertion (1 bytes)
<writer thread='24323'/>
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
<writer thread='40963'/>
    654  132       3       java.util.HashMap$HashIterator::hasNext (13 bytes)
<writer thread='24323'/>
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24579'/>
    654  129       3       java.util.HashSet::add (20 bytes)
                              @ 8   java.util.HashMap::put (13 bytes)
<writer thread='24323'/>
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
<writer thread='24579'/>
                                @ 2   java.util.HashMap::hash (20 bytes)
<writer thread='24323'/>
                              @ 421  java/io/UTFDataFormatException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24579'/>
                                  @ 9  
<writer thread='24323'/>
                              
<writer thread='24579'/>
 java.lang.Object::
<writer thread='24323'/>
@ 469  
<writer thread='24579'/>
hashCode
<writer thread='24323'/>
 java.lang.StringBuilder::
<writer thread='24579'/>
 (0 bytes)   no static binding
<writer thread='24323'/>
&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
<writer thread='24579'/>
                                @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
<writer thread='24323'/>
                              @ 474   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
<writer thread='40963'/>
    655  125       3       java.util.AbstractSet::&lt;init&gt; (5 bytes)
<writer thread='24323'/>
                              @ 479   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
<writer thread='40963'/>
                              @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
<writer thread='24323'/>
                              @ 482   java.lang.StringBuilder::toString (35 bytes)
<writer thread='40963'/>
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='40963'/>
    656  140       3       java.io.DataInputStream::readUnsignedByte (22 bytes)
                              @ 4   java.io.InputStream::read (0 bytes)   no static binding
<writer thread='24323'/>
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
<writer thread='40963'/>
                              @ 16  java/io/EOFException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24323'/>
                              @ 485  java/io/UTFDataFormatException::&lt;init&gt; (not loaded)   not inlineable
                              @ 497   java.lang.String::&lt;init&gt; (14 bytes)
                                @ 7   java.lang.String::rangeCheck (9 bytes)
                                  @ 4   java.lang.String::checkBoundsOffCount (64 bytes)   callee is too large
                                @ 10   java.lang.String::&lt;init&gt; (74 bytes)   callee is too large
<writer thread='24579'/>
    657  134       3       jdk.internal.module.ModuleInfo$ConstantPool::checkIndex (21 bytes)
                              @ 16  jdk/internal/module/ModuleInfo::invalidModuleDescriptor (not loaded)   not inlineable
<writer thread='40963'/>
    658  141       3       jdk.internal.module.ModuleInfo$ConstantPool$Entry::&lt;init&gt; (10 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24579'/>
    659  142       3       java.util.HashMap$KeyIterator::next (8 bytes)
<writer thread='40963'/>
    659  133       3       jdk.internal.misc.Unsafe::allocateUninitializedArray (55 bytes)
<writer thread='24579'/>
                              @ 1   java.util.HashMap$HashIterator::nextNode (100 bytes)   callee is too large
<writer thread='40963'/>
                              @ 11   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 16   java.lang.Class::isPrimitive (0 bytes)   intrinsic
                              @ 29   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 44   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
<writer thread='24579'/>
    660  154       3       jdk.internal.module.ModuleInfo$ConstantPool::checkUnqualifiedName (131 bytes)
<writer thread='40963'/>
                              @ 51   jdk.internal.misc.Unsafe::allocateUninitializedArray0 (90 bytes)   callee is too large
<writer thread='24579'/>
                              @ 1   java.lang.String::length (11 bytes)
                                @ 6   java.lang.String::coder (15 bytes)
                              @ 15   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
                              @ 19   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 24   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 28   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
                              @ 33   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 36   java.lang.StringBuilder::toString (35 bytes)
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
<writer thread='40963'/>
    663  144       3       java.io.DataInputStream::readFully (63 bytes)
<writer thread='24579'/>
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
<writer thread='40963'/>
                              @ 8  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24579'/>
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
<writer thread='40963'/>
               !              @ 34   java.io.InputStream::read (81 bytes)   no static binding
<writer thread='24579'/>
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
<writer thread='40963'/>
                              @ 48  java/io/EOFException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24579'/>
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
                              @ 39  jdk/internal/module/ModuleInfo::invalidModuleDescriptor (not loaded)   not inlineable
                              @ 56   java.lang.String::charAt (25 bytes)
                                @ 1   java.lang.String::isLatin1 (19 bytes)
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)
                                  @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                                @ 21   java.lang.StringUTF16::charAt (11 bytes)
                                  @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
                                    @ 2   java.lang.StringUTF16::length (5 bytes)
                                    @ 5   java.lang.String::checkIndex (48 bytes)   callee is too large
                                  @ 7   java.lang.StringUTF16::getChar (60 bytes)   intrinsic
                              @ 86   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
<writer thread='40963'/>
    666  157       3       java.lang.CharacterData::of (120 bytes)
<writer thread='24579'/>
                              @ 90   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 95   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 99   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
                              @ 104   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 109   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (77 bytes)   callee is too large
                              @ 114   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 117   java.lang.StringBuilder::toString (35 bytes)
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
                              @ 120  jdk/internal/module/ModuleInfo::invalidModuleDescriptor (not loaded)   not inlineable
<writer thread='42755'/>
    670  168       3       java.util.ImmutableCollections$SetN::probe (56 bytes)
<writer thread='40963'/>
    670  166       3       java.lang.Character::isJavaIdentifierPart (9 bytes)
<writer thread='42755'/>
                              @ 1   java.lang.Object::hashCode (0 bytes)   no static binding
<writer thread='40963'/>
                              @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
<writer thread='42755'/>
                              @ 9   java.lang.Math::floorMod
<writer thread='40963'/>
             
<writer thread='42755'/>
 (20 bytes)
<writer thread='40963'/>
                 @ 5   java.lang.CharacterData::isJavaIdentifierPart (0 bytes)   no static binding
<writer thread='42755'/>
                              @ 31   java.lang.Object::equals (11 bytes)   no static binding
<writer thread='40963'/>
    671  169       3       java.util.ImmutableCollections$SetN::hashCode (46 bytes)
                              @ 33   java.lang.Object::hashCode (0 bytes)   no static binding
    674  170       3       java.util.HashMap::resize (356 bytes)
<writer thread='42755'/>
    675  167       3       java.lang.CharacterDataLatin1::isJavaIdentifierPart (20 bytes)
                              @ 2   java.lang.CharacterDataLatin1::getProperties (11 bytes)
<writer thread='40963'/>
                              @ 217   java.util.HashMap$TreeNode::split (218 bytes)   not inlineable
<writer thread='42755'/>
    676  139       3       java.util.AbstractMap::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
    677  146       3       java.lang.String::checkBoundsOffCount (64 bytes)
                              @ 23   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
                              @ 29   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 33   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
                              @ 39   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 43   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
                              @ 49   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 53   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
                              @ 56   java.lang.StringBuilder::toString (35 bytes)
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
                              @ 59  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
    689  183       3       java.util.HashMap$HashIterator::&lt;init&gt; (79 bytes)
<writer thread='39683'/>
    689  135       4       java.lang.StringLatin1::hashCode (42 bytes)
<writer thread='25603'/>
    689  181       4       java.lang.StringUTF16::compress (50 bytes)
<writer thread='42755'/>
                              @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='39683'/>
<writer thread='25603'/>
<writer thread='42755'/>
    694  174       3       java.util.HashMap::getNode (148 bytes)
<writer thread='24323'/>
    694  152  s    3       java.io.BufferedInputStream::read (113 bytes)
<writer thread='40963'/>
    694  158       3       java.lang.CharacterDataLatin1::getProperties (11 bytes)
<writer thread='24323'/>
                              @ 1   java.io.BufferedInputStream::getBufIfOpen (21 bytes)
                                @ 15  
<writer thread='40963'/>
    695  190       3       java.util.HashMap::keysToArray (81 bytes)
<writer thread='24323'/>
java/io/IOException::
<writer thread='24579'/>
    695  162       3       java.lang.Math::floorMod (20 bytes)
<writer thread='24323'/>
&lt;init&gt; (not loaded)   not inlineable
<writer thread='42755'/>
                              @ 59   java.lang.Object::equals (11 bytes)   no static binding
<writer thread='24323'/>
                              @ 26  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='42755'/>
                              @ 94   java.util.HashMap$TreeNode::getTreeNode (22 bytes)   not inlineable
<writer thread='24323'/>
                              @ 49   java.io.BufferedInputStream::read1 (108 bytes)   callee is too large
<writer thread='42755'/>
                              @ 126   java.lang.Object::equals (11 bytes)   no static binding
<writer thread='24323'/>
                              @ 101   java.io.InputStream::available (2 bytes)   no static binding
<writer thread='24579'/>
    697  145       3       java.lang.StringUTF16::compress (20 bytes)
                              @ 9   java.lang.StringUTF16::compress (50 bytes)   callee is too large
    699  164       3       jdk.internal.module.ModuleInfo$ConstantPool::getUtf8 (54 bytes)
                              @ 2   jdk.internal.module.ModuleInfo$ConstantPool::checkIndex (21 bytes)
                                
<writer thread='40963'/>
    700  196       3       java.util.AbstractCollection::addAll (42 bytes)
<writer thread='24579'/>
@ 16  jdk/internal/module/ModuleInfo::invalidModuleDescriptor (not loaded)   not inlineable
<writer thread='40963'/>
                              @ 3   java.util.Collection::iterator (0 bytes)   no static binding
<writer thread='24579'/>
                              @ 24   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
<writer thread='40963'/>
                              @ 10   java.util.Iterator::hasNext (0 bytes)   no static binding
<writer thread='24579'/>
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
<writer thread='40963'/>
                              @ 19   java.util.Iterator::next (0 bytes)   no static binding
                              @ 29  
<writer thread='24579'/>
                              @ 29   java.lang.StringBuilder::append (8 bytes)
<writer thread='40963'/>
 java.util.AbstractCollection::add (8 bytes)   no static binding
<writer thread='24579'/>
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 33   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
                              @ 36   java.lang.StringBuilder::toString (35 bytes)
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
                              @ 39  jdk/internal/module/ModuleInfo::invalidModuleDescriptor (not loaded)   not inlineable
<writer thread='24323'/>
    703  160       3       java.lang.Character::codePointAt (51 bytes)
<writer thread='40963'/>
    703  161       3       java.lang.Character::isHighSurrogate (18 bytes)
<writer thread='24323'/>
                              @ 2   java.lang.CharSequence::charAt (0 bytes)   no static binding
                              @ 9   java.lang.Character::isHighSurrogate (18 bytes)
                              @ 20   java.lang.CharSequence::length (0 bytes)   no static binding
                              @ 30   java.lang.CharSequence::charAt (0 bytes)   no static binding
                              @ 37   java.lang.Character::isLowSurrogate (18 bytes)
                              @ 45   java.lang.Character::toCodePoint (10 bytes)
<writer thread='42755'/>
    705  149       3       java.lang.String::&lt;init&gt; (74 bytes)
<writer thread='40963'/>
    705  150       3       jdk.internal.module.ModuleInfo$ConstantPool$ValueEntry::&lt;init&gt; (11 bytes)
                              @ 2   jdk.internal.module.ModuleInfo$ConstantPool$Entry::&lt;init&gt; (10 bytes)
<writer thread='42755'/>
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='40963'/>
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='42755'/>
                              @ 36   java.lang.StringUTF16::compress (20 bytes)
                                @ 9   java.lang.StringUTF16::compress (50 bytes)   callee is too large
                              @ 67   java.lang.StringUTF16::toBytes (34 bytes)
                                @ 1   java.lang.StringUTF16::newBytesFor (61 bytes)   callee is too large
                                @ 20   java.lang.StringUTF16::putChar (54 bytes)   intrinsic
<writer thread='40963'/>
    706  147       3       java.lang.String::&lt;init&gt; (14 bytes)
                              @ 7   java.lang.String::rangeCheck (9 bytes)
                                @ 4   java.lang.String::checkBoundsOffCount (64 bytes)   callee is too large
                              @ 10   java.lang.String::&lt;init&gt; (74 bytes)   callee is too large
    709  148       3       java.lang.String::rangeCheck (9 bytes)
                              @ 4   java.lang.String::checkBoundsOffCount (64 bytes)   callee is too large
<writer thread='24323'/>
    711  153       3       java.io.BufferedInputStream::read1 (108 bytes)
<writer thread='24579'/>
    711  151       3       java.io.DataInputStream::readUTF (5 bytes)
<writer thread='40963'/>
    711  189       3       java.util.ImmutableCollections$ListN::get (7 bytes)
<writer thread='24579'/>
                              @ 1   java.io.DataInputStream::readUTF (501 bytes)   callee is too large
<writer thread='24323'/>
                              @ 18   java.io.BufferedInputStream::getBufIfOpen (21 bytes)
<writer thread='42755'/>
    711  143       3       jdk.internal.module.ModuleInfo$ConstantPool$IndexEntry::&lt;init&gt; (11 bytes)
<writer thread='24323'/>
                                @ 15  java/io/IOException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='42755'/>
                              @ 2   jdk.internal.module.ModuleInfo$ConstantPool$Entry::&lt;init&gt; (10 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
                              @ 33   java.io.BufferedInputStream::getInIfOpen (21 bytes)
<writer thread='24579'/>
    712  155       3       java.lang.String::replace (42 bytes)
<writer thread='24323'/>
                                @ 15  java/io/IOException::
<writer thread='40963'/>
    712  156       3       jdk.internal.misc.Unsafe::allocateUninitializedArray0 (90 bytes)
<writer thread='24579'/>
                              @ 6  
<writer thread='24323'/>
&lt;init&gt; (not loaded)   not inlineable
               !              @ 39   java.io.InputStream::read (81 bytes)   no static binding
<writer thread='24579'/>
 java.lang.String::isLatin1 (19 bytes)
<writer thread='24323'/>
                              @ 44   java.io.BufferedInputStream::fill (203 bytes)   callee is too large
                              @ 80   java.io.BufferedInputStream::getBufIfOpen (21 bytes)
<writer thread='24579'/>
                              @ 18   java.lang.StringLatin1::replace (198 bytes)   callee is too large
<writer thread='24323'/>
                                @ 15  java/io/IOException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24579'/>
                              @ 30   java.lang.StringUTF16::replace (168 bytes)   callee is too large
<writer thread='24323'/>
                              @ 91   java.lang.System::arraycopy (0 bytes)   intrinsic
<writer thread='9219'/>
    714  201     n 0       java.lang.Thread::currentThread (native)   (static)
<writer thread='42755'/>
    714  175       3       java.lang.Integer::numberOfLeadingZeros (79 bytes)
<writer thread='39171'/>
    715  187       4       java.lang.StringLatin1::replace (198 bytes)
<writer thread='24579'/>
    717  182       3       java.util.HashMap::containsKey (18 bytes)
                              @ 2   java.util.HashMap::hash (20 bytes)
                                @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
<writer thread='40963'/>
    718  197       3       jdk.internal.module.ModuleInfo$ConstantPool::getPackageName (73 bytes)
                              @ 2   jdk.internal.module.ModuleInfo$ConstantPool::checkIndex (21 bytes)
                                @ 16  jdk/internal/module/ModuleInfo::invalidModuleDescriptor (not loaded)   not inlineable
                              @ 25   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
<writer thread='39171'/>
Inlining _isPrimitive on constant Class byte
<writer thread='40963'/>
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
<writer thread='42755'/>
    720  177       3       java.lang.Float::isNaN (12 bytes)
<writer thread='40963'/>
                              @ 30   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 34   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
                              @ 37   java.lang.StringBuilder::toString (35 bytes)
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
<writer thread='42755'/>
    721  184       3       java.util.Set::copyOf (27 bytes)
                              @ 17   java.util.HashSet::&lt;init&gt; (40 bytes)   callee is too large
<writer thread='40963'/>
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
<writer thread='24579'/>
    721  178       3       java.util.HashMap::tableSizeFor (32 bytes)
                              @ 4   java.lang.Integer::
<writer thread='24323'/>
    722  199       3       java.lang.module.ModuleDescriptor$Exports::hashCode (38 bytes)
<writer thread='40963'/>
                                  
<writer thread='24579'/>
numberOfLeadingZeros (79 bytes)   callee is too large
<writer thread='24323'/>
                              @ 4   java.util.Set::hashCode (0 bytes)   no static binding
<writer thread='40963'/>
@ 9   java.util.Arrays::
<writer thread='42755'/>
                              @ 20   java.util.HashSet::
<writer thread='40963'/>
copyOfRange (64 bytes)   callee is too large
<writer thread='24323'/>
                              @ 18   java.lang.String::hashCode (60 bytes)   callee is too large
<writer thread='40963'/>
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
<writer thread='39171'/>
<writer thread='24323'/>
                   
<writer thread='42755'/>
toArray (18 bytes)
<writer thread='40963'/>
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='42755'/>
                   
<writer thread='39171'/>
<writer thread='24323'/>
           @ 31   java.util.Set::hashCode (0 bytes)   no static binding
<writer thread='42755'/>
             @ 8   java.util.HashMap::size (5 bytes)
                                @ 14   java.util.HashMap::
<writer thread='39171'/>
<writer thread='40963'/>
        
<writer thread='42755'/>
keysToArray (81 bytes)   callee is too large
                              @ 23   java.util.Set::of (68 bytes)   callee is too large
<writer thread='39171'/>
<writer thread='40963'/>
                        @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
<writer thread='24579'/>
    724  179       3       java.util.HashMap::&lt;init&gt; (8 bytes)
<writer thread='39171'/>
<writer thread='40963'/>
                              
<writer thread='39171'/>
<writer thread='24579'/>
             
<writer thread='39171'/>
<writer thread='40963'/>
@ 40  jdk/internal/module/ModuleInfo::
<writer thread='39171'/>
<writer thread='24579'/>
             
<writer thread='40963'/>
invalidModuleDescriptor (not loaded)
<writer thread='39171'/>
<writer thread='24579'/>
    @ 4  
<writer thread='39171'/>
<writer thread='24579'/>
 java.util.HashMap::&lt;init&gt;
<writer thread='39171'/>
<writer thread='24579'/>
 (98 bytes)   callee is too large
<writer thread='39171'/>
<writer thread='40963'/>
   not inlineable
<writer thread='39171'/>
<writer thread='40963'/>
        
<writer thread='39171'/>
<writer thread='24579'/>

<writer thread='40963'/>
                      @ 52   jdk.internal.module.ModuleInfo$ConstantPool::getUtf8 (54 bytes)   callee is too large
                              @ 61   jdk.internal.module.ModuleInfo$ConstantPool::checkUnqualifiedName (131 bytes)   callee is too large
<writer thread='39171'/>
<writer thread='24323'/>
    725  180       3       java.util.HashMap::&lt;init&gt; (98 bytes)
<writer thread='40963'/>
                              @ 69   java.lang.String::replace (42 bytes)   callee is too large
<writer thread='24579'/>
    725  138       1       sun.nio.fs.NativeBuffer::address (5 bytes)
<writer thread='24323'/>
                              @ 1   java.util.AbstractMap::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='42755'/>
    726  205       3       java.lang.Enum::hashCode (5 bytes)
        
<writer thread='24323'/>
                              @ 16   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
<writer thread='42755'/>
                      @ 1  
<writer thread='24579'/>
    726  163       1       java.nio.Buffer::position (5 bytes)
<writer thread='42755'/>
 java.lang.Object::hashCode (0 bytes)   native method
<writer thread='24579'/>
    727  216   !   3       sun.nio.fs.UnixPath::initOffsets (189 bytes)
                              @ 12   sun.nio.fs.UnixPath::isEmpty (14 bytes)
<writer thread='42755'/>
    728  171       3       sun.nio.fs.UnixPath::&lt;init&gt; (15 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
<writer thread='42755'/>
    729  219       3       jdk.internal.module.ModuleInfo$ConstantPool::decodeModuleName (142 bytes)
<writer thread='24323'/>
                              @ 21   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 25   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
                              @ 28   java.lang.StringBuilder::toString (35 bytes)
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
                              @ 31   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
<writer thread='42755'/>
                              @ 1   java.lang.String::length (11 bytes)
<writer thread='24323'/>
                              @ 51   java.lang.Float::isNaN (12 bytes)
<writer thread='42755'/>
                                @ 6   java.lang.String::coder (15 bytes)
<writer thread='24323'/>
                              @ 91   java.util.HashMap::tableSizeFor (32 bytes)
                                @ 4   java.lang.Integer::numberOfLeadingZeros (79 bytes)   callee is too large
<writer thread='42755'/>
                              @ 13   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
                              @ 18   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
<writer thread='24323'/>
                              @ 65   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
<writer thread='42755'/>
                              @ 22   java.lang.StringBuilder::append (8 bytes)
<writer thread='24323'/>
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
<writer thread='42755'/>
                                @ 2   java.lang.AbstractStringBuilder::
<writer thread='24323'/>
             
<writer thread='42755'/>
append
<writer thread='24323'/>
      
<writer thread='42755'/>
 (55 bytes)   callee is too large
<writer thread='24323'/>
           @ 70   java.lang.StringBuilder::append (8 bytes)
<writer thread='42755'/>
                              @ 27   java.lang.StringBuilder::append (8 bytes)
<writer thread='24323'/>
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
<writer thread='42755'/>
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
<writer thread='40963'/>
    733  217       3       sun.nio.fs.UnixPath::getName (106 bytes)
<writer thread='24323'/>
                   
<writer thread='42755'/>
             
<writer thread='24323'/>
           @ 74   java.lang.StringBuilder::append (8 bytes)
                     
<writer thread='42755'/>
                 
<writer thread='24323'/>
         
<writer thread='42755'/>
@ 30   java.lang.StringBuilder::
<writer thread='24323'/>
  
<writer thread='40963'/>
        
<writer thread='42755'/>
toString
<writer thread='40963'/>
       !m  
<writer thread='42755'/>
 (35 bytes)
<writer thread='40963'/>
           @ 1   sun.nio.fs.UnixPath::
<writer thread='42755'/>

<writer thread='40963'/>
initOffsets (189 bytes)   callee is too large
<writer thread='24323'/>
@ 2   java.lang.AbstractStringBuilder::append (7 bytes)
<writer thread='42755'/>
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
<writer thread='40963'/>
                              @ 12   java.lang.IllegalArgumentException::
<writer thread='24323'/>
                              
<writer thread='40963'/>
&lt;init&gt;
<writer thread='24323'/>
    
<writer thread='40963'/>
 (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='24323'/>
@ 2  jdk/internal/math/FloatingDecimal::appendTo (not loaded)   not inlineable
             
<writer thread='40963'/>
                              
<writer thread='24323'/>
                 
<writer thread='40963'/>
@ 29  
<writer thread='24323'/>
@ 77  
<writer thread='40963'/>
 java.lang.IllegalArgumentException::&lt;init&gt;
<writer thread='24323'/>
 java.lang.StringBuilder::
<writer thread='40963'/>
 (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='24323'/>
toString (35 bytes)
<writer thread='42755'/>
                                
<writer thread='24323'/>
             
<writer thread='42755'/>
@ 16   java.lang.StringLatin1::newString
<writer thread='24323'/>
                 
<writer thread='42755'/>
 (17 bytes)
<writer thread='24323'/>
  @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
<writer thread='42755'/>
                                  @ 9   java.util.Arrays::copyOfRange
<writer thread='40963'/>
             
<writer thread='42755'/>
 (64 bytes)   callee is too large
<writer thread='40963'/>
                 @ 89   java.lang.System::arraycopy (0 bytes)   intrinsic
<writer thread='42755'/>
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
<writer thread='40963'/>
                              @ 97   sun.nio.fs.UnixPath::getFileSystem (5 bytes)
<writer thread='42755'/>
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
             
<writer thread='40963'/>
                              @ 102   sun.nio.fs.UnixPath::
<writer thread='24323'/>
                 
<writer thread='40963'/>
&lt;init&gt;
<writer thread='24323'/>
  @ 16  
<writer thread='40963'/>
 (15 bytes)
<writer thread='24323'/>
 java.lang.StringLatin1::newString (17 bytes)
<writer thread='40963'/>
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
                                  
<writer thread='42755'/>
                                @ 31  
<writer thread='24323'/>
@ 13   java.lang.String::
<writer thread='42755'/>
 java.lang.StringUTF16::
<writer thread='24323'/>
&lt;init&gt;
<writer thread='42755'/>
newString
<writer thread='24323'/>
 (15 bytes)
<writer thread='42755'/>
 (50 bytes)   callee is too large
<writer thread='24323'/>
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='42755'/>
                              @ 33  jdk/internal/module/ModuleInfo::invalidModuleDescriptor (not loaded)   not inlineable
                              @ 49   java.lang.String::codePointAt (50 bytes)   callee is too large
<writer thread='24323'/>
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
                              @ 80   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
<writer thread='42755'/>
                              @ 123   jdk.internal.module.ModuleInfo$ConstantPool::decodeModuleName (275 bytes)   callee is too large
                              @ 131   java.lang.Character::charCount (12 bytes)
                              @ 79   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
                              @ 84   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 88   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
                              @ 93   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 98   java.lang.Character::getName (118 bytes)   callee is too large
                              @ 101   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 104   java.lang.StringBuilder::toString (35 bytes)
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
                              @ 107  jdk/internal/module/ModuleInfo::invalidModuleDescriptor (not loaded)   not inlineable
<writer thread='40963'/>
    740  185       3       java.lang.Math::max (11 bytes)
    741  198       3       java.util.HashSet::&lt;init&gt; (40 bytes)
                              @ 1   java.util.AbstractSet::&lt;init&gt; (5 bytes)
                                @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 10   java.util.Collection::size (0 bytes)   no static binding
                              @ 24   java.lang.Math::max (11 bytes)
                              @ 27   java.util.HashMap::&lt;init&gt; (8 bytes)
                                @ 4   java.util.HashMap::&lt;init&gt; (98 bytes)   callee is too large
                              @ 35   java.util.AbstractCollection::addAll (42 bytes)   callee is too large
<writer thread='24579'/>
    745  223       3       java.lang.String::lastIndexOf (12 bytes)
                              @ 3   java.lang.String::length (11 bytes)
                                @ 6   java.lang.String::coder (15 bytes)
                              @ 8   java.lang.String::lastIndexOf (29 bytes)
                                @ 1   java.lang.String::isLatin1 (19 bytes)
                                @ 13   java.lang.StringLatin1::lastIndexOf (40 bytes)   callee is too large
                                @ 25   java.lang.StringUTF16::lastIndexOf (47 bytes)   callee is too large
<writer thread='40963'/>
    747  192       3       java.util.HashSet::iterator (13 bytes)
                              @ 4   java.util.HashMap::keySet (25 bytes)
                                @ 14   java.util.HashMap$KeySet::&lt;init&gt; (10 bytes)
                                  @ 6   java.util.AbstractSet::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 7   java.util.Set::iterator (0 bytes)   no static binding
<writer thread='24579'/>
    751  193       3       java.util.HashMap::keySet (25 bytes)
<writer thread='38403'/>
    751  191       4       java.io.DataInputStream::readUTF (501 bytes)
<writer thread='24579'/>
                              @ 14   java.util.HashMap$KeySet::&lt;init&gt; (10 bytes)
                                @ 6   java.util.AbstractSet::&lt;init&gt; (5 bytes)
                                  @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
    753  194       3       java.util.HashMap$KeySet::iterator (12 bytes)
                              @ 8   java.util.HashMap$KeyIterator::&lt;init&gt; (11 bytes)
                                @ 7   java.util.HashMap$HashIterator::&lt;init&gt; (79 bytes)   callee is too large
<writer thread='24579'/>
    755  227       3       java.util.Set::of (4 bytes)
    755  214       3       java.util.HashSet::contains (9 bytes)
                              @ 5   java.util.HashMap::containsKey (18 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
<writer thread='40963'/>
    756  224       3       java.lang.String::lastIndexOf (29 bytes)
<writer thread='24579'/>
                                  @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
<writer thread='40963'/>
                              @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='24579'/>
                                @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
<writer thread='24323'/>
    756  232       3       java.util.HashMap$ValueIterator::next (8 bytes)
                              @ 1   java.util.HashMap$HashIterator::nextNode (100 bytes)   callee is too large
<writer thread='40963'/>
                              @ 13   java.lang.StringLatin1::lastIndexOf (40 bytes)   callee is too large
<writer thread='42755'/>
    758  186       1       java.lang.module.ModuleDescriptor$Exports::source (5 bytes)
<writer thread='40963'/>
                              @ 25   java.lang.StringUTF16::lastIndexOf (47 bytes)   callee is too large
<writer thread='24579'/>
    759  195       3       java.util.HashMap$KeyIterator::&lt;init&gt; (11 bytes)
<writer thread='24323'/>
    759  210       3       java.util.HashMap$KeySet::&lt;init&gt; (10 bytes)
<writer thread='24579'/>
                              @ 7   java.util.HashMap$HashIterator::&lt;init&gt; (79 bytes)   callee is too large
<writer thread='24323'/>
                              @ 6   java.util.AbstractSet::&lt;init&gt; (5 bytes)
                                @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
             
<writer thread='42755'/>
    760  220       3       java.util.HashSet::size (8 bytes)
                              @ 4   java.util.HashMap::size (5 bytes)
<writer thread='24323'/>
                     @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24579'/>
    760  225       3       java.util.Set::of (68 bytes)
<writer thread='42755'/>
    761  226       3       java.util.HashMap::&lt;init&gt; (11 bytes)
                              @ 1   java.util.AbstractMap::&lt;init&gt; (5 bytes)
<writer thread='24579'/>
                              @ 41   java.util.ImmutableCollections$Set12::&lt;init&gt; (18 bytes)
<writer thread='42755'/>
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24579'/>
                                @ 1   java.util.ImmutableCollections$AbstractImmutableSet::&lt;init&gt; (5 bytes)
                                  @ 1   java.util.ImmutableCollections$AbstractImmutableCollection::&lt;init&gt;
<writer thread='40963'/>
    761  209       3       java.util.ImmutableCollections$Set12::hashCode (27 bytes)
<writer thread='24579'/>
 (5 bytes)
<writer thread='24323'/>
    761  234       3       jdk.internal.module.ModuleInfo$ConstantPool::getModuleName (63 bytes)
<writer thread='24579'/>
                                    @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
<writer thread='40963'/>
                              @ 4   java.lang.Object::hashCode (0 bytes)   no static binding
<writer thread='24579'/>
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='40963'/>
                              @ 22   java.lang.Object::hashCode (0 bytes)   no static binding
<writer thread='24323'/>
                              @ 2   jdk.internal.module.ModuleInfo$ConstantPool::checkIndex (21 bytes)
<writer thread='24579'/>
                                @ 6   java.util.Objects::requireNonNull (14 bytes)
                                  @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='42755'/>
    763  229       3       java.nio.Buffer::position (55 bytes)
<writer thread='24323'/>
                                @ 16  jdk/internal/module/ModuleInfo::invalidModuleDescriptor (not loaded)   not inlineable
<writer thread='24579'/>
                              @ 55   java.util.ImmutableCollections$Set12::&lt;init&gt; (53 bytes)   callee is too large
<writer thread='24323'/>
                              @ 25   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
<writer thread='42755'/>
                              @ 28   java.nio.Buffer::createPositionException (104 bytes)   callee is too large
<writer thread='40963'/>
    764  237       3       java.util.Collections$UnmodifiableCollection$1::hasNext (10 bytes)
<writer thread='24323'/>
                          
<writer thread='24579'/>
                              @ 64   java.util.ImmutableCollections$SetN::&lt;init&gt; (90 bytes)   callee is too large
<writer thread='24323'/>
      @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
                              @ 30   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 34   java.lang.StringBuilder::append (8 bytes)
<writer thread='40963'/>
                              @ 4   java.util.Iterator::hasNext (0 bytes)   no static binding
<writer thread='24323'/>
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
                              @ 37   java.lang.StringBuilder::toString (35 bytes)
<writer thread='40963'/>
    766  244       3       java.util.ImmutableCollections$SetN$SetNIterator::nextIndex (56 bytes)
<writer thread='24323'/>
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
<writer thread='42755'/>
    767  240       3       jdk.internal.module.ModuleInfo$ConstantPool::getClassName (73 bytes)
<writer thread='24323'/>
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='42755'/>
                              @ 2   jdk.internal.module.ModuleInfo$ConstantPool::checkIndex (21 bytes)
<writer thread='43011'/>

============================= C2-compiled nmethod ==============================
<opto_assembly compile_id='92'>
----------------------- MetaData before Compile_id = 92 ------------------------
{method}
 - this oop:          0x0000000121f04c28
 - method holder:     &apos;java/lang/StringLatin1&apos;
 - constants:         0x0000000121f02920 constant pool [372] {0x0000000121f02920} for &apos;java/lang/StringLatin1&apos; cache=0x0000000121f072b0
 - access:            0xc1000009  public static 
 - name:              &apos;indexOf&apos;
 - signature:         &apos;([BII)I&apos;
 - max stack:         3
 - max locals:        6
 - size of params:    3
 - method size:       13
 - highest level:     3
 - vtable index:      -2
 - i2i entry:         0x0000000105ef3de0
 - adapters:          AHE@0x00007f850a00f9f0: 0xbaa00000 i2c: 0x0000000105f3ad60 c2i: 0x0000000105f3ae49 c2iUV: 0x0000000105f3ae10 c2iNCI: 0x0000000105f3ae86
 - compiled entry     0x0000000106627500
 - code size:         61
 - code start:        0x0000000121f04b88
 - code end (excl):   0x0000000121f04bc5
 - method data:       0x000000012212a580
 - checked ex length: 0
 - linenumber start:  0x0000000121f04bc5
 - localvar length:   6
 - localvar start:    0x0000000121f04bde
 - compiled code: nmethod    768   19       3       java.lang.StringLatin1::indexOf (61 bytes)

------------------------ OptoAssembly for Compile_id = 92 -----------------------
#
#  int ( byte[int:&gt;=0]:exact *, int, int )
#
#r018 rsi:rsi   : parm 0: byte[int:&gt;=0]:exact *
#r016 rdx   : parm 1: int
#r010 rcx   : parm 2: int
# -- Old rsp -- Framesize: 64 --
#r583 rsp+60: in_preserve
#r582 rsp+56: return address
#r581 rsp+52: in_preserve
#r580 rsp+48: saved fp register
#r579 rsp+44: pad2, stack alignment
#r578 rsp+40: pad2, stack alignment
#r577 rsp+36: Fixed slot 1
#r576 rsp+32: Fixed slot 0
#r591 rsp+28: spill
#r590 rsp+24: spill
#r589 rsp+20: spill
#r588 rsp+16: spill
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N1: #	out( B1 ) &lt;- in( B38 B40 B39 B37 B30 )  Freq: 1

000     B1: #	out( B38 B2 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
000     # stack bang (256 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #48	# Create frame

00c     movl    RBP, RDX	# spill
00e     shrl    RBP, #8
011     testl   RBP, RBP
013     jne     B38  P=0.000000 C=2134.000000

019     B2: #	out( B40 B3 ) &lt;- in( B1 )  Freq: 1
019     movl    RBP, [RSI + #12 (8-bit)]	# range
01c     NullCheck RSI

01c     B3: #	out( B39 B4 ) &lt;- in( B2 )  Freq: 0.999999
01c     testl   RCX, RCX
01e     jl     B39  P=0.000000 C=879.000000

024     B4: #	out( B30 B5 ) &lt;- in( B3 )  Freq: 0.999998
024     movl    RAX, #-1	# int
029     cmpl    RCX, RBP
02b     jge     B30  P=0.048919 C=879.000000

031     B5: #	out( B37 B6 ) &lt;- in( B4 )  Freq: 0.951079
031     movsbl  RBX, RDX	# i2b
034     cmpl    RCX, RBP	# unsigned
036     jnb,u   B37  P=0.000001 C=-1.000000

03c     B6: #	out( B37 B7 ) &lt;- in( B5 )  Freq: 0.951078
03c     movl    R10, RBP	# spill
03f     decl    R10	# int
042     cmpl    R10, RBP	# unsigned
045     jnb,u   B37  P=0.000001 C=-1.000000

04b     B7: #	out( B8 ) &lt;- in( B6 )  Freq: 0.951077
04b     movl    R8, RCX	# spill
04e     incl    R8	# int

051     B8: #	out( B29 B9 ) &lt;- in( B7 B9 ) Loop( B8-B9 inner pre of N220) Freq: 1.8818
051     movsbl  R9, [RSI + #16 + RCX]	# byte
057     cmpl    R9, RBX
05a     je     B29  P=0.010816 C=17290.000000

060     B9: #	out( B8 B10 ) &lt;- in( B8 )  Freq: 1.86145
060     incl    RCX	# int
062     cmpl    RCX, R8
065     jl,s   B8	# loop end  P=0.500000 C=17103.000000

067     B10: #	out( B23 B11 ) &lt;- in( B9 )  Freq: 0.930724
067     movl    R9, RBP	# spill
06a     addl    R9, #-7	# int
06e     movl    R11, #-2147483648	# int
074     cmpl    R10, R9
077     cmovll R9, R11	# signed, int
07b     cmpl    RCX, R9
07e     jge     B23  P=0.000001 C=-1.000000

084     B11: #	out( B12 ) &lt;- in( B10 )  Freq: 0.930723
084     # castII of RCX
084     movl    R10, #8000	# int

08a     B12: #	out( B13 ) &lt;- in( B11 B22 ) Loop( B12-B22 ) Freq: 1.28271
08a     movl    RDI, R9	# spill
08d     subl    RDI, RCX	# int
08f     cmpl    RDI, R10
092     cmovlgt RDI, R10	# min
096     addl    RDI, RCX	# int
        nop 	# 8 bytes pad for loops and calls

0a0     B13: #	out( B29 B14 ) &lt;- in( B12 B21 ) Loop( B13-B21 inner main of N137 strip mined) Freq: 11.0121
0a0     movsbl  R11, [RSI + #16 + RCX]	# byte
0a6     cmpl    R11, RBX
0a9     je     B29  P=0.010816 C=17290.000000

0af     B14: #	out( B28 B15 ) &lt;- in( B13 )  Freq: 10.893
0af     movslq  R8, RCX	# i2l
0b2     movsbl  R11, [RSI + #17 + R8]	# byte
0b8     cmpl    R11, RBX
0bb     je,s   B28  P=0.010816 C=17290.000000

0bd     B15: #	out( B31 B16 ) &lt;- in( B14 )  Freq: 10.7752
0bd     movsbl  R11, [RSI + #18 + R8]	# byte
0c3     cmpl    R11, RBX
0c6     je     B31  P=0.010816 C=17290.000000

0cc     B16: #	out( B32 B17 ) &lt;- in( B15 )  Freq: 10.6586
0cc     movsbl  R11, [RSI + #19 + R8]	# byte
0d2     cmpl    R11, RBX
0d5     je,s   B32  P=0.010816 C=17290.000000

0d7     B17: #	out( B33 B18 ) &lt;- in( B16 )  Freq: 10.5433
0d7     movsbl  R11, [RSI + #20 + R8]	# byte
0dd     cmpl    R11, RBX
0e0     je,s   B33  P=0.010816 C=17290.000000

0e2     B18: #	out( B34 B19 ) &lt;- in( B17 )  Freq: 10.4293
0e2     movsbl  R11, [RSI + #21 + R8]	# byte
0e8     cmpl    R11, RBX
0eb     je,s   B34  P=0.010816 C=17290.000000

0ed     B19: #	out( B35 B20 ) &lt;- in( B18 )  Freq: 10.3165
0ed     movsbl  R11, [RSI + #22 + R8]	# byte
0f3     cmpl    R11, RBX
0f6     je,s   B35  P=0.010816 C=17290.000000

0f8     B20: #	out( B36 B21 ) &lt;- in( B19 )  Freq: 10.2049
0f8     movsbl  R11, [RSI + #23 + R8]	# byte
0fe     cmpl    R11, RBX
101     je,s   B36  P=0.010816 C=17290.000000

103     B21: #	out( B13 B22 ) &lt;- in( B20 )  Freq: 10.0946
103     addl    RCX, #8	# int
106     cmpl    RCX, RDI
108     jl,s   B13	# loop end  P=0.963822 C=17103.000000

10a     B22: #	out( B12 B23 ) &lt;- in( B21 )  Freq: 0.365203
10a     # TLS is in R15
10a     movq    R11, [R15 + #296 (32-bit)]	# ptr
111     testl   rax, [R11]	# Safepoint: poll for GC        # java.lang.StringLatin1::indexOf @ bci:56  L[0]=RSI L[1]=_ L[2]=_ L[3]=RBP L[4]=RBX L[5]=RCX
        # OopMap {rsi=Oop off=273/0x111}
114     cmpl    RCX, R9
117     jl     B12  P=0.963822 C=17103.000000

11d     B23: #	out( B30 B24 ) &lt;- in( B10 B22 )  Freq: 0.0132133
11d     cmpl    RCX, RBP
11f     jge,s   B30  P=0.500000 C=-1.000000

121     B24: #	out( B25 ) &lt;- in( B23 )  Freq: 0.00660666
121     # castII of RCX
        nop 	# 3 bytes pad for loops and calls

124     B25: #	out( B29 B26 ) &lt;- in( B24 B26 ) Loop( B25-B26 inner post of N220) Freq: 0.0130719
124     movsbl  R10, [RSI + #16 + RCX]	# byte
12a     cmpl    R10, RBX
12d     je,s   B29  P=0.010816 C=17290.000000

12f     B26: #	out( B25 B27 ) &lt;- in( B25 )  Freq: 0.0129306
12f     incl    RCX	# int
131     cmpl    RCX, RBP
133     jl,s   B25	# loop end  P=0.500000 C=17103.000000

135     B27: #	out( B30 ) &lt;- in( B26 )  Freq: 0.00646528
135     jmp,s   B30

137     B28: #	out( B29 ) &lt;- in( B14 )  Freq: 0.117813
137     incl    RCX	# int

139     B29: #	out( B30 ) &lt;- in( B25 B8 B13 B33 B31 B35 B28 B34 B32 B36 )  Freq: 0.938005
139     movl    RAX, RCX	# spill

13b     B30: #	out( N1 ) &lt;- in( B4 B29 B27 B23 )  Freq: 0.999996
13b     addq    rsp, 48	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

14a     ret

14b     B31: #	out( B29 ) &lt;- in( B15 )  Freq: 0.116539
14b     addl    RCX, #2	# int
14e     jmp,s   B29

150     B32: #	out( B29 ) &lt;- in( B16 )  Freq: 0.115278
150     addl    RCX, #3	# int
153     jmp,s   B29

155     B33: #	out( B29 ) &lt;- in( B17 )  Freq: 0.114032
155     addl    RCX, #4	# int
158     jmp,s   B29

15a     B34: #	out( B29 ) &lt;- in( B18 )  Freq: 0.112798
15a     addl    RCX, #5	# int
15d     jmp,s   B29

15f     B35: #	out( B29 ) &lt;- in( B19 )  Freq: 0.111578
15f     addl    RCX, #6	# int
162     jmp,s   B29

164     B36: #	out( B29 ) &lt;- in( B20 )  Freq: 0.110372
164     addl    RCX, #7	# int
167     jmp,s   B29

169     B37: #	out( N1 ) &lt;- in( B6 B5 )  Freq: 1.92742e-06
169     movq    [rsp + #0], RSI	# spill
16d     movl    [rsp + #8], RBX	# spill
171     movl    [rsp + #16], RCX	# spill
175     movl    RSI, #-138	# int
        nop 	# 1 bytes pad for loops and calls
17b     call,static  wrapper for: uncommon_trap(reason=&apos;predicate&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.StringLatin1::indexOf @ bci:38  L[0]=rsp + #0 L[1]=_ L[2]=_ L[3]=RBP L[4]=rsp + #8 L[5]=rsp + #16 STK[0]=rsp + #16 STK[1]=RBP
        # OopMap {[0]=Oop off=384/0x180}
180     ud2	# ShouldNotReachHere

194     B38: #	out( N1 ) &lt;- in( B1 )  Freq: 5e-07
194     movq    [rsp + #0], RSI	# spill
198     movl    [rsp + #8], RCX	# spill
19c     movl    [rsp + #12], RDX	# spill
1a0     movl    RSI, #-187	# int
        nop 	# 2 bytes pad for loops and calls
1a7     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.lang.StringLatin1::canEncode @ bci:4  L[0]=_ STK[0]=RBP
        # java.lang.StringLatin1::indexOf @ bci:1  L[0]=rsp + #0 L[1]=rsp + #12 L[2]=rsp + #8 L[3]=_ L[4]=_ L[5]=_
        # OopMap {[0]=Oop off=428/0x1ac}
1ac     ud2	# ShouldNotReachHere

1c0     B39: #	out( N1 ) &lt;- in( B3 )  Freq: 4.76836e-07
1c0     movq    [rsp + #0], RSI	# spill
1c4     movl    [rsp + #12], RCX	# spill
1c8     movl    [rsp + #16], RDX	# spill
1cc     movl    RSI, #-187	# int
        nop 	# 2 bytes pad for loops and calls
1d3     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.lang.StringLatin1::indexOf @ bci:13  L[0]=rsp + #0 L[1]=rsp + #16 L[2]=rsp + #12 L[3]=RBP L[4]=_ L[5]=_ STK[0]=rsp + #12
        # OopMap {[0]=Oop off=472/0x1d8}
1d8     ud2	# ShouldNotReachHere

1ec     B40: #	out( N1 ) &lt;- in( B2 )  Freq: 1.01328e-06
1ec     movl    RSI, #-10	# int
        nop 	# 2 bytes pad for loops and calls
1f3     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.StringLatin1::indexOf @ bci:10  L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=#NULL
        # OopMap {off=504/0x1f8}
1f8     ud2	# ShouldNotReachHere

--------------------------------------------------------------------------------
</opto_assembly>
<writer thread='40963'/>
    774  242       1       java.util.HashMap$Node::getKey (5 bytes)
<writer thread='24323'/>
             
<writer thread='24579'/>
    774  243       1       java.util.HashMap$Node::getValue (5 bytes)
<writer thread='42755'/>
                              
<writer thread='38403'/>
<writer thread='24323'/>
                   
<writer thread='38403'/>
<writer thread='9219'/>
    774  245     n 0       java.lang.invoke.MethodHandle::linkToInterface(LL)L (native)   (static)
<writer thread='42755'/>
  @ 16  
<writer thread='38403'/>
<writer thread='24323'/>
@ 31  
<writer thread='38403'/>
<writer thread='24323'/>
 java.lang.StringUTF16::
<writer thread='42755'/>
jdk/internal/module/ModuleInfo
<writer thread='24323'/>
newString
<writer thread='42755'/>
::
<writer thread='40963'/>
    774  230       3       java.util.ImmutableCollections$AbstractImmutableCollection::&lt;init&gt; (5 bytes)
<writer thread='24323'/>
 (50 bytes)   callee is too large
<writer thread='38403'/>
<writer thread='42755'/>
invalidModuleDescriptor
<writer thread='24323'/>
        
<writer thread='38403'/>
<writer thread='40963'/>
             
<writer thread='24323'/>
                      
<writer thread='38403'/>
<writer thread='42755'/>
 (not loaded)   not inlineable
<writer thread='38403'/>
<writer thread='40963'/>
                 
<writer thread='24323'/>
@ 40  
<writer thread='24579'/>
    775  241       3       java.nio.ByteBuffer::position (8 bytes)
<writer thread='40963'/>
@ 1  
<writer thread='38403'/>
<writer thread='24323'/>
jdk/internal/module/ModuleInfo
<writer thread='40963'/>
 java.util.AbstractCollection::
<writer thread='38403'/>
<writer thread='40963'/>
&lt;init&gt; (5 bytes)
<writer thread='24323'/>
::
<writer thread='38403'/>
<writer thread='24579'/>
             
<writer thread='24323'/>
invalidModuleDescriptor
<writer thread='42755'/>
             
<writer thread='24579'/>
      
<writer thread='38403'/>
<writer thread='24323'/>
 (not loaded)
<writer thread='42755'/>
      
<writer thread='24579'/>
  
<writer thread='38403'/>
<writer thread='40963'/>
             
<writer thread='24579'/>
         @ 2  
<writer thread='42755'/>
  
<writer thread='24579'/>
 java.nio.Buffer::
<writer thread='24323'/>
   not inlineable
<writer thread='42755'/>
         
<writer thread='38403'/>
<writer thread='24579'/>
position
<writer thread='42755'/>
@ 25   java.lang.StringBuilder::
<writer thread='40963'/>
        
<writer thread='24579'/>
 (55 bytes)
<writer thread='38403'/>
<writer thread='40963'/>
     
<writer thread='24579'/>
   callee is too large
<writer thread='38403'/>
<writer thread='24323'/>
                          
<writer thread='40963'/>
      @ 1  
<writer thread='38403'/>
<writer thread='42755'/>
&lt;init&gt;
<writer thread='24323'/>
    
<writer thread='40963'/>
 java.lang.Object::
<writer thread='42755'/>
 (7 bytes)
<writer thread='38403'/>
<writer thread='40963'/>
&lt;init&gt; (1 bytes)
<writer thread='38403'/>
<writer thread='24323'/>
@ 52   jdk.internal.module.ModuleInfo$ConstantPool::
<writer thread='38403'/>
<writer thread='42755'/>
             
<writer thread='38403'/>
<writer thread='24323'/>
getUtf8
<writer thread='38403'/>
<writer thread='42755'/>
        
<writer thread='38403'/>
<writer thread='24323'/>
 (54 bytes)   callee is too large
<writer thread='38403'/>
<writer thread='24323'/>

<writer thread='38403'/>
<writer thread='24323'/>
             
<writer thread='38403'/>
<writer thread='24323'/>
        
<writer thread='38403'/>
<writer thread='42755'/>
           @ 3  
<writer thread='24323'/>
         
<writer thread='38403'/>
<writer thread='42755'/>
 java.lang.AbstractStringBuilder::
<writer thread='38403'/>
<writer thread='24579'/>
    776  218       3       java.lang.ThreadLocal::getMap (5 bytes)
<writer thread='38403'/>
<writer thread='42755'/>
&lt;init&gt;
<writer thread='38403'/>
<writer thread='24323'/>
@ 59  
<writer thread='38403'/>
<writer thread='24579'/>
    779  221       3       java.lang.ThreadLocal::get (38 bytes)
<writer thread='24323'/>
 jdk.internal.module.ModuleInfo$ConstantPool::decodeModuleName (142 bytes)   callee is too large
<writer thread='38403'/>
<writer thread='40963'/>
    779  222       3       java.lang.ThreadLocal$ThreadLocalMap::getEntry (42 bytes)
<writer thread='38403'/>
<writer thread='42755'/>
 (39 bytes)   callee is too large
<writer thread='38403'/>
<writer thread='42755'/>
                              @ 30   java.lang.StringBuilder::append (8 bytes)
<writer thread='24579'/>
                              @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
<writer thread='42755'/>
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
<writer thread='24579'/>
                              @ 6   java.lang.ThreadLocal::getMap (5 bytes)
<writer thread='42755'/>
                              @ 34   java.lang.StringBuilder::append (8 bytes)
<writer thread='40963'/>
                              @ 25  
<writer thread='42755'/>
                          
<writer thread='40963'/>
 java.lang.ref.Reference::
<writer thread='42755'/>
      
<writer thread='24579'/>
        
<writer thread='40963'/>
get
<writer thread='42755'/>
@ 2  
<writer thread='24579'/>
     
<writer thread='40963'/>
 (5 bytes)
<writer thread='42755'/>
 java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
<writer thread='24579'/>
                 @ 16   java.lang.ThreadLocal$ThreadLocalMap::
<writer thread='40963'/>
   intrinsic
<writer thread='24579'/>
getEntry (42 bytes)   callee is too large
<writer thread='42755'/>
                              @ 37   java.lang.StringBuilder::toString (35 bytes)
<writer thread='40963'/>
                              @ 38   java.lang.ThreadLocal$ThreadLocalMap::
<writer thread='24579'/>
                              @ 34   java.lang.ThreadLocal::setInitialValue
<writer thread='42755'/>
                     
<writer thread='24579'/>
 (50 bytes)
<writer thread='40963'/>
getEntryAfterMiss
<writer thread='24579'/>
   callee is too large
<writer thread='42755'/>
           
<writer thread='40963'/>
 (63 bytes)   callee is too large
<writer thread='42755'/>
@ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
<writer thread='24579'/>

<writer thread='42755'/>
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
                              @ 40  jdk/internal/module/ModuleInfo::invalidModuleDescriptor (not loaded)   not inlineable
<writer thread='24579'/>
    782  172       1       java.nio.Buffer::limit (5 bytes)
<writer thread='40963'/>
    782  231       3       jdk.internal.misc.Unsafe::checkPrimitivePointer (19 bytes)
<writer thread='42755'/>
                              @ 52   jdk.internal.module.ModuleInfo$ConstantPool::getUtf8 (54 bytes)   callee is too large
             
<writer thread='40963'/>
             
<writer thread='42755'/>
                 
<writer thread='40963'/>
                 @ 3  
<writer thread='42755'/>
@ 61  
<writer thread='40963'/>
 jdk.internal.misc.Unsafe::
<writer thread='42755'/>
 jdk.internal.module.ModuleInfo$ConstantPool::
<writer thread='40963'/>
checkPointer
<writer thread='42755'/>
checkUnqualifiedName (131 bytes)   callee is too large
<writer thread='40963'/>
 (19 bytes)
<writer thread='42755'/>
                              @ 69   java.lang.String::replace (42 bytes)   callee is too large
<writer thread='40963'/>
                                @ 6   jdk.internal.misc.Unsafe::checkNativeAddress (28 bytes)
<writer thread='24579'/>
    783  212       1       java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
<writer thread='40963'/>
                                @ 15   jdk.internal.misc.Unsafe::checkOffset (32 bytes)   callee is too large
                              @ 12   java.lang.Object::getClass (0 bytes)   intrinsic
<writer thread='24579'/>
    784  202       1       sun.nio.fs.UnixFileSystem::provider (5 bytes)
<writer thread='40963'/>
                              @ 15   jdk.internal.misc.Unsafe::checkPrimitiveArray (22 bytes)
                                @ 1   java.lang.Class::getComponentType (14 bytes)
                                  @ 1   java.lang.Class::isArray (0 bytes)   native method
<writer thread='24579'/>
    784  235       1       java.lang.module.ModuleReference::descriptor (5 bytes)
<writer thread='40963'/>
                                @ 10   java.lang.Class::isPrimitive (0 bytes)   intrinsic
                                @ 17   jdk.internal.misc.Unsafe::invalidInput (8 bytes)
                                  @ 4   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='24579'/>
    785  228       1       java.lang.module.ModuleDescriptor$Requires::name (5 bytes)
    785  246       3       java.lang.module.ModuleDescriptor$Requires::hashCode (63 bytes)
                              @ 4   java.lang.String::hashCode (60 bytes)   callee is too large
                              @ 14   java.util.Set::hashCode (0 bytes)   no static binding
                              @ 36  java/lang/module/ModuleDescriptor$Version::hashCode (not loaded)   not inlineable
                              @ 56   java.lang.String::hashCode (60 bytes)   callee is too large
<writer thread='24323'/>
    787  215       1       java.util.concurrent.locks.ReentrantReadWriteLock::readLock (5 bytes)
    787  136       3       java.lang.System::getSecurityManager (12 bytes)
                              @ 0   java.lang.System::allowSecurityManager (13 bytes)
<writer thread='24579'/>
    789  137       3       java.lang.System::allowSecurityManager (13 bytes)
<writer thread='24323'/>
    789  204       1       sun.nio.fs.UnixFileSystem::needToResolveAgainstDefaultDirectory (5 bytes)
<writer thread='40963'/>
    790  247       3       java.util.Objects::hashCode (13 bytes)
<writer thread='24323'/>
    790  206       1       sun.nio.fs.NativeBuffer::size (5 bytes)
<writer thread='24579'/>
    790  207       1       sun.nio.fs.NativeBuffer::owner (5 bytes)
<writer thread='40963'/>
                              @ 5   java.lang.Object::hashCode (0 bytes)   no static binding
<writer thread='24323'/>
    790  208       1       sun.nio.fs.NativeBuffer::setOwner (6 bytes)
<writer thread='42755'/>
    791  213       1       java.nio.Buffer::capacity (5 bytes)
<writer thread='24579'/>
    791  236       1       java.lang.module.ModuleDescriptor::name (5 bytes)
    792  248       3       java.util.ImmutableCollections$AbstractImmutableList::hashCode (36 bytes)
                              @ 5   java.util.AbstractCollection::size (0 bytes)   no static binding
<writer thread='40963'/>
    792  249       3       java.net.URI::toLower (19 bytes)
<writer thread='24323'/>
    793  250       3       java.net.URI::hash (33 bytes)
<writer thread='24579'/>
                              @ 20   java.util.ImmutableCollections$AbstractImmutableList::get (10 bytes)   no static binding
<writer thread='24323'/>
                              @ 9  
<writer thread='24579'/>
                              @ 23  
<writer thread='24323'/>
 java.lang.String::
<writer thread='42755'/>
    793  251       3       java.util.ImmutableCollections$List12::get (32 bytes)
                              @ 28   java.util.ImmutableCollections$AbstractImmutableList::outOfBounds (39 bytes)   callee is too large
<writer thread='24579'/>
 java.lang.Object::hashCode (0 bytes)   no static binding
<writer thread='24323'/>
indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (29 bytes)
                                  @ 1   java.lang.String::isLatin1 (19 bytes)
                                  @ 13   java.lang.StringLatin1::indexOf (61 bytes)   callee is too large
                                  @ 25   java.lang.StringUTF16::indexOf (43 bytes)   callee is too large
                              @ 20   java.lang.String::hashCode (60 bytes)   callee is too large
                              @ 29   java.net.URI::normalizedHash (84 bytes)   callee is too large
<writer thread='9219'/>
    795  252     n 0       java.lang.invoke.MethodHandle::linkToStatic(LL)I (native)   (static)
<writer thread='24323'/>
    799  253       1       java.lang.invoke.MethodHandle::type (5 bytes)
    799  254       1       java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::hashCode (5 bytes)
    800  255       3       jdk.internal.org.objectweb.asm.SymbolTable::addConstantClass (8 bytes)
                              @ 4   jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8Reference (101 bytes)   callee is too large
<writer thread='24579'/>
    801  256       3       java.lang.invoke.MemberName::isConstructor (8 bytes)
<writer thread='9219'/>
    801  257     n 0       java.lang.invoke.MethodHandle::linkToVirtual(LL)L (native)   (static)
<writer thread='24579'/>
                              @ 4   java.lang.invoke.MemberName::testAllFlags (7 bytes)
                                @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
    803  258       3       sun.invoke.util.BytecodeDescriptor::unparseSig (91 bytes)
<writer thread='42755'/>
    803  259       3       sun.invoke.util.Wrapper::forBasicType (16 bytes)
<writer thread='24579'/>
                              @ 1   sun.invoke.util.Wrapper::forBasicType (16 bytes)
<writer thread='42755'/>
                              @ 1   java.lang.Class::isPrimitive (0 bytes)   intrinsic
<writer thread='24579'/>
                                @ 1   java.lang.Class::isPrimitive
<writer thread='42755'/>
                              @ 8   sun.invoke.util.Wrapper::forPrimitiveType (49 bytes)   callee is too large
<writer thread='24579'/>
 (0 bytes)   intrinsic
                                @ 8   sun.invoke.util.Wrapper::forPrimitiveType (49 bytes)   callee is too large
                              @ 4   sun.invoke.util.Wrapper::basicTypeChar (5 bytes)
                              @ 16   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (77 bytes)   callee is too large
<writer thread='43011'/>
    805   19       3       java.lang.StringLatin1::indexOf (61 bytes)   made not entrant
                              @ 1   java.lang.StringLatin1::canEncode (13 bytes)   inline (hot)
<writer thread='24579'/>
                              @ 32   java.lang.StringBuilder::append (8 bytes)
<writer thread='43011'/>
    805  203       4       jdk.internal.module.ModuleInfo$ConstantPool::checkUnqualifiedName (131 bytes)
<writer thread='24579'/>
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 40   java.lang.Class::isArray (0 bytes)   native method
                              @ 59   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (77 bytes)   callee is too large
                              @ 65   java.lang.Class::getName (18 bytes)
                                @ 14   java.lang.Class::initClassName (0 bytes)   native method
                              @ 72   java.lang.String::replace (42 bytes)   callee is too large
                              @ 75   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 86   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (77 bytes)   callee is too large
<writer thread='43011'/>
<writer thread='9219'/>
    810  260     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LL)I (native)   (static)
<writer thread='24323'/>
    811  261       1       java.lang.invoke.LambdaForm$Name::type (5 bytes)
    812  262       1       java.lang.invoke.LambdaForm$BasicType::basicTypeClass (5 bytes)
<writer thread='40963'/>
    812  263       3       java.lang.invoke.MemberName::initResolved (53 bytes)
<writer thread='42755'/>
    812  264       3       java.lang.invoke.MethodType::equals (56 bytes)
                              @ 19   java.lang.invoke.MethodType::equals (31 bytes)
                                @ 19   java.util.Arrays::equals (57 bytes)   callee is too large
                              @ 34   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 50   java.lang.invoke.MethodType::equals (31 bytes)
                                @ 19   java.util.Arrays::equals (57 bytes)   callee is too large
<writer thread='24579'/>
    817  265       3       jdk.internal.org.objectweb.asm.Handler::getExceptionTableLength (21 bytes)
    818  266       3       java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)
<writer thread='24323'/>
    819  267       3       java.lang.ref.Reference::reachabilityFence (1 bytes)
<writer thread='24579'/>
    820  268       3       java.util.ImmutableCollections$SetN$SetNIterator::next (47 bytes)
<writer thread='40963'/>
    820  269       1       java.util.stream.FindOps$FindSink::cancellationRequested (5 bytes)
<writer thread='24579'/>
                              @ 15   java.util.ImmutableCollections$SetN$SetNIterator::nextIndex (56 bytes)   callee is too large
                              
<writer thread='42755'/>
    820  270       1       java.util.Spliterators$IteratorSpliterator::characteristics (5 bytes)
<writer thread='40963'/>
    820  271       3       java.util.stream.ReferencePipeline$2$1::accept (27 bytes)
<writer thread='24323'/>
    820  272       3       java.util.ImmutableCollections$SetN$SetNIterator::hasNext (13 bytes)
<writer thread='24579'/>
@ 43  java/util/NoSuchElementException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='40963'/>
                              @ 8   java.util.function.Predicate::test (0 bytes)   no static binding
                              @ 21   java.util.stream.Sink::accept (10 bytes)   no static binding
<writer thread='24579'/>
    828  274       3       java.lang.invoke.LambdaForm$MH/0x0000000800061840::linkToTargetMethod (10 bytes)
<writer thread='42755'/>
    828  275       3       java.lang.invoke.LambdaForm$DMH/0x0000000800060440::invokeStatic (15 bytes)
<writer thread='24579'/>
                              @ 6   java.lang.invoke.MethodHandle::invokeBasic(LL)L (0 bytes)   receiver not constant
<writer thread='40963'/>
    829  276       3       java.util.Optional::&lt;init&gt; (10 bytes)
<writer thread='42755'/>
                              @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
<writer thread='9219'/>
    829  277     n 0       jdk.internal.reflect.Reflection::getCallerClass (native)   (static)
<writer thread='40963'/>
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
    829  278       3       java.util.Optional::of (12 bytes)
<writer thread='42755'/>
                              @ 11   java.lang.invoke.MethodHandle::linkToStatic(LLL)L (0 bytes)   MemberName not constant
<writer thread='24323'/>
                              @ 5   java.util.Objects::requireNonNull (14 bytes)
                                @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 8   java.util.Optional::&lt;init&gt; (10 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='40963'/>
    830  279       3       java.util.HashMap::get (23 bytes)
<writer thread='24579'/>
    830  280       1       java.lang.module.ModuleDescriptor$Provides::service (5 bytes)
<writer thread='40963'/>
                              @ 2   java.util.HashMap::hash (20 bytes)
                                @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
<writer thread='24323'/>
    832  281       3       java.security.AccessController::doPrivileged (9 bytes)
<writer thread='24579'/>
    832  282       3       java.security.AccessController::executePrivileged (65 bytes)
<writer thread='42755'/>
    832  283       1       java.lang.module.ModuleDescriptor$Requires::modifiers (5 bytes)
<writer thread='24323'/>
                              @ 2   jdk.internal.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 5   java.security.AccessController::
<writer thread='24579'/>
                              @ 5   java.security.AccessController::ensureMaterializedForStackWalk (0 bytes)   native method
<writer thread='24323'/>
executePrivileged (65 bytes)   force inline by annotation
<writer thread='24579'/>
                              @ 29   java.security.PrivilegedAction::run (0 bytes)   not inlineable
<writer thread='24323'/>
                                @ 29   java.security.PrivilegedAction::
<writer thread='24579'/>
                              @ 56   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
<writer thread='9219'/>
<dependency_failed type='leaf_type' ctxk='java/util/HashSet' witness='java/util/LinkedHashSet' stamp='0.833'/>
<dependency_failed type='leaf_type' ctxk='java/util/HashSet' witness='java/util/LinkedHashSet' stamp='0.833'/>
<writer thread='24579'/>
                              @ 60   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
<writer thread='9219'/>
    833  184       3       java.util.Set::copyOf (27 bytes)   made not entrant
    833  198       3       java.util.HashSet::&lt;init&gt; (40 bytes)   made not entrant
<writer thread='24323'/>
run (0 bytes)   not inlineable
                                @ 56   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                @ 60   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
<writer thread='9219'/>
<dependency_failed type='leaf_type' ctxk='java/util/HashMap' witness='java/util/LinkedHashMap' stamp='0.836'/>
<dependency_failed type='leaf_type' ctxk='java/util/HashMap' witness='java/util/LinkedHashMap' stamp='0.836'/>
<dependency_failed type='leaf_type' ctxk='java/util/HashMap' witness='java/util/LinkedHashMap' stamp='0.836'/>
<dependency_failed type='leaf_type' ctxk='java/util/HashMap' witness='java/util/LinkedHashMap' stamp='0.836'/>
<dependency_failed type='leaf_type' ctxk='java/util/HashMap' witness='java/util/LinkedHashMap' stamp='0.836'/>
<dependency_failed type='leaf_type' ctxk='java/util/HashMap' witness='java/util/LinkedHashMap' stamp='0.836'/>
<dependency_failed type='leaf_type' ctxk='java/util/HashMap' witness='java/util/LinkedHashMap' stamp='0.836'/>
<dependency_failed type='leaf_type' ctxk='java/util/HashMap' witness='java/util/LinkedHashMap' stamp='0.836'/>
<dependency_failed type='leaf_type' ctxk='java/util/HashMap' witness='java/util/LinkedHashMap' stamp='0.836'/>
<dependency_failed type='leaf_type' ctxk='java/util/HashMap' witness='java/util/LinkedHashMap' stamp='0.836'/>
<dependency_failed type='leaf_type' ctxk='java/util/HashMap' witness='java/util/LinkedHashMap' stamp='0.836'/>
    835  130       3       java.util.HashMap::put (13 bytes)   made not entrant
    835  129       3       java.util.HashSet::add (20 bytes)   made not entrant
    836  124       3       java.util.HashMap::putVal (300 bytes)   made not entrant
    836  182       3       java.util.HashMap::containsKey (18 bytes)   made not entrant
    836  179       3       java.util.HashMap::&lt;init&gt; (8 bytes)   made not entrant
    836  180       3       java.util.HashMap::&lt;init&gt; (98 bytes)   made not entrant
    836  192       3       java.util.HashSet::iterator (13 bytes)   made not entrant
    836  214       3       java.util.HashSet::contains (9 bytes)   made not entrant
    836  220       3       java.util.HashSet::size (8 bytes)   made not entrant
    836  226       3       java.util.HashMap::&lt;init&gt; (11 bytes)   made not entrant
    836  279       3       java.util.HashMap::get (23 bytes)   made not entrant
<writer thread='24579'/>
    837  284       3       java.util.ImmutableCollections$Set12$1::hasNext (13 bytes)
<writer thread='24323'/>
    837  286       3       java.util.HashMap::get (23 bytes)
<writer thread='40963'/>
    837  287       3       java.util.HashSet::contains (9 bytes)
<writer thread='42755'/>
    837  288       3       java.lang.module.ModuleDescriptor::hashCode (170 bytes)
<writer thread='24323'/>
                              @ 2   java.util.HashMap::hash (20 bytes)
<writer thread='40963'/>
                              @ 5   java.util.HashMap::containsKey (18 bytes)
<writer thread='24323'/>
                                @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
<writer thread='40963'/>
                                @ 2   java.util.HashMap::hash (20 bytes)
<writer thread='42755'/>
                              @ 13  
<writer thread='24323'/>
                   
<writer thread='42755'/>
 java.lang.String::hashCode (60 bytes)   callee is too large
<writer thread='24323'/>
           @ 6   java.util.HashMap::getNode
<writer thread='40963'/>
                     
<writer thread='24323'/>
 (148 bytes)   callee is too large
<writer thread='40963'/>
             @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                                @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
<writer thread='42755'/>
                              @ 25   java.util.Objects::hashCode (13 bytes)
                                @ 5   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 38   java.util.Set::hashCode (0 bytes)   no static binding
                              @ 53   java.util.Objects::hashCode (13 bytes)
                                @ 5   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 66   java.util.Set::hashCode (0 bytes)   no static binding
                              @ 81   java.util.Set::hashCode (0 bytes)   no static binding
                              @ 96   java.util.Set::hashCode (0 bytes)   no static binding
                              @ 111   java.util.Set::hashCode (0 bytes)   no static binding
<writer thread='24323'/>
    841  291       2       java.util.HashSet::add (20 bytes)
<writer thread='42755'/>
                              @ 126   java.util.Objects::hashCode (13 bytes)
                                @ 5   java.lang.Object::hashCode (0 bytes)   no static binding
<writer thread='24323'/>
                              @ 8   java.util.HashMap::put (13 bytes)
                                @ 2  
<writer thread='42755'/>
                              @ 139   java.util.Objects::hashCode (13 bytes)
<writer thread='24323'/>
 java.util.HashMap::hash (20 bytes)
<writer thread='42755'/>
                                @ 5   java.lang.String::hashCode (60 bytes)   callee is too large
<writer thread='24323'/>
                                  @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
<writer thread='40963'/>
    841  297       3       java.util.HashSet::iterator (13 bytes)
<writer thread='42755'/>
                              @ 152   java.util.Objects::hashCode (13 bytes)
<writer thread='24323'/>
                                @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
<writer thread='40963'/>
                              
<writer thread='42755'/>
                                @ 5   java.lang.String::hashCode (60 bytes)   callee is too large
<writer thread='40963'/>
@ 4   java.util.HashMap::keySet (25 bytes)   no static binding
                              @ 7   java.util.Set::iterator (0 bytes)   no static binding
    843  289       3       java.util.HashMap::containsKey (18 bytes)
                              @ 2   java.util.HashMap::hash (20 bytes)
<writer thread='24579'/>
    843  294       3       java.util.HashMap::&lt;init&gt; (11 bytes)
<writer thread='40963'/>
                                @ 9  
<writer thread='37635'/>
    843  200       4       java.lang.StringLatin1::equals (36 bytes)
<writer thread='24579'/>
        
<writer thread='40963'/>
 java.lang.Object::
<writer thread='24323'/>
    844  304       3       java.util.ImmutableCollections$SetN::isEmpty (13 bytes)
<writer thread='40963'/>
hashCode (0 bytes)   no static binding
<writer thread='24579'/>
                      @ 1   java.util.AbstractMap::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='40963'/>
                              @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
<writer thread='24579'/>
    845  303       3       java.lang.module.ModuleDescriptor$Exports::isQualified (18 bytes)
<writer thread='37635'/>
<writer thread='24579'/>
                              @ 4   java.util.Set::isEmpty (0 bytes)   no static binding
<writer thread='24323'/>
    846  306       3       java.util.HashMap::putIfAbsent (13 bytes)
                              @ 2   java.util.HashMap::hash (20 bytes)
                                @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
<writer thread='40963'/>
    847  302       1       java.lang.module.ModuleDescriptor$Exports::targets (5 bytes)
<writer thread='24579'/>
    848  305       3       java.util.ImmutableCollections$Set12::contains (28 bytes)
<writer thread='40963'/>
    848  300       1       java.util.ImmutableCollections$Set12::isEmpty (2 bytes)
    848  301       3       java.util.ImmutableCollections$SetN::contains (26 bytes)
<writer thread='24323'/>
    848  298       3       java.lang.module.ResolvedModule::hashCode (16 bytes)
<writer thread='40963'/>
                              @ 1   java.util.Objects::requireNonNull (14 bytes)
<writer thread='24323'/>
                              @ 4   java.lang.Object::hashCode (0 bytes)   native method
<writer thread='40963'/>
                                @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='24323'/>
                              @ 11   java.lang.Object::hashCode (0 bytes)   no static binding
<writer thread='24579'/>
                              @ 5   java.lang.Object::equals (11 bytes)   no static binding
<writer thread='40963'/>
                              @ 14   java.util.ImmutableCollections$SetN::probe (56 bytes)   callee is too large
<writer thread='24579'/>
                              @ 16   java.lang.Object::equals (11 bytes)   no static binding
    851  295       3       jdk.internal.module.ModuleReferenceImpl::hashCode (56 bytes)
                              @ 10   java.lang.module.ModuleReference::descriptor (5 bytes)
<writer thread='40963'/>
    851  293       1       java.lang.module.ModuleDescriptor::requires (5 bytes)
<writer thread='42755'/>
    852  296       3       java.util.HashSet::&lt;init&gt; (16 bytes)
                              @ 1   java.util.AbstractSet::&lt;init&gt; (5 bytes)
                                @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24579'/>
                              @ 13   java.lang.module.ModuleDescriptor::hashCode (170 bytes)   callee is too large
<writer thread='42755'/>
                              @ 9   java.util.HashMap::&lt;init&gt; (11 bytes)
<writer thread='24579'/>
                              @ 25   java.util.Objects::hashCode (13 bytes)
<writer thread='42755'/>
                                @ 1   java.util.AbstractMap::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt;
<writer thread='40963'/>
    853  290       1       java.util.ImmutableCollections$SetN::size (5 bytes)
<writer thread='42755'/>
 (1 bytes)
<writer thread='24579'/>
                                @ 5   java.net.URI::hashCode (123 bytes)   callee is too large
                              @ 38   java.util.Objects::hashCode (13 bytes)
                                @ 5   java.lang.Object::hashCode (0 bytes)   native method
<writer thread='40963'/>
    853  299       1       java.lang.module.ModuleDescriptor::isAutomatic (5 bytes)
    854  309       1       java.lang.module.ModuleDescriptor::exports (5 bytes)
    855  308       1       java.lang.module.ModuleDescriptor::provides (5 bytes)
<writer thread='42755'/>
    856  313       3       java.util.ImmutableCollections$SetN::iterator (9 bytes)
                              @ 5   java.util.ImmutableCollections$SetN$SetNIterator::&lt;init&gt; (40 bytes)   callee is too large
<writer thread='40963'/>
    856  314       3       java.util.ImmutableCollections$SetN$SetNIterator::&lt;init&gt; (40 bytes)
                              @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 11   java.util.ImmutableCollections$SetN::size (5 bytes)
                              @ 33   java.lang.Math::floorMod (20 bytes)
<writer thread='42755'/>
    857  312       1       java.lang.module.ResolvedModule::reference (5 bytes)
<writer thread='24579'/>
    857  315       1       java.lang.module.ModuleDescriptor::uses (5 bytes)
<writer thread='42755'/>
    858  318       3       java.lang.StringLatin1::lastIndexOf (125 bytes)
<writer thread='40963'/>
    859  316       3       java.util.ImmutableCollections$Set12$1::next (92 bytes)
                              @ 88  java/util/NoSuchElementException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='26115'/>
    860  285       4       java.util.HashMap::putVal (300 bytes)
<writer thread='9219'/>
    866  320     n 0       jdk.internal.misc.Unsafe::compareAndSetLong (native)   
    866  324     n 0       jdk.internal.misc.Unsafe::compareAndSetReference (native)   
<writer thread='24323'/>
    867  323   !   3       java.util.concurrent.ConcurrentHashMap::putVal (432 bytes)
<writer thread='40963'/>
    867  321       3       java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt; (20 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='42755'/>
    868  322       3       java.util.concurrent.ConcurrentHashMap::addCount (280 bytes)
<writer thread='24579'/>
    868  325       3       java.util.concurrent.ConcurrentHashMap::casTabAt (21 bytes)
<writer thread='42755'/>
                              @ 31  
<writer thread='24579'/>
                              @ 17   jdk.internal.misc.Unsafe::compareAndSetReference (0 bytes)   intrinsic
<writer thread='42755'/>
 jdk.internal.misc.Unsafe::compareAndSetLong (0 bytes)   intrinsic
                              @ 58  java/util/concurrent/ThreadLocalRandom::getProbe (not loaded)   not inlineable
<writer thread='24323'/>
                              @ 17   java.lang.Object::hashCode (0 bytes)   no static binding
<writer thread='42755'/>
                              @ 91   jdk.internal.misc.Unsafe::compareAndSetLong (0 bytes)   intrinsic
<writer thread='24323'/>
                              @ 20   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
<writer thread='42755'/>
                              @ 115   java.util.concurrent.ConcurrentHashMap::sumCount (60 bytes)   callee is too large
<writer thread='40963'/>
    869  328       3       java.lang.String::startsWith (138 bytes)
                     
<writer thread='42755'/>
                              @ 161   java.util.concurrent.ConcurrentHashMap::resizeStamp (9 bytes)
                                @ 1   java.lang.Integer::numberOfLeadingZeros (79 bytes)   callee is too large
<writer thread='24323'/>
                              @ 69   java.util.concurrent.ConcurrentHashMap::tabAt (22 bytes)
<writer thread='40963'/>
         @ 6   java.lang.String::length (11 bytes)
<writer thread='24579'/>
    870  326       3       java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)
<writer thread='24323'/>
                                @ 15  
<writer thread='40963'/>
                                @ 6   java.lang.String::coder (15 bytes)
<writer thread='24579'/>
               !m             @ 4   java.util.concurrent.ConcurrentHashMap::putVal (432 bytes)   callee is too large
<writer thread='42755'/>
                              @ 227   jdk.internal.misc.Unsafe::compareAndSetInt (0 bytes)   intrinsic
<writer thread='24323'/>
 jdk.internal.misc.Unsafe::getReferenceAcquire (7 bytes)
<writer thread='40963'/>
                              @ 10   java.lang.String::length (11 bytes)
                                @ 6   java.lang.String::coder (15 bytes)
<writer thread='24323'/>
                                  @ 3   jdk.internal.misc.Unsafe::getReferenceVolatile (0 bytes)   intrinsic
<writer thread='40963'/>
                              @ 39   java.lang.String::
<writer thread='24323'/>
                              @ 91  
<writer thread='40963'/>
coder (15 bytes)
<writer thread='24323'/>
 java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt; (20 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='40963'/>
                              @ 47   java.lang.String::coder (15 bytes)
<writer thread='24579'/>
    871  327       1       java.lang.module.ModuleDescriptor::packages (5 bytes)
<writer thread='24323'/>
                              @ 94   java.util.concurrent.ConcurrentHashMap::casTabAt (21 bytes)
                                @ 17   jdk.internal.misc.Unsafe::compareAndSetReference (0 bytes)   intrinsic
<writer thread='24579'/>
    872  330       1       java.net.URL::getUserInfo (5 bytes)
<writer thread='40963'/>
                              @ 116   java.lang.StringUTF16::getChar (60 bytes)   intrinsic
<writer thread='42755'/>
               !m             @ 238   java.util.concurrent.ConcurrentHashMap::transfer (849 bytes)   callee is too large
<writer thread='24579'/>
    872  331       1       java.net.URL::getHost (5 bytes)
<writer thread='42755'/>
                              @ 257   jdk.internal.misc.Unsafe::compareAndSetInt (0 bytes)   intrinsic
               !m             @ 267   java.util.concurrent.ConcurrentHashMap::transfer (849 bytes)   callee is too large
                              @ 271   java.util.concurrent.ConcurrentHashMap::sumCount (60 bytes)   callee is too large
<writer thread='24323'/>
                              @ 120   java.util.concurrent.ConcurrentHashMap::helpTransfer (124 bytes)   callee is too large
                              @ 159   java.lang.Object::equals (11 bytes)   no static binding
<writer thread='42755'/>
               !              @ 104   java.util.concurrent.ConcurrentHashMap::fullAddCount (462 bytes)   callee is too large
<writer thread='24323'/>
                              @ 192   java.util.concurrent.ConcurrentHashMap::tabAt (22 bytes)
                                @ 15   jdk.internal.misc.Unsafe::getReferenceAcquire (7 bytes)
                                  @ 3   jdk.internal.misc.Unsafe::getReferenceVolatile (0 bytes)   intrinsic
                              @ 242   java.lang.Object::equals (11 bytes)   no static binding
                              @ 293   java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt; (20 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24579'/>
    875  332       3       java.util.Optional::orElse (16 bytes)
<writer thread='24323'/>
                              @ 331  java/util/concurrent/ConcurrentHashMap$TreeBin::putTreeVal (not loaded)   not inlineable
                              @ 374  java/lang/IllegalStateException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='26115'/>
<writer thread='24323'/>
               !m             @ 409  
<writer thread='26115'/>
<writer thread='24323'/>
 java.util.concurrent.ConcurrentHashMap::treeifyBin (164 bytes)   callee is too large
                              @ 427   java.util.concurrent.ConcurrentHashMap::addCount (280 bytes)   callee is too large
               !              @ 49   java.util.concurrent.ConcurrentHashMap::initTable (112 bytes)   callee is too large
                              @ 12   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='26115'/>
<writer thread='40963'/>
    893  333       3       java.util.ImmutableCollections$Set12::size (13 bytes)
    894  334       3       java.lang.module.ResolvedModule::name (11 bytes)
                              @ 1   java.lang.module.ResolvedModule::reference (5 bytes)
                              @ 4   java.lang.module.ModuleReference::descriptor (5 bytes)
                              @ 7   java.lang.module.ModuleDescriptor::name (5 bytes)
    896  335       3       java.util.ImmutableCollections$Set12::iterator (9 bytes)
<writer thread='24579'/>
    896  336       3       java.util.ImmutableCollections$Set12$1::&lt;init&gt; (21 bytes)
<writer thread='40963'/>
                              @ 5   java.util.ImmutableCollections$Set12$1::&lt;init&gt; (21 bytes)
<writer thread='24579'/>
                              @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='40963'/>
                                @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24579'/>
                              @ 14   java.util.ImmutableCollections$Set12::size (13 bytes)
<writer thread='40963'/>
                                @ 14   java.util.ImmutableCollections$Set12::size (13 bytes)
<writer thread='39683'/>

============================= C2-compiled nmethod ==============================
<opto_assembly compile_id='135'>
----------------------- MetaData before Compile_id = 135 ------------------------
{method}
 - this oop:          0x0000000121f04ae8
 - method holder:     &apos;java/lang/StringLatin1&apos;
 - constants:         0x0000000121f02920 constant pool [372] {0x0000000121f02920} for &apos;java/lang/StringLatin1&apos; cache=0x0000000121f072b0
 - access:            0xc1000009  public static 
 - name:              &apos;hashCode&apos;
 - signature:         &apos;([B)I&apos;
 - max stack:         4
 - max locals:        6
 - size of params:    1
 - method size:       13
 - highest level:     3
 - vtable index:      -2
 - i2i entry:         0x0000000105ef3de0
 - adapters:          AHE@0x00007f850a00f860: 0xb0000000 i2c: 0x0000000105f3bee0 c2i: 0x0000000105f3bfc3 c2iUV: 0x0000000105f3bf8a c2iNCI: 0x0000000105f3c000
 - compiled entry     0x0000000106626560
 - code size:         42
 - code start:        0x0000000121f04a88
 - code end (excl):   0x0000000121f04ab2
 - method data:       0x00000001220433c0
 - checked ex length: 0
 - linenumber start:  0x0000000121f04ab2
 - localvar length:   3
 - localvar start:    0x0000000121f04ac2
 - compiled code: nmethod    898    9       3       java.lang.StringLatin1::hashCode (42 bytes)

------------------------ OptoAssembly for Compile_id = 135 -----------------------
#
#  int ( byte[int:&gt;=0]:exact * )
#
#r018 rsi:rsi   : parm 0: byte[int:&gt;=0]:exact *
# -- Old rsp -- Framesize: 48 --
#r583 rsp+44: in_preserve
#r582 rsp+40: return address
#r581 rsp+36: in_preserve
#r580 rsp+32: saved fp register
#r579 rsp+28: pad2, stack alignment
#r578 rsp+24: pad2, stack alignment
#r577 rsp+20: Fixed slot 1
#r576 rsp+16: Fixed slot 0
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N1: #	out( B1 ) &lt;- in( B19 B18 B16 )  Freq: 1

000     B1: #	out( B19 B2 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
000     # stack bang (168 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #32	# Create frame

00c     movl    R11, [RSI + #12 (8-bit)]	# range
010     NullCheck RSI

010     B2: #	out( B17 B3 ) &lt;- in( B1 )  Freq: 0.999999
010     testl   R11, R11	# unsigned
013     jbe,u   B17  P=0.039565 C=42184.000000

019     B3: #	out( B18 B4 ) &lt;- in( B2 )  Freq: 0.960434
019     movl    R8, R11	# spill
01c     decl    R8	# int
01f     cmpl    R8, R11	# unsigned
022     jnb,u   B18  P=0.000001 C=-1.000000

028     B4: #	out( B14 B5 ) &lt;- in( B3 )  Freq: 0.960433
028     movzbl  R10, [RSI + #16 (8-bit)]	# ubyte
02d     movl    RCX, R11	# spill
030     addl    RCX, #-7	# int
033     movl    R9, #-2147483648	# int
039     cmpl    R8, RCX
03c     cmovll RCX, R9	# signed, int
040     movl    RDI, #1	# int
045     cmpl    RCX, #1
048     jle     B14  P=0.000001 C=-1.000000

04e     B5: #	out( B10 ) &lt;- in( B4 )  Freq: 0.960432
04e     movl    RBX, R10	# spill
051     sall    RBX, #5
054     subl    RBX, R10	# int
057     movl    RAX, #8000	# int
05c     # TLS is in R15
05c     jmp,s   B10

05e     B6: #	out( B7 ) &lt;- in( B14 )  Freq: 0.480217
05e     # castII of RDI

05e     B7: #	out( B16 B8 ) &lt;- in( B6 B8 ) Loop( B7-B8 inner post of N167) Freq: 0.960433
05e     movzbl  R8, [RSI + #16 + RDI]	# ubyte
064     movl    RAX, R10	# spill
067     sall    RAX, #5
06a     subl    RAX, R10	# int
06d     addl    RAX, R8	# int
070     incl    RDI	# int
072     cmpl    RDI, R11
075     jge     B16	# loop end  P=0.500000 C=40515.000000

07b     B8: #	out( B7 ) &lt;- in( B7 )  Freq: 0.480217
07b     movl    R10, RAX	# spill
07e     jmp,s   B7

080     B9: #	out( B10 ) &lt;- in( B12 ) top-of-loop Freq: 23.3145
080     movdq   RSI, XMM0	# spill
085     movdl   R11, XMM1	# spill

08a     B10: #	out( B11 ) &lt;- in( B5 B9 ) Loop( B10-B9 ) Freq: 24.2749
08a     movl    RDX, RCX	# spill
08c     subl    RDX, RDI	# int
08e     cmpl    RDX, RAX
090     cmovlgt RDX, RAX	# min
093     addl    RDX, RDI	# int
095     movdq   XMM0, RSI	# spill
09a     movdl   XMM1, R11	# spill
        nop 	# 1 bytes pad for loops and calls

0a0     B11: #	out( B11 B12 ) &lt;- in( B10 B11 ) Loop( B11-B11 inner main of N73 strip mined) Freq: 613.549
0a0     movslq  RSI, RDI	# i2l
0a3     movdq   R8, XMM0	# spill
0a8     movzbl  RBP, [R8 + #16 + RSI]	# ubyte
0ae     movzbl  R14, [R8 + #23 + RSI]	# ubyte
0b4     movzbl  R11, [R8 + #17 + RSI]	# ubyte
0ba     movzbl  R10, [R8 + #22 + RSI]	# ubyte
0c0     movzbl  R9, [R8 + #21 + RSI]	# ubyte
0c6     movzbl  R8, [R8 + #20 + RSI]	# ubyte
0cc     addl    RBX, RBP	# int
0ce     movdq   RBP, XMM0	# spill
0d3     movzbl  RBP, [RBP + #18 + RSI]	# ubyte
0d8     movdq   R13, XMM0	# spill
0dd     movzbl  RSI, [R13 + #19 + RSI]	# ubyte
0e3     movl    R13, RBX	# spill
0e6     sall    R13, #5
0ea     subl    R13, RBX	# int
0ed     addl    R13, R11	# int
0f0     movl    R11, R13	# spill
0f3     sall    R11, #5
0f7     subl    R11, R13	# int
0fa     addl    R11, RBP	# int
0fd     movl    RBP, R11	# spill
100     sall    RBP, #5
103     subl    RBP, R11	# int
106     addl    RBP, RSI	# int
108     movl    RBX, RBP	# spill
10a     sall    RBX, #5
10d     subl    RBX, RBP	# int
10f     addl    RBX, R8	# int
112     movl    R11, RBX	# spill
115     sall    R11, #5
119     subl    R11, RBX	# int
11c     addl    R11, R9	# int
11f     movl    R8, R11	# spill
122     sall    R8, #5
126     subl    R8, R11	# int
129     addl    R8, R10	# int
12c     movl    R10, R8	# spill
12f     sall    R10, #5
133     subl    R10, R8	# int
136     addl    R10, R14	# int
139     movl    RBX, R10	# spill
13c     sall    RBX, #5
13f     subl    RBX, R10	# int
142     addl    RDI, #8	# int
145     cmpl    RDI, RDX
147     jl     B11	# loop end  P=0.960435 C=40515.000000

14d     B12: #	out( B9 B13 ) &lt;- in( B11 )  Freq: 24.2749
14d     movq    R11, [R15 + #296 (32-bit)]	# ptr
154     testl   rax, [R11]	# Safepoint: poll for GC        # java.lang.StringLatin1::hashCode @ bci:37  L[0]=_ L[1]=R10 L[2]=XMM0 L[3]=XMM1 L[4]=RDI L[5]=_
        # OopMap {xmm0=Oop off=340/0x154}
157     cmpl    RDI, RCX
159     jl     B9  P=0.960435 C=40515.000000

15f     B13: #	out( B14 ) &lt;- in( B12 )  Freq: 0.960432
15f     movdq   RSI, XMM0	# spill
164     movdl   R11, XMM1	# spill

169     B14: #	out( B6 B15 ) &lt;- in( B4 B13 )  Freq: 0.960433
169     cmpl    RDI, R11
16c     jl     B6  P=0.500000 C=-1.000000

172     B15: #	out( B16 ) &lt;- in( B14 )  Freq: 0.480217
172     movl    RAX, R10	# spill

175     B16: #	out( N1 ) &lt;- in( B7 B15 B17 )  Freq: 0.999998
175     addq    rsp, 32	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

184     ret

185     B17: #	out( B16 ) &lt;- in( B2 )  Freq: 0.0395647
185     xorl    RAX, RAX	# int
187     jmp,s   B16

189     B18: #	out( N1 ) &lt;- in( B3 )  Freq: 9.73188e-07
189     movq    RBP, RSI	# spill
18c     movl    [rsp + #4], R11	# spill
191     movl    RSI, #-138	# int
        nop 	# 1 bytes pad for loops and calls
197     call,static  wrapper for: uncommon_trap(reason=&apos;predicate&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.StringLatin1::hashCode @ bci:13  L[0]=_ L[1]=#0 L[2]=RBP L[3]=rsp + #4 L[4]=#0 L[5]=_ STK[0]=#0 STK[1]=rsp + #4
        # OopMap {rbp=Oop off=412/0x19c}
19c     ud2	# ShouldNotReachHere

1b0     B19: #	out( N1 ) &lt;- in( B1 )  Freq: 1.01328e-06
1b0     movl    RSI, #-10	# int
        nop 	# 2 bytes pad for loops and calls
1b7     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.StringLatin1::hashCode @ bci:5  L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=#NULL
        # OopMap {off=444/0x1bc}
1bc     ud2	# ShouldNotReachHere

--------------------------------------------------------------------------------
</opto_assembly>
<writer thread='42755'/>
    902  337       3       java.util.HashSet::&lt;init&gt; (40 bytes)
<writer thread='24579'/>
    902  339       3       java.util.HashMap::&lt;init&gt; (98 bytes)
<writer thread='40963'/>
    902  340       3       java.util.HashMap::&lt;init&gt; (8 bytes)
<writer thread='24579'/>
             
<writer thread='42755'/>
                              @ 1   java.util.AbstractSet::&lt;init&gt; (5 bytes)
<writer thread='40963'/>
                          
<writer thread='24579'/>
                 @ 1   java.util.AbstractMap::&lt;init&gt; (5 bytes)
<writer thread='40963'/>
    @ 4  
<writer thread='42755'/>
                                @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
<writer thread='40963'/>
 java.util.HashMap::&lt;init&gt; (98 bytes)   callee is too large
<writer thread='24579'/>
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='42755'/>
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24579'/>
                              @ 16   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
<writer thread='42755'/>
                              @ 10   java.util.Collection::size (0 bytes)   no static binding
<writer thread='24579'/>
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
<writer thread='42755'/>
                              @ 24   java.lang.Math::max (11 bytes)
<writer thread='24579'/>
                              @ 21   java.lang.StringBuilder::append (8 bytes)
<writer thread='42755'/>
                              @ 27  
<writer thread='24579'/>
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
<writer thread='42755'/>
 java.util.HashMap::&lt;init&gt; (8 bytes)
<writer thread='24579'/>
                              @ 25   java.lang.StringBuilder::
<writer thread='42755'/>
                                @ 4   java.util.HashMap::&lt;init&gt; (98 bytes)   callee is too large
<writer thread='24579'/>
append (8 bytes)
<writer thread='40963'/>
    904  342       3       java.util.Set::copyOf (27 bytes)
<writer thread='24579'/>
                                @ 2   java.lang.AbstractStringBuilder::
<writer thread='42755'/>
                              @ 35   java.util.AbstractCollection::addAll (42 bytes)   callee is too large
<writer thread='24579'/>
append (55 bytes)   callee is too large
<writer thread='40963'/>
             
<writer thread='24579'/>
                              @ 28   java.lang.StringBuilder::toString (35 bytes)
<writer thread='40963'/>
                 @ 17   java.util.HashSet::&lt;init&gt; (40 bytes)   callee is too large
<writer thread='24579'/>
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
<writer thread='40963'/>
                              @ 20   java.util.HashSet::toArray (18 bytes)
                                @ 8   java.util.HashMap::size (5 bytes)
                                @ 14   java.util.HashMap::keysToArray (81 bytes)   no static binding
<writer thread='24579'/>
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
<writer thread='40963'/>
                              @ 23   java.util.Set::of (68 bytes)   callee is too large
<writer thread='24579'/>
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
                              @ 31   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 51   java.lang.Float::isNaN (12 bytes)
                              @ 91   java.util.HashMap::tableSizeFor (32 bytes)
                                @ 4   java.lang.Integer::numberOfLeadingZeros (79 bytes)   callee is too large
                              @ 65   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
<writer thread='40963'/>
    908  338       3       java.util.HashMap::isEmpty (13 bytes)
<writer thread='24579'/>
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
                              @ 70   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 74   java.lang.StringBuilder::append (8 bytes)
<writer thread='9219'/>
    908  346     n 0       jdk.internal.misc.Unsafe::compareAndSetInt (native)   
<writer thread='24579'/>
                                @ 2   java.lang.AbstractStringBuilder::append (7 bytes)
                                  @ 2  jdk/internal/math/FloatingDecimal::appendTo (not loaded)   not inlineable
                              @ 77   java.lang.StringBuilder::toString (35 bytes)
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
<writer thread='40963'/>
    909  343       3       java.util.HashSet::isEmpty (8 bytes)
<writer thread='24579'/>
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
<writer thread='42755'/>
    909  347       3       java.util.ImmutableCollections$List12::size (13 bytes)
<writer thread='24579'/>
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
<writer thread='40963'/>
                              @ 4   java.util.HashMap::isEmpty (13 bytes)
<writer thread='24579'/>
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
    910  344       3       java.util.HashSet::toArray (18 bytes)
<writer thread='42755'/>
    910  345       3       java.util.ImmutableCollections$ListItr::hasNext (17 bytes)
<writer thread='24323'/>
                              @ 8   java.util.HashMap::
<writer thread='24579'/>
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
                              @ 80   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
<writer thread='40963'/>
    911  341       1       java.lang.module.ResolvedModule::configuration (5 bytes)
<writer thread='24323'/>
size (5 bytes)
                              @ 14   java.util.HashMap::keysToArray (81 bytes)   no static binding
<writer thread='40963'/>
    915  348       1       jdk.internal.module.ModuleReferenceImpl::moduleResolution (5 bytes)
    920  350       3       java.nio.Buffer::limit (74 bytes)
                              @ 28   java.nio.Buffer::createLimitException (104 bytes)   callee is too large
<writer thread='42755'/>
    921  351       3       java.util.HashSet::size (8 bytes)
                              @ 4   java.util.HashMap::size (5 bytes)
<writer thread='24323'/>
    922  359       3       java.net.URI$Parser::scan (76 bytes)
                              @ 15   java.lang.String::charAt (25 bytes)
                                @ 1  
<writer thread='42755'/>
    922  352       3       sun.nio.fs.UnixPath::toUnixPath (32 bytes)
<writer thread='24323'/>
 java.lang.String::isLatin1 (19 bytes)
<writer thread='42755'/>
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 23  java/nio/file/ProviderMismatchException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='40963'/>
    923  354       3       sun.nio.fs.UnixNativeDispatcher::copyToNativeBuffer (49 bytes)
<writer thread='24323'/>
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)
<writer thread='40963'/>
                              @ 1   sun.nio.fs.UnixPath::getByteArrayForSysCalls (48 bytes)   callee is too large
                              @ 11   sun.nio.fs.NativeBuffers::getNativeBufferFromCache (51 bytes)   callee is too large
<writer thread='24323'/>
                                  @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='40963'/>
                              @ 20   sun.nio.fs.NativeBuffers::allocNativeBuffer (20 bytes)
<writer thread='24323'/>
                                @ 21   java.lang.StringUTF16::charAt (11 bytes)
<writer thread='40963'/>
                                @ 16   sun.nio.fs.NativeBuffer::&lt;init&gt; (44 bytes)   callee is too large
<writer thread='24323'/>
                                  @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
<writer thread='40963'/>
                              @ 28  
<writer thread='24323'/>
                                    @ 2   java.lang.StringUTF16::length (5 bytes)
<writer thread='40963'/>
 sun.nio.fs.NativeBuffer::owner (5 bytes)
<writer thread='24323'/>
                                    @ 5   java.lang.String::checkIndex (48 bytes)   callee is too large
<writer thread='40963'/>
                              @ 39   sun.nio.fs.NativeBuffers::copyCStringToNativeBuffer (67 bytes)   callee is too large
<writer thread='24323'/>
                                  @ 7   java.lang.StringUTF16::getChar (60 bytes)   intrinsic
<writer thread='42755'/>
    925  357       3       sun.nio.fs.NativeBuffer::release (5 bytes)
<writer thread='24323'/>
                              @ 25   java.net.URI::match (56 bytes)   callee is too large
<writer thread='40963'/>
                              @ 44   sun.nio.fs.NativeBuffer::setOwner (6 bytes)
<writer thread='42755'/>
                              @ 1   sun.nio.fs.NativeBuffers::releaseNativeBuffer (97 bytes)   callee is too large
<writer thread='24323'/>
                              @ 51   java.net.URI$Parser::scanEscape (115 bytes)   callee is too large
<writer thread='24579'/>
    926  362       3       sun.nio.fs.UnixPath::compareTo (92 bytes)
                              @ 17   java.lang.Math::min (11 bytes)
<writer thread='42755'/>
    927  363       3       java.net.URI$Parser::scan (41 bytes)
                              @ 15   java.lang.String::charAt (25 bytes)
                                @ 1   java.lang.String::isLatin1 (19 bytes)
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)
                                  @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                                @ 21   java.lang.StringUTF16::charAt (11 bytes)
                                  @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
                                    @ 2   java.lang.StringUTF16::length (5 bytes)
                                    @ 5   java.lang.String::checkIndex (48 bytes)   callee is too large
                                  @ 7   java.lang.StringUTF16::getChar (60 bytes)   intrinsic
                              @ 23   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (29 bytes)
                                  @ 1   java.lang.String::isLatin1 (19 bytes)
                                  @ 13   java.lang.StringLatin1::indexOf (61 bytes)   callee is too large
                                  @ 25   java.lang.StringUTF16::indexOf (43 bytes)   callee is too large
<writer thread='24579'/>
    930  367       3       sun.nio.fs.UnixPath::getFileSystem (5 bytes)
                              @ 1   sun.nio.fs.UnixPath::getFileSystem (5 bytes)
    931  369       3       java.util.Collections$UnmodifiableCollection$1::next (10 bytes)
                              @ 4   java.util.Iterator::next (0 bytes)   no static binding
<writer thread='9219'/>
    932  374     n 0       jdk.internal.misc.Unsafe::copyMemory0 (native)   
<writer thread='24579'/>
    933  368       3       java.lang.module.ModuleDescriptor::packageName (24 bytes)
                              @ 3   java.lang.String::lastIndexOf (12 bytes)
                                @ 3   java.lang.String::length (11 bytes)
                                  @ 6   java.lang.String::coder (15 bytes)
                                @ 8   java.lang.String::lastIndexOf (29 bytes)
                                  @ 1   java.lang.String::isLatin1 (19 bytes)
                                  @ 13   java.lang.StringLatin1::lastIndexOf (40 bytes)   callee is too large
                                  @ 25   java.lang.StringUTF16::lastIndexOf (47 bytes)   callee is too large
                              @ 20   java.lang.String::substring (58 bytes)   callee is too large
<writer thread='24323'/>
    935  377       3       java.lang.Character::isJavaIdentifierStart (9 bytes)
                              @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                              @ 5   java.lang.CharacterData::isJavaIdentifierStart (0 bytes)   no static binding
    937  378       3       java.lang.CharacterDataLatin1::isJavaIdentifierStart (23 bytes)
                              @ 2   java.lang.CharacterDataLatin1::getProperties (11 bytes)
    939  371       3       java.net.URI$Parser::at (23 bytes)
                              @ 10   java.lang.String::charAt (25 bytes)
                                @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='24579'/>
    939  372       3       jdk.internal.misc.Unsafe::copyMemory (33 bytes)
<writer thread='40963'/>
    939  373       3       jdk.internal.misc.Unsafe::copyMemoryChecks (21 bytes)
<writer thread='36611'/>
    939  319       4       java.util.ImmutableCollections$SetN$SetNIterator::next (47 bytes)
<writer thread='24323'/>
                                @ 12  
<writer thread='24579'/>
                              @ 9   jdk.internal.misc.Unsafe::copyMemoryChecks (21 bytes)
<writer thread='24323'/>
 java.lang.StringLatin1::charAt (28 bytes)
<writer thread='40963'/>
                              @ 3   jdk.internal.misc.Unsafe::checkSize (32 bytes)
<writer thread='24579'/>
                                @ 3   jdk.internal.misc.Unsafe::checkSize (32 bytes)   callee is too large
                                @ 9   jdk.internal.misc.Unsafe::checkPrimitivePointer (19 bytes)
<writer thread='24323'/>
                                  @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='40963'/>
                                @ 27   jdk.internal.misc.Unsafe::invalidInput (8 bytes)
<writer thread='24579'/>
                                  @ 3   jdk.internal.misc.Unsafe::checkPointer (19 bytes)
<writer thread='24323'/>
                                @ 21   java.lang.StringUTF16::charAt (11 bytes)
<writer thread='40963'/>
                                  @ 4   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 9   jdk.internal.misc.Unsafe::checkPrimitivePointer (19 bytes)
<writer thread='24579'/>
                                    @ 6   jdk.internal.misc.Unsafe::checkNativeAddress (28 bytes)   callee is too large
<writer thread='40963'/>
                                @ 3   jdk.internal.misc.Unsafe::checkPointer (19 bytes)
<writer thread='24323'/>
                                  @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
<writer thread='40963'/>
                                  @ 6   jdk.internal.misc.Unsafe::checkNativeAddress (28 bytes)   callee is too large
                                  @ 15   jdk.internal.misc.Unsafe::checkOffset (32 bytes)   callee is too large
<writer thread='24579'/>
                                    @ 15   jdk.internal.misc.Unsafe::checkOffset (32 bytes)   callee is too large
<writer thread='24323'/>
                                    @ 2   java.lang.StringUTF16::length (5 bytes)
<writer thread='40963'/>
                                @ 12   java.lang.Object::getClass (0 bytes)   intrinsic
                                @ 15   jdk.internal.misc.Unsafe::checkPrimitiveArray (22 bytes)
<writer thread='24323'/>
                                    @ 5   java.lang.String::checkIndex (48 bytes)   callee is too large
<writer thread='24579'/>
                                  @ 12  
<writer thread='42755'/>
    942  370       3       jdk.internal.misc.Unsafe::checkSize (32 bytes)
<writer thread='24579'/>
 java.lang.Object::getClass (0 bytes)   intrinsic
<writer thread='39683'/>
    942    9       3       java.lang.StringLatin1::hashCode (42 bytes)   made not entrant
<writer thread='42755'/>
                              @ 27   jdk.internal.misc.Unsafe::invalidInput (8 bytes)
<writer thread='40963'/>
                                  @ 1   java.lang.Class::getComponentType (14 bytes)
                                    @ 1   java.lang.Class::isArray (0 bytes)   native method
<writer thread='24323'/>
                                  @ 7   java.lang.StringUTF16::getChar (60 bytes)   intrinsic
<writer thread='24579'/>
                                  @ 15   jdk.internal.misc.Unsafe::checkPrimitiveArray (22 bytes)
<writer thread='36611'/>
<writer thread='40963'/>
             
<writer thread='36611'/>
<writer thread='42755'/>
             
<writer thread='36611'/>
<writer thread='24579'/>
        
<writer thread='42755'/>
             
<writer thread='36611'/>
<writer thread='40963'/>
      
<writer thread='42755'/>
      @ 4  
<writer thread='36611'/>
<writer thread='40963'/>
           
<writer thread='36611'/>
<writer thread='24579'/>
     
<writer thread='42755'/>
 java.lang.IllegalArgumentException::
<writer thread='24579'/>
                       
<writer thread='36611'/>
<writer thread='40963'/>
  
<writer thread='42755'/>
&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='39683'/>
    943  349       4       java.io.BufferedInputStream::getBufIfOpen (21 bytes)
<writer thread='40963'/>
  @ 10   java.lang.Class::
<writer thread='36611'/>
<writer thread='39683'/>
<writer thread='40963'/>
isPrimitive (0 bytes)   intrinsic
<writer thread='24579'/>
@ 1  
<writer thread='40963'/>
             
<writer thread='24579'/>
 java.lang.Class::
<writer thread='40963'/>
                     @ 17   jdk.internal.misc.Unsafe::invalidInput (8 bytes)
                                    @ 4   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='24579'/>
getComponentType (14 bytes)
<writer thread='40963'/>
                              @ 17   jdk.internal.misc.Unsafe::checkPrimitivePointer (19 bytes)
<writer thread='24579'/>
                                      @ 1   java.lang.Class::isArray
<writer thread='40963'/>
                                @ 3   jdk.internal.misc.Unsafe::checkPointer (19 bytes)
<writer thread='24579'/>
 (0 bytes)   native method
<writer thread='40963'/>
                                  @ 6   jdk.internal.misc.Unsafe::checkNativeAddress (28 bytes)   callee is too large
<writer thread='42755'/>
    945  379       3       java.nio.charset.CoderResult::isUnderflow (13 bytes)
<writer thread='40963'/>
                                  @ 15   jdk.internal.misc.Unsafe::checkOffset (32 bytes)   callee is too large
                                @ 12   java.lang.Object::getClass (0 bytes)   intrinsic
                                @ 15   jdk.internal.misc.Unsafe::checkPrimitiveArray (22 bytes)
<writer thread='24579'/>
                                    @ 10   java.lang.Class::isPrimitive (0 bytes)   intrinsic
<writer thread='40963'/>
                                  @ 1   java.lang.Class::getComponentType (14 bytes)
                                    @ 1   java.lang.Class::isArray (0 bytes)   native method
<writer thread='24579'/>
                                    @ 17   jdk.internal.misc.Unsafe::invalidInput (8 bytes)
                                      @ 4   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='40963'/>
                                  @ 10   java.lang.Class::isPrimitive (0 bytes)   intrinsic
<writer thread='24579'/>
                                @ 17   jdk.internal.misc.Unsafe::checkPrimitivePointer (19 bytes)
<writer thread='40963'/>
                                  @ 17   jdk.internal.misc.Unsafe::invalidInput (8 bytes)
<writer thread='24579'/>
                                  @ 3   jdk.internal.misc.Unsafe::checkPointer (19 bytes)
<writer thread='40963'/>
                                    @ 4   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='24579'/>
                                    @ 6   jdk.internal.misc.Unsafe::checkNativeAddress (28 bytes)   callee is too large
<writer thread='42755'/>
    947  366       3       java.util.HashSet::&lt;init&gt; (17 bytes)
<writer thread='24579'/>
                                    @ 15   jdk.internal.misc.Unsafe::checkOffset (32 bytes)   callee is too large
<writer thread='42755'/>
                              @ 1   java.util.AbstractSet::&lt;init&gt; (5 bytes)
                                @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24579'/>
                                  @ 12   java.lang.Object::getClass (0 bytes)   intrinsic
                                  @ 15   jdk.internal.misc.Unsafe::checkPrimitiveArray (22 bytes)
<writer thread='42755'/>
                              @ 10   java.util.HashMap::&lt;init&gt; (8 bytes)
<writer thread='24579'/>
                                    @ 1   java.lang.Class::getComponentType (14 bytes)
<writer thread='42755'/>
                                @ 4   java.util.HashMap::&lt;init&gt; (98 bytes)   callee is too large
<writer thread='24579'/>
                                      @ 1   java.lang.Class::isArray (0 bytes)   native method
                                    @ 10   java.lang.Class::isPrimitive (0 bytes)   intrinsic
                                    @ 17   jdk.internal.misc.Unsafe::invalidInput (8 bytes)
                                      @ 4   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 29   jdk.internal.misc.Unsafe::copyMemory0 (0 bytes)   native method
<writer thread='24323'/>
    949  382       3       java.util.ImmutableCollections$AbstractImmutableSet::&lt;init&gt; (5 bytes)
                              @ 1   java.util.ImmutableCollections$AbstractImmutableCollection::&lt;init&gt; (5 bytes)
                                @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='42755'/>
    951  383       3       java.util.HashMap::afterNodeAccess (1 bytes)
<writer thread='24323'/>
    951  355       3       sun.nio.fs.UnixPath::getByteArrayForSysCalls (48 bytes)
<writer thread='42755'/>
    951  356       3       sun.nio.fs.NativeBuffers::getNativeBufferFromCache (51 bytes)
                              @ 3   java.lang.ThreadLocal::get (38 bytes)   callee is too large
<writer thread='24323'/>
                              @ 1   sun.nio.fs.UnixPath::getFileSystem (5 bytes)
                              @ 4   sun.nio.fs.UnixFileSystem::needToResolveAgainstDefaultDirectory (5 bytes)
<writer thread='42755'/>
                              @ 30   sun.nio.fs.NativeBuffer::size (5 bytes)
<writer thread='24323'/>
                              @ 11   sun.nio.fs.UnixPath::getFileSystem (5 bytes)
                              @ 14   sun.nio.fs.UnixFileSystem::defaultDirectory (5 bytes)
                              @ 21   sun.nio.fs.UnixPath::resolve (103 bytes)   callee is too large
                              @ 26   sun.nio.fs.UnixPath::isEmpty (14 bytes)
    956  358       3       sun.nio.fs.NativeBuffers::releaseNativeBuffer (97 bytes)
                              @ 3   java.lang.ThreadLocal::get (38 bytes)   callee is too large
                              @ 27   java.lang.ThreadLocal::set (30 bytes)   no static binding
                              @ 67   sun.nio.fs.NativeBuffer::size (5 bytes)
                              @ 71   sun.nio.fs.NativeBuffer::size (5 bytes)
                              @ 78   sun.nio.fs.NativeBuffer::free (10 bytes)
                                @ 4   java.lang.ref.Cleaner$Cleanable::clean (0 bytes)   not inlineable
<writer thread='42755'/>
    958  360       3       sun.nio.fs.NativeBuffers::copyCStringToNativeBuffer (67 bytes)
<writer thread='24323'/>
                              @ 93   sun.nio.fs.NativeBuffer::free (10 bytes)
<writer thread='42755'/>
                              @ 44   sun.nio.fs.NativeBuffer::address (5 bytes)
<writer thread='24323'/>
                                @ 4   java.lang.ref.Cleaner$Cleanable::clean (0 bytes)   not inlineable
<writer thread='42755'/>
                              @ 49   jdk.internal.misc.Unsafe::copyMemory (33 bytes)
                                @ 9   jdk.internal.misc.Unsafe::copyMemoryChecks (21 bytes)
                                  @ 3   jdk.internal.misc.Unsafe::checkSize (32 bytes)   callee is too large
                                  @ 9   jdk.internal.misc.Unsafe::checkPrimitivePointer (19 bytes)
<writer thread='40963'/>
    959  361       3       jdk.internal.misc.Unsafe::putByte (8 bytes)
<writer thread='42755'/>
                                    @ 3   jdk.internal.misc.Unsafe::checkPointer (19 bytes)
<writer thread='40963'/>
                              @ 4   jdk.internal.misc.Unsafe::putByte (0 bytes)   intrinsic
<writer thread='42755'/>
                                      @ 6   jdk.internal.misc.Unsafe::checkNativeAddress (28 bytes)   callee is too large
                                      @ 15   jdk.internal.misc.Unsafe::checkOffset (32 bytes)   callee is too large
<writer thread='40963'/>
    960  384       3       java.io.DataInputStream::readInt (72 bytes)
<writer thread='42755'/>
                                    @ 12   java.lang.Object::getClass (0 bytes)   intrinsic
                                    @ 15   jdk.internal.misc.Unsafe::checkPrimitiveArray (22 bytes)
<writer thread='40963'/>
                              @ 4  
<writer thread='42755'/>
                                      @ 1  
<writer thread='40963'/>
 java.io.InputStream::read (0 bytes)   no static binding
                              @ 12   java.io.InputStream::read (0 bytes)   no static binding
                              @ 20   java.io.InputStream::read (0 bytes)   no static binding
                              @ 28   java.io.InputStream::read (0 bytes)   no static binding
                              @ 48  java/io/EOFException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='42755'/>
 java.lang.Class::getComponentType (14 bytes)
                                        @ 1   java.lang.Class::isArray (0 bytes)   native method
<writer thread='24579'/>
    962  387       3       java.util.HashMap$ValueIterator::&lt;init&gt; (11 bytes)
                              @ 7   java.util.HashMap$HashIterator::&lt;init&gt; (79 bytes)   callee is too large
<writer thread='42755'/>
                                      @ 10   java.lang.Class::isPrimitive (0 bytes)   intrinsic
                                      @ 17   jdk.internal.misc.Unsafe::invalidInput (8 bytes)
                                        @ 4   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                  @ 17   jdk.internal.misc.Unsafe::checkPrimitivePointer (19 bytes)
                                    @ 3   jdk.internal.misc.Unsafe::
<writer thread='24579'/>
    963  385       3       java.util.HashMap::values (25 bytes)
<writer thread='42755'/>
checkPointer (19 bytes)
<writer thread='24579'/>
                              @ 14   java.util.HashMap$Values::&lt;init&gt; (10 bytes)
<writer thread='42755'/>
                                      @ 6   jdk.internal.misc.Unsafe::checkNativeAddress (28 bytes)   callee is too large
<writer thread='24579'/>
                                @ 6   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='42755'/>
                                @ 29   jdk.internal.misc.Unsafe::copyMemory0 (0 bytes)   native method
                              @ 56   sun.nio.fs.NativeBuffer::address (5 bytes)
                              @ 63   jdk.internal.misc.Unsafe::putByte (8 bytes)   force inline by annotation
                                @ 4   jdk.internal.misc.Unsafe::putByte (0 bytes)   intrinsic
<writer thread='40963'/>
    965  389       3       sun.nio.fs.MacOSXFileSystem::normalizeJavaPath (45 bytes)
<writer thread='24323'/>
    965  388       3       java.lang.StringCoding::hasNegatives (25 bytes)
<writer thread='40963'/>
                              @ 4   java.lang.String::length (11 bytes)
                                @ 6   java.lang.String::coder (15 bytes)
                              @ 12   java.lang.String::charAt
<writer thread='24579'/>
    966  386       3       java.util.HashMap$Values::iterator (12 bytes)
                              @ 8   java.util.HashMap$ValueIterator::&lt;init&gt; (11 bytes)
                                @ 7   java.util.HashMap$HashIterator::&lt;init&gt; (79 bytes)   callee is too large
<writer thread='40963'/>
 (25 bytes)
                                @ 1   java.lang.String::isLatin1 (19 bytes)
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)
<writer thread='24323'/>
    967  391       3       java.util.HashMap$Values::size (8 bytes)
<writer thread='40963'/>
                                  @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                                @ 21   java.lang.StringUTF16::charAt (11 bytes)
                                  @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
                                    @ 2   java.lang.StringUTF16::length (5 bytes)
<writer thread='24579'/>
    968  381       3       java.nio.ByteBuffer::limit (8 bytes)
<writer thread='40963'/>
                                    @ 5   java.lang.String::
<writer thread='24323'/>
    968  392       3       java.lang.module.ModuleDescriptor$Builder::requires (28 bytes)
<writer thread='40963'/>
checkIndex (48 bytes)   callee is too large
<writer thread='24579'/>
                              @ 2   java.nio.Buffer::limit (74 bytes)   callee is too large
<writer thread='40963'/>
                                  @ 7   java.lang.StringUTF16::getChar (60 bytes)   intrinsic
<writer thread='24323'/>
                              @ 8   jdk.internal.module.Checks::requireModuleName (137 bytes)   callee is too large
<writer thread='40963'/>
                              @ 26   java.lang.String::toCharArray (25 bytes)
                                @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='24323'/>
                              @ 21   java.lang.module.ModuleDescriptor$Requires::&lt;init&gt; (52 bytes)   callee is too large
                              @ 24   java.lang.module.ModuleDescriptor$Builder::requires (102 bytes)   callee is too large
<writer thread='40963'/>
                                @ 11   java.lang.StringLatin1::toChars (16 bytes)
<writer thread='24579'/>
    970  393       3       java.lang.module.ModuleDescriptor$Requires::&lt;init&gt; (52 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='40963'/>
                                  @ 11   java.lang.StringLatin1::inflate (34 bytes)   callee is too large
<writer thread='24579'/>
                              @ 29   java.util.Set::copyOf (27 bytes)
<writer thread='40963'/>
                                @ 21   java.lang.StringUTF16::toChars (18 bytes)
                                  @ 13   java.lang.StringUTF16::getChars (42 bytes)   callee is too large
<writer thread='24579'/>
                                @ 17   java.util.HashSet::&lt;init&gt; (40 bytes)   callee is too large
                                @ 20   java.util.HashSet::toArray (18 bytes)
<writer thread='40963'/>
                              @ 30  sun/nio/fs/MacOSXNativeDispatcher::normalizepath (not loaded)   not inlineable
<writer thread='24579'/>
                                  @ 8   java.util.HashMap::size (5 bytes)
<writer thread='40963'/>
                              @ 33   java.lang.String::&lt;init&gt; (10 bytes)
                                @ 6   java.lang.String::&lt;init&gt; (74 bytes)   callee is too large
<writer thread='24323'/>
    971  400       3       jdk.internal.misc.Unsafe::checkNativeAddress (28 bytes)
<writer thread='24579'/>
                                  @ 14   java.util.HashMap::keysToArray (81 bytes)   no static binding
                                @ 23   java.util.Set::of (68 bytes)   callee is too large
<writer thread='24323'/>
    972  399       3       jdk.internal.misc.Unsafe::checkOffset (32 bytes)
                              @ 27   jdk.internal.misc.Unsafe::invalidInput (8 bytes)
                                @ 4   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
    975  401       3       java.util.Objects::requireNonNull (15 bytes)
                              @ 9   java.lang.NullPointerException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
<writer thread='42755'/>
    975  394       3       java.lang.module.ModuleDescriptor$Builder::requires (102 bytes)
                              @ 13  java/lang/IllegalStateException::&lt;init&gt; (not loaded)   not inlineable
                              @ 18   java.lang.module.ModuleDescriptor$Requires::name (5 bytes)
                              @ 27   java.lang.String::equals (50 bytes)   callee is too large
                              @ 39   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 48   java.util.Map::containsKey (0 bytes)   no static binding
<writer thread='24323'/>
    976  396       1       sun.nio.fs.UnixPath::asByteArray (5 bytes)
<writer thread='42755'/>
                              @ 64   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
<writer thread='24579'/>
    976  395       1       java.nio.file.Files$AcceptAllFilter::accept (2 bytes)
<writer thread='42755'/>
                              @ 69   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
<writer thread='39683'/>

============================= C2-compiled nmethod ==============================
<opto_assembly compile_id='349'>
----------------------- MetaData before Compile_id = 349 ------------------------
{method}
 - this oop:          0x0000000121f1ec38
 - method holder:     &apos;java/io/BufferedInputStream&apos;
 - constants:         0x0000000121f1e478 constant pool [155] {0x0000000121f1e478} for &apos;java/io/BufferedInputStream&apos; cache=0x0000000121f20728
 - access:            0x81000002  private 
 - name:              &apos;getBufIfOpen&apos;
 - signature:         &apos;()[B&apos;
 - max stack:         4
 - max locals:        2
 - size of params:    1
 - method size:       13
 - highest level:     3
 - vtable index:      -2
 - i2i entry:         0x0000000105ef3de0
 - adapters:          AHE@0x00007f850a00f860: 0xb0000000 i2c: 0x0000000105f3bee0 c2i: 0x0000000105f3bfc3 c2iUV: 0x0000000105f3bf8a c2iNCI: 0x0000000105f3c000
 - compiled entry     0x0000000106633c80
 - code size:         21
 - code start:        0x0000000121f1ebf8
 - code end (excl):   0x0000000121f1ec0d
 - method data:       0x00000001221af160
 - checked ex length: 1
 - checked ex start:  0x0000000121f1ec34
 - linenumber start:  0x0000000121f1ec0d
 - localvar length:   2
 - localvar start:    0x0000000121f1ec1a
 - compiled code: nmethod    977   56       3       java.io.BufferedInputStream::getBufIfOpen (21 bytes)

------------------------ OptoAssembly for Compile_id = 349 -----------------------
#
#  byte[int:&gt;=0]:exact * ( java/io/BufferedInputStream:NotNull * )
#
#r018 rsi:rsi   : parm 0: java/io/BufferedInputStream:NotNull *
# -- Old rsp -- Framesize: 48 --
#r583 rsp+44: in_preserve
#r582 rsp+40: return address
#r581 rsp+36: in_preserve
#r580 rsp+32: saved fp register
#r579 rsp+28: pad2, stack alignment
#r578 rsp+24: pad2, stack alignment
#r577 rsp+20: Fixed slot 1
#r576 rsp+16: Fixed slot 0
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N35: #	out( B1 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
000     movl    rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	decode_klass_not_null rscratch1, rscratch1
	cmpq    rax, rscratch1	 # Inline cache check
	jne     SharedRuntime::_ic_miss_stub
	nop	# nops to align entry point


020     B1: #	out( B3 B2 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
020     # stack bang (136 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #32	# Create frame

02c     movl    R10, [RSI + #32 (8-bit)]	# compressed ptr ! Field: volatile java/io/BufferedInputStream.buf
030     MEMBAR-acquire ! (empty encoding)
030     testl   R10, R10	# compressed ptr
033     je,s   B3  P=0.000000 C=33729.000000

035     B2: #	out( N35 ) &lt;- in( B1 )  Freq: 1
035     decode_heap_oop_not_null RAX,R10
039     addq    rsp, 32	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

048     ret

049     B3: #	out( N35 ) &lt;- in( B1 )  Freq: 4.76837e-07
049     movl    RSI, #-187	# int
04e     movl    [rsp + #0], R10	# spill
        nop 	# 1 bytes pad for loops and calls
053     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.io.BufferedInputStream::getBufIfOpen @ bci:6  L[0]=_ L[1]=rsp + #0 STK[0]=rsp + #0
        # OopMap {[0]=NarrowOop off=88/0x58}
058     ud2	# ShouldNotReachHere

--------------------------------------------------------------------------------
</opto_assembly>
<writer thread='42755'/>
                              @ 73   java.lang.StringBuilder::append (8 bytes)
<writer thread='24579'/>
    983  403       3       sun.nio.fs.MacOSXFileSystem::normalizeNativePath (42 bytes)
<writer thread='24323'/>
    983  404       3       sun.nio.cs.UTF_8$Encoder::encodeArrayLoop (489 bytes)
<writer thread='42755'/>
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 78   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
<writer thread='40963'/>
    983  408       3       jdk.internal.module.Checks::isJavaIdentifier (76 bytes)
<writer thread='42755'/>
                              @ 81   java.lang.StringBuilder::toString (35 bytes)
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
<writer thread='40963'/>
                              @ 1   java.lang.String::isEmpty (14 bytes)
<writer thread='24323'/>
                              @ 1   java.nio.CharBuffer::array (35 bytes)
<writer thread='24579'/>
                              @ 30  sun/nio/fs/MacOSXNativeDispatcher::normalizepath (not loaded)   not inlineable
<writer thread='24323'/>
                                @ 11  java/lang/UnsupportedOperationException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='40963'/>
                              
<writer thread='42755'/>
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
<writer thread='24323'/>
                                @ 26  java/nio/ReadOnlyBufferException
<writer thread='42755'/>
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
<writer thread='40963'/>
@ 11   java.util.ImmutableCollections$SetN::contains (26 bytes)
<writer thread='42755'/>
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='40963'/>
                                @ 1   java.util.Objects::requireNonNull (14 bytes)
                                  @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='24323'/>
::&lt;init&gt; (not loaded)   not inlineable
<writer thread='42755'/>
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
                              @ 84  java/lang/IllegalStateException::&lt;init&gt; (not loaded)   not inlineable
                              @ 94   java.util.Map::put (0 bytes)   no static binding
<writer thread='24323'/>
                              @ 6   java.nio.CharBuffer::arrayOffset (35 bytes)
                                @ 11  java/lang/UnsupportedOperationException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24579'/>
    986  405       3       jdk.internal.module.ModuleInfo$ConstantPool::&lt;init&gt; (452 bytes)
<writer thread='24323'/>
                                @ 26  java/nio/ReadOnlyBufferException::&lt;init&gt; (not loaded)   not inlineable
                              @ 10   java.nio.Buffer::position (5 bytes)
<writer thread='24579'/>
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
                              @ 17   java.nio.CharBuffer::arrayOffset (35 bytes)
<writer thread='24579'/>
                              @ 5   java.io.DataInputStream::readUnsignedShort (39 bytes)   callee is too large
<writer thread='24323'/>
                                @ 11  java/lang/UnsupportedOperationException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24579'/>
                              @ 27   java.io.DataInputStream::readUnsignedByte (22 bytes)
<writer thread='24323'/>
                                @ 26  java/nio/ReadOnlyBufferException::&lt;init&gt;
<writer thread='24579'/>
                                @ 4   java.io.InputStream::read (0 bytes)   no static binding
<writer thread='24323'/>
 (not loaded)   not inlineable
<writer thread='24579'/>
                                @ 16  java/io/EOFException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24323'/>
                              @ 21   java.nio.Buffer::limit (5 bytes)
<writer thread='24579'/>
                              @ 133   java.io.DataInputStream::readUTF (5 bytes)
<writer thread='24323'/>
                              @ 28   java.nio.ByteBuffer::array (35 bytes)
<writer thread='24579'/>
                                @ 1   java.io.DataInputStream::readUTF (501 bytes)   callee is too large
<writer thread='40963'/>
                                @ 14   java.util.ImmutableCollections$SetN::probe (56 bytes)   callee is too large
<writer thread='24323'/>
                                @ 11  java/lang/UnsupportedOperationException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24579'/>
                              @ 153   jdk.internal.module.ModuleInfo$ConstantPool$ValueEntry::&lt;init&gt; (11 bytes)
<writer thread='40963'/>
                              @ 23   java.lang.Character::
<writer thread='24579'/>
                                @ 2   jdk.internal.module.ModuleInfo$ConstantPool$Entry::&lt;init&gt; (10 bytes)
<writer thread='24323'/>
                                @ 26  java/nio/ReadOnlyBufferException::&lt;init&gt; (not loaded)
<writer thread='24579'/>
        
<writer thread='40963'/>
codePointAt
<writer thread='24323'/>
   not inlineable
<writer thread='24579'/>
     
<writer thread='40963'/>
 (51 bytes)
<writer thread='24579'/>
      
<writer thread='24323'/>

<writer thread='24579'/>
               @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
                              @ 34   java.nio.ByteBuffer::arrayOffset (35 bytes)
<writer thread='24579'/>
                              @ 358   java.io.DataInputStream::readInt (72 bytes)   callee is too large
<writer thread='24323'/>
                                @ 11  java/lang/UnsupportedOperationException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24579'/>
                              @ 378   java.lang.Integer::valueOf (32 bytes)
<writer thread='24323'/>
                                @ 26  java/nio/ReadOnlyBufferException::&lt;init&gt; (not loaded)   not inlineable
                              @ 38   java.nio.Buffer::position (5 bytes)
                              @ 45   java.nio.ByteBuffer::
<writer thread='24579'/>
                                @ 28   java.lang.Integer::&lt;init&gt; (10 bytes)
<writer thread='24323'/>
arrayOffset (35 bytes)
<writer thread='24579'/>
                                  @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
<writer thread='24323'/>
                                @ 11  java/lang/UnsupportedOperationException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24579'/>
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
                                @ 26  java/nio/ReadOnlyBufferException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='39683'/>
    990   56       3       java.io.BufferedInputStream::getBufIfOpen (21 bytes)   made not entrant
<writer thread='24579'/>
                              @ 381   jdk.internal.module.ModuleInfo$ConstantPool$ValueEntry::&lt;init&gt; (11 bytes)
<writer thread='40963'/>
   callee is too large
<writer thread='24323'/>
                              @ 49   java.nio.Buffer::
<writer thread='24579'/>
                                @ 2   jdk.internal.module.ModuleInfo$ConstantPool$Entry::&lt;init&gt; (10 bytes)
<writer thread='40963'/>
                              @ 28   java.lang.Character::isJavaIdentifierStart (9 bytes)
<writer thread='24323'/>
limit (5 bytes)
<writer thread='40963'/>
                                @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                @ 5   java.lang.CharacterData::isJavaIdentifierStart (0 bytes)   no static binding
<writer thread='24323'/>
                              @ 67   java.lang.Math::min (11 bytes)
<writer thread='24579'/>
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='40963'/>
                              @ 37   java.lang.Character::charCount (12 bytes)
                              @ 43   java.lang.String::length (11 bytes)
<writer thread='24579'/>
                              @ 327   java.io.DataInputStream::readFloat (8 bytes)
<writer thread='40963'/>
                                @ 6   java.lang.String::coder (15 bytes)
<writer thread='24323'/>
                              
<writer thread='24579'/>
                                @ 1   java.io.DataInputStream::readInt (72 bytes)   callee is too large
<writer thread='24323'/>
@ 143   sun.nio.cs.UTF_8$Encoder::overflow
<writer thread='24579'/>
                                @ 4   java.lang.Float::intBitsToFloat (0 bytes)   intrinsic
<writer thread='40963'/>
                              @ 51   java.lang.Character::codePointAt (51 bytes)
<writer thread='24579'/>
                              @ 347   java.lang.Float::valueOf (9 bytes)
<writer thread='24323'/>
 (11 bytes)
<writer thread='24579'/>
                                @ 5   java.lang.Float::&lt;init&gt; (10 bytes)
<writer thread='24323'/>
                                @ 4   sun.nio.cs.UTF_8::updatePositions (23 bytes)
<writer thread='24579'/>
                                  @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
<writer thread='24323'/>
                                  @ 3   java.nio.CharBuffer::arrayOffset (35 bytes)   callee is too large
<writer thread='24579'/>
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='40963'/>
   callee is too large
                              @ 56   java.lang.Character::isJavaIdentifierPart (9 bytes)
                                @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
<writer thread='24323'/>
                                  @ 7   java.nio.CharBuffer::position
<writer thread='40963'/>
                                @ 5   java.lang.CharacterData::isJavaIdentifierPart (0 bytes)   no static binding
<writer thread='24579'/>
                              @ 350   jdk.internal.module.ModuleInfo$ConstantPool$ValueEntry::&lt;init&gt; (11 bytes)
                                @ 2  
<writer thread='40963'/>
                              @ 66   java.lang.Character::charCount (12 bytes)
<writer thread='24323'/>
 (6 bytes)
                                    @ 2   java.nio.CharBuffer::position (8 bytes)
<writer thread='24579'/>
 jdk.internal.module.ModuleInfo$ConstantPool$Entry::&lt;init&gt; (10 bytes)
<writer thread='24323'/>
                                      @ 2   java.nio.Buffer::position (55 bytes)   callee is too large
<writer thread='24579'/>
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
                                  @ 14   java.nio.ByteBuffer::arrayOffset (35 bytes)   callee is too large
                                  @ 18   java.nio.Buffer::position (55 bytes)   no static binding
<writer thread='24579'/>
                              @ 389   java.io.DataInputStream::readLong (128 bytes)   callee is too large
                              @ 409   java.lang.Long::valueOf (40 bytes)   callee is too large
<writer thread='24323'/>
                              @ 184   sun.nio.cs.UTF_8$Encoder::overflow (11 bytes)
<writer thread='24579'/>
                              @ 412   jdk.internal.module.ModuleInfo$ConstantPool$ValueEntry::&lt;init&gt; (11 bytes)
<writer thread='24323'/>
                                @ 4   sun.nio.cs.UTF_8::updatePositions (23 bytes)
<writer thread='24579'/>
                                @ 2   jdk.internal.module.ModuleInfo$ConstantPool$Entry::&lt;init&gt; (10 bytes)
<writer thread='24323'/>
                                  @ 3   java.nio.CharBuffer::
<writer thread='24579'/>
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 189   java.io.DataInputStream::readDouble (8 bytes)
<writer thread='24323'/>
arrayOffset (35 bytes)   callee is too large
<writer thread='24579'/>
                                @ 1   java.io.DataInputStream::readLong (128 bytes)   callee is too large
<writer thread='24323'/>
                                  @ 7   java.nio.CharBuffer::position (6 bytes)
<writer thread='24579'/>
                                @ 4   java.lang.Double::longBitsToDouble (0 bytes)   intrinsic
<writer thread='24323'/>
                                    @ 2   java.nio.CharBuffer::position (8 bytes)
<writer thread='24579'/>
                              @ 209   java.lang.Double::valueOf (9 bytes)
<writer thread='24323'/>
                                      @ 2   java.nio.Buffer::position (55 bytes)   callee is too large
<writer thread='24579'/>
                                @ 5   java.lang.Double::&lt;init&gt; (10 bytes)
<writer thread='24323'/>
                                  @ 14   java.nio.ByteBuffer::arrayOffset (35 bytes)   callee is too large
<writer thread='24579'/>
                                  @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
<writer thread='24323'/>
                                  @ 18   java.nio.Buffer::position (55 bytes)   no static binding
<writer thread='24579'/>
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
                              @ 229   java.lang.Character::isSurrogate (18 bytes)
<writer thread='24579'/>
                              @ 212   jdk.internal.module.ModuleInfo$ConstantPool$ValueEntry::&lt;init&gt; (11 bytes)
                                @ 2   jdk.internal.module.ModuleInfo$ConstantPool$Entry::&lt;init&gt; (10 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
                              @ 247  sun/nio/cs/Surrogate$Parser::&lt;init&gt; (not loaded)   not inlineable
                              @ 264  sun/nio/cs/Surrogate$Parser::parse (not loaded)   not inlineable
<writer thread='24579'/>
                              @ 261   java.io.DataInputStream::readUnsignedByte (22 bytes)
<writer thread='24323'/>
                              @ 280   sun.nio.cs.UTF_8::updatePositions (23 bytes)
<writer thread='24579'/>
                                @ 4   java.io.InputStream::read (0 bytes)   no static binding
<writer thread='24323'/>
                                @ 3   java.nio.CharBuffer::arrayOffset (35 bytes)   callee is too large
                                @ 7   java.nio.CharBuffer::position (6 bytes)
                                  @ 2   java.nio.CharBuffer::position (8 bytes)
                                    @ 2   java.nio.Buffer::position (55 bytes)   callee is too large
                                @ 14   java.nio.ByteBuffer::arrayOffset (35 bytes)   callee is too large
<writer thread='24579'/>
                                @ 16  java/io/EOFException::&lt;init&gt; (not loaded)   not inlineable
                              @ 269   java.io.DataInputStream::readUnsignedShort (39 bytes)   callee is too large
<writer thread='24323'/>
                                @ 18   java.nio.Buffer::position (55 bytes)   no static binding
<writer thread='24579'/>
                              @ 291  jdk/internal/module/ModuleInfo$ConstantPool$Index2Entry::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24323'/>
                              @ 287  sun/nio/cs/Surrogate$Parser::error (not loaded)   not inlineable
<writer thread='24579'/>
                              @ 299   java.io.DataInputStream::readUnsignedShort (39 bytes)   callee is too large
<writer thread='24323'/>
                              @ 306   sun.nio.cs.UTF_8$Encoder::overflow (11 bytes)
<writer thread='24579'/>
                              @ 319   jdk.internal.module.ModuleInfo$ConstantPool$IndexEntry::&lt;init&gt;
<writer thread='24323'/>
                                @ 4   sun.nio.cs.UTF_8::updatePositions (23 bytes)
<writer thread='24579'/>
 (11 bytes)
<writer thread='24323'/>
                                  @ 3   java.nio.CharBuffer::arrayOffset (35 bytes)   callee is too large
<writer thread='24579'/>
                                @ 2   jdk.internal.module.ModuleInfo$ConstantPool$Entry::&lt;init&gt; (10 bytes)
<writer thread='24323'/>
                                  @ 7   java.nio.CharBuffer::position
<writer thread='24579'/>
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
 (6 bytes)
                                    @ 2   java.nio.CharBuffer::position (8 bytes)
                                      @ 2   java.nio.Buffer::position (55 bytes)   callee is too large
<writer thread='24579'/>
                              @ 223   java.io.DataInputStream::readUnsignedShort (39 bytes)   callee is too large
                              @ 231   java.io.DataInputStream::readUnsignedShort (39 bytes)   callee is too large
<writer thread='24323'/>
             
<writer thread='24579'/>
                              @ 253  jdk/internal/module/ModuleInfo$ConstantPool$Index2Entry::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24323'/>
                     @ 14   java.nio.ByteBuffer::arrayOffset (35 bytes)   callee is too large
<writer thread='24579'/>
                              @ 161   java.io.DataInputStream::readUnsignedShort (39 bytes)   callee is too large
<writer thread='24323'/>
                                  @ 18   java.nio.Buffer::position (55 bytes)   no static binding
<writer thread='24579'/>
                              @ 181   jdk.internal.module.ModuleInfo$ConstantPool$IndexEntry::&lt;init&gt; (11 bytes)
                                @ 2   jdk.internal.module.ModuleInfo$ConstantPool$Entry::&lt;init&gt; (10 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
                              @ 409   sun.nio.cs.UTF_8$Encoder::overflow (11 bytes)
                                @ 4   sun.nio.cs.UTF_8::updatePositions (23 bytes)
                                  @ 3   java.nio.CharBuffer::arrayOffset (35 bytes)   callee is too large
<writer thread='24579'/>
                              @ 426   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
<writer thread='24323'/>
                                  @ 7   java.nio.CharBuffer::position (6 bytes)
<writer thread='24579'/>
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
<writer thread='24323'/>
                                    @ 2   java.nio.CharBuffer::position (8 bytes)
<writer thread='24579'/>
                              @ 431   java.lang.StringBuilder::append (8 bytes)
<writer thread='24323'/>
                                      @ 2   java.nio.Buffer::position (55 bytes)   callee is too large
<writer thread='24579'/>
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 435   java.lang.StringBuilder::append (8 bytes)
<writer thread='24323'/>
                                  @ 14   java.nio.ByteBuffer::arrayOffset (35 bytes)   callee is too large
<writer thread='24579'/>
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
<writer thread='24323'/>
                                  @ 18   java.nio.Buffer::position (55 bytes)   no static binding
<writer thread='24579'/>
                              @ 438   java.lang.StringBuilder::toString (35 bytes)
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
<writer thread='24323'/>
                              @ 482   sun.nio.cs.UTF_8::updatePositions (23 bytes)
                                @ 3   java.nio.CharBuffer::arrayOffset (35 bytes)   callee is too large
                                @ 7   java.nio.CharBuffer::position (6 bytes)
                                  @ 2   java.nio.CharBuffer::position (8 bytes)
<writer thread='24579'/>
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
<writer thread='24323'/>
                                    @ 2   java.nio.Buffer::position (55 bytes)   callee is too large
<writer thread='24579'/>
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
<writer thread='24323'/>
                                @ 14   java.nio.ByteBuffer::arrayOffset (35 bytes)   callee is too large
<writer thread='24579'/>
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
<writer thread='24323'/>
                                @ 18   java.nio.Buffer::position (55 bytes)   no static binding
<writer thread='24579'/>
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='39683'/>
   1002  353  s    4       java.io.BufferedInputStream::read (49 bytes)
<writer thread='24579'/>
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
                              @ 441  jdk/internal/module/ModuleInfo::invalidModuleDescriptor (not loaded)   not inlineable
<writer thread='42755'/>
   1003  406       3       java.lang.module.ModuleDescriptor$Exports::&lt;init&gt; (26 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 6   java.util.Set::copyOf (27 bytes)
                                @ 17   java.util.HashSet::&lt;init&gt; (40 bytes)   callee is too large
                                @ 20   java.util.HashSet::toArray (18 bytes)
                                  @ 8   java.util.HashMap::size (5 bytes)
                                  @ 14   java.util.HashMap::keysToArray (81 bytes)   no static binding
<writer thread='40963'/>
   1004  407       3       java.lang.module.ModuleDescriptor$Builder::exports (92 bytes)
<writer thread='42755'/>
                                @ 23   java.util.Set::of (68 bytes)   callee is too large
<writer thread='39683'/>
<writer thread='42755'/>
        
<writer thread='40963'/>
                              @ 13  java/lang/IllegalStateException::&lt;init&gt; (not loaded)   not inlineable
                              @ 18   java.lang.module.ModuleDescriptor$Exports::source (5 bytes)
<writer thread='39683'/>
<writer thread='42755'/>
                      @ 19   java.util.Set::copyOf (27 bytes)
<writer thread='39683'/>
<writer thread='40963'/>
                              @ 27   java.util.Map::containsKey (0 bytes)   no static binding
<writer thread='42755'/>
                                @ 17   java.util.HashSet::&lt;init&gt; (40 bytes)   callee is too large
<writer thread='40963'/>
                              @ 43   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
<writer thread='42755'/>
                                @ 20   java.util.HashSet::toArray
<writer thread='40963'/>
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
                              @ 48   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
<writer thread='42755'/>
 (18 bytes)
<writer thread='40963'/>
                              @ 52   java.lang.StringBuilder::append (8 bytes)
<writer thread='42755'/>
                                  @ 8   java.util.HashMap::size (5 bytes)
<writer thread='40963'/>
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
<writer thread='42755'/>
                                  @ 14   java.util.HashMap::keysToArray (81 bytes)   no static binding
<writer thread='40963'/>
                              @ 57   java.lang.StringBuilder::append (8 bytes)
<writer thread='42755'/>
                                @ 23   java.util.Set::of (68 bytes)   callee is too large
<writer thread='40963'/>
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 60   java.lang.StringBuilder::toString (35 bytes)
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
                              @ 63  java/lang/IllegalStateException::&lt;init&gt; (not loaded)   not inlineable
                              @ 73   java.util.Map::put (0 bytes)   no static binding
                              @ 84   java.util.Set::add (0 bytes)   no static binding
<writer thread='42755'/>
   1012  422       3       java.util.Arrays::copyOf (19 bytes)
                              @ 11   java.lang.Math::min (11 bytes)
                              @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
   1015  421       3       java.nio.file.Files::provider (10 bytes)
                              @ 1   sun.nio.fs.UnixPath::getFileSystem (5 bytes)
                                @ 1   sun.nio.fs.UnixPath::getFileSystem (5 bytes)
                              @ 6   sun.nio.fs.UnixFileSystem::provider (5 bytes)
   1017  412       3       java.util.ArrayList$Itr::hasNext (20 bytes)
   1018  410       3       java.util.ArrayList::add (25 bytes)
                              @ 20   java.util.ArrayList::add (23 bytes)
                                @ 7   java.util.ArrayList::grow (11 bytes)
                                  @ 7   java.util.ArrayList::grow (60 bytes)   callee is too large
<writer thread='40963'/>
   1021  426       3       java.nio.Buffer::&lt;init&gt; (99 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 21   java.nio.Buffer::createCapacityException (52 bytes)   callee is too large
                              @ 33   java.nio.Buffer::limit (74 bytes)   no static binding
                              @ 39   java.nio.Buffer::position (55 bytes)   no static binding
                              @ 60   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
<writer thread='42755'/>
   1022  433       3       java.lang.module.ModuleDescriptor$Builder::exports (31 bytes)
<writer thread='40963'/>
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
                              @ 65   java.lang.StringBuilder::append (8 bytes)
<writer thread='42755'/>
                              @ 8   jdk.internal.module.Checks::requirePackageName (7 bytes)
<writer thread='40963'/>
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 69   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
<writer thread='42755'/>
                                @ 3   jdk.internal.module.Checks::requireTypeName (178 bytes)   callee is too large
<writer thread='40963'/>
                              @ 74   java.lang.StringBuilder::append (8 bytes)
<writer thread='42755'/>
                              @ 18  
<writer thread='40963'/>
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
<writer thread='42755'/>
 java.util.Set::of (4 bytes)
<writer thread='40963'/>
                              @ 78   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
<writer thread='42755'/>
                              @ 21   java.lang.module.ModuleDescriptor$Exports::&lt;init&gt; (26 bytes)
<writer thread='40963'/>
                              @ 83  
<writer thread='42755'/>
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='40963'/>
 java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
<writer thread='42755'/>
                                @ 6   java.util.Set::copyOf (27 bytes)
<writer thread='40963'/>
                              @ 86   java.lang.StringBuilder::toString (35 bytes)
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
<writer thread='42755'/>
                                  @ 17   java.util.HashSet::&lt;init&gt; (40 bytes)   callee is too large
                                  @ 20   java.util.HashSet::toArray (18 bytes)
<writer thread='40963'/>
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
<writer thread='42755'/>
                                    @ 8   java.util.HashMap::size (5 bytes)
<writer thread='40963'/>
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
<writer thread='42755'/>
                                    @ 14   java.util.HashMap::keysToArray (81 bytes)   no static binding
<writer thread='40963'/>
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='42755'/>
                                  @ 23   java.util.Set::of (68 bytes)   callee is too large
                                @ 19   java.util.Set::copyOf (27 bytes)
<writer thread='40963'/>
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
<writer thread='42755'/>
                                  @ 17   java.util.HashSet::&lt;init&gt; (40 bytes)   callee is too large
                                  @ 20   java.util.HashSet::toArray (18 bytes)
                                    @ 8   java.util.HashMap::size (5 bytes)
                                    @ 14   java.util.HashMap::keysToArray (81 bytes)   no static binding
                                  @ 23   java.util.Set::of (68 bytes)   callee is too large
                              @ 27   java.lang.module.ModuleDescriptor$Builder::exports (92 bytes)   callee is too large
<writer thread='40963'/>
                              @ 89   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
<writer thread='42755'/>
   1036  411       3       java.util.ArrayList::add (23 bytes)
                              @ 7   java.util.ArrayList::grow (11 bytes)
                                @ 7   java.util.ArrayList::grow (60 bytes)   callee is too large
<writer thread='40963'/>
   1037  413       3       java.util.ArrayList$Itr::next (66 bytes)
                              @ 1   java.util.ArrayList$Itr::checkForComodification (23 bytes)
                                @ 18  java/util/ConcurrentModificationException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='42755'/>
   1039  414       3       java.util.ArrayList$Itr::checkForComodification (23 bytes)
                              @ 18  java/util/ConcurrentModificationException::&lt;init&gt; (not loaded)   not inlineable
   1040  415   !   3       java.util.ImmutableCollections$ListItr::next (34 bytes)
                              @ 10   java.util.List::get (0 bytes)   no static binding
                              @ 30  java/util/NoSuchElementException::&lt;init&gt; (not loaded)   not inlineable
   1042  416       3       java.lang.module.ModuleDescriptor$Builder$$Lambda$3/0x0000000800062840::accept (12 bytes)
                              @ 8   java.lang.module.ModuleDescriptor$Builder::lambda$provides$0 (15 bytes)
<writer thread='9219'/>
   1043  440     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLL)V (native)   (static)
<writer thread='42755'/>
                                @ 5   java.lang.module.ModuleDescriptor::packageName (24 bytes)
                                  @ 3   java.lang.String::lastIndexOf (12 bytes)
                                    @ 3   java.lang.String::length (11 bytes)
                                      @ 6   java.lang.String::coder (15 bytes)
                                    @ 8   java.lang.String::lastIndexOf (29 bytes)   callee is too large
                                  @ 20   java.lang.String::substring (58 bytes)   callee is too large
                                @ 8   java.util.Set::add (0 bytes)   no static binding
<writer thread='40963'/>
                              @ 24  java/util/NoSuchElementException::&lt;init&gt; (not loaded)   not inlineable
                              @ 46  java/util/ConcurrentModificationException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='42755'/>
   1053  417       3       java.lang.module.ModuleDescriptor$Builder::lambda$provides$0 (15 bytes)
                              @ 5   java.lang.module.ModuleDescriptor::packageName (24 bytes)
                                @ 3   java.lang.String::lastIndexOf (12 bytes)
                                  @ 3   java.lang.String::length (11 bytes)
                                    @ 6   java.lang.String::coder (15 bytes)
                                  @ 8   java.lang.String::lastIndexOf (29 bytes)   callee is too large
<writer thread='40963'/>
   1055  430       3       java.nio.ByteBuffer::position (6 bytes)
<writer thread='42755'/>
                                @ 20   java.lang.String::substring (58 bytes)   callee is too large
<writer thread='40963'/>
                              @ 2   java.nio.ByteBuffer::position (8 bytes)   no static binding
<writer thread='42755'/>
                              @ 8   java.util.Set::add (0 bytes)   no static binding
<writer thread='40963'/>
   1056  439       3       java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   1058  424       3       java.util.Arrays::copyOf (40 bytes)
                              @ 14   java.lang.Class::getComponentType (14 bytes)
                                @ 1   java.lang.Class::isArray (0 bytes)   native method
<writer thread='42755'/>
   1058  409       1       java.lang.module.ModuleDescriptor$Provides::providers (5 bytes)
<writer thread='40963'/>
                              @ 18   java.lang.reflect.Array::newInstance (6 bytes)
                                @ 2   java.lang.reflect.Array::newArray (0 bytes)   native method
                              @ 32   java.lang.Math::min (11 bytes)
<writer thread='42755'/>
   1059  429       1       java.lang.AbstractStringBuilder::length (5 bytes)
<writer thread='40963'/>
                              @ 35   java.lang.System::arraycopy (0 bytes)   intrinsic
<writer thread='42755'/>
   1060  435       1       jdk.internal.module.ModuleInfo$Attributes::descriptor (5 bytes)
   1060  436       1       jdk.internal.module.ModuleInfo$Attributes::target (5 bytes)
   1061  437       1       jdk.internal.module.ModuleInfo$Attributes::recordedHashes (5 bytes)
   1061  425       1       java.nio.charset.CharsetEncoder::maxBytesPerChar (5 bytes)
   1062  427       1       java.nio.DirectByteBuffer::address (5 bytes)
   1063  431       1       java.nio.HeapByteBuffer::isReadOnly (2 bytes)
   1063  432       1       java.nio.DirectByteBuffer::isDirect (2 bytes)
<writer thread='40963'/>
   1064  441       1       java.lang.invoke.MethodHandles$Lookup::lookupClass (5 bytes)
<writer thread='42755'/>
   1064  434       1       java.util.Collections$EmptyIterator::hasNext (2 bytes)
<writer thread='40963'/>
   1064  438       1       jdk.internal.module.ModuleInfo$Attributes::moduleResolution (5 bytes)
<writer thread='9219'/>
   1069  442     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLL)V (native)   (static)
<writer thread='42755'/>
   1069  443       3       java.lang.invoke.LambdaForm$BasicType::basicType (19 bytes)
                              @ 1   java.lang.Class::isPrimitive (0 bytes)   intrinsic
                              @ 12   sun.invoke.util.Wrapper::forPrimitiveType (49 bytes)   callee is too large
                              @ 15   java.lang.invoke.LambdaForm$BasicType::basicType (10 bytes)
<writer thread='40963'/>
   1070  444       3       jdk.internal.org.objectweb.asm.ByteVector::&lt;init&gt; (13 bytes)
<writer thread='42755'/>
                                @ 1   sun.invoke.util.Wrapper::basicTypeChar (5 bytes)
<writer thread='40963'/>
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='9219'/>
   1071  447     n 0       java.lang.Class::isInterface (native)   
<writer thread='42755'/>
                                @ 6   java.lang.invoke.LambdaForm$BasicType::basicType (172 bytes)   callee is too large
<writer thread='37635'/>

============================= C2-compiled nmethod ==============================
<opto_assembly compile_id='200'>
----------------------- MetaData before Compile_id = 200 ------------------------
{method}
 - this oop:          0x0000000121f04130
 - method holder:     &apos;java/lang/StringLatin1&apos;
 - constants:         0x0000000121f02920 constant pool [372] {0x0000000121f02920} for &apos;java/lang/StringLatin1&apos; cache=0x0000000121f072b0
 - access:            0xc1000009  public static 
 - name:              &apos;equals&apos;
 - signature:         &apos;([B[B)Z&apos;
 - max stack:         4
 - max locals:        3
 - size of params:    2
 - method size:       13
 - intrinsic id:      104 _equalsL
 - highest level:     3
 - vtable index:      -2
 - i2i entry:         0x0000000105ef3de0
 - adapters:          AHE@0x00007f850a00f8b0: 0xbb000000 i2c: 0x0000000105f3bb60 c2i: 0x0000000105f3bc47 c2iUV: 0x0000000105f3bc0e c2iNCI: 0x0000000105f3bc84
 - compiled entry     0x0000000106645f80
 - code size:         36
 - code start:        0x0000000121f040d0
 - code end (excl):   0x0000000121f040f4
 - method data:       0x00000001221a3cc8
 - checked ex length: 0
 - linenumber start:  0x0000000121f040f4
 - localvar length:   3
 - localvar start:    0x0000000121f04102
 - compiled code: nmethod   1072   94       3       java.lang.StringLatin1::equals (36 bytes)

------------------------ OptoAssembly for Compile_id = 200 -----------------------
#
#  bool ( byte[int:&gt;=0]:exact *, byte[int:&gt;=0]:exact * )
#
#r018 rsi:rsi   : parm 0: byte[int:&gt;=0]:exact *
#r016 rdx:rdx   : parm 1: byte[int:&gt;=0]:exact *
# -- Old rsp -- Framesize: 48 --
#r583 rsp+44: in_preserve
#r582 rsp+40: return address
#r581 rsp+36: in_preserve
#r580 rsp+32: saved fp register
#r579 rsp+28: pad2, stack alignment
#r578 rsp+24: pad2, stack alignment
#r577 rsp+20: Fixed slot 1
#r576 rsp+16: Fixed slot 0
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N1: #	out( B1 ) &lt;- in( B26 B27 B24 B23 )  Freq: 1

000     B1: #	out( B26 B2 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
000     # stack bang (144 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #32	# Create frame

00c     movl    RBP, [RSI + #12 (8-bit)]	# range
00f     NullCheck RSI

00f     B2: #	out( B27 B3 ) &lt;- in( B1 )  Freq: 0.999999
00f     movl    R11, [RDX + #12 (8-bit)]	# range
013     NullCheck RDX

013     B3: #	out( B23 B4 ) &lt;- in( B2 )  Freq: 0.999998
013     xorl    RAX, RAX	# int
015     cmpl    RBP, R11
018     jne     B23  P=0.522237 C=5239.000000

01e     B4: #	out( B22 B5 ) &lt;- in( B3 )  Freq: 0.477762
01e     testl   RBP, RBP	# unsigned
020     jbe,u   B22  P=0.051213 C=44754.000000

026     B5: #	out( B24 B6 ) &lt;- in( B4 )  Freq: 0.453294
026     movl    R8, RBP	# spill
029     decl    R8	# int
02c     cmpl    R8, RBP	# unsigned
02f     jnb,u   B24  P=0.000001 C=-1.000000

035     B6: #	out( B24 B7 ) &lt;- in( B5 )  Freq: 0.453294
035     testl   R11, R11	# unsigned
038     jbe,u   B24  P=0.000001 C=-1.000000

03e     B7: #	out( B24 B8 ) &lt;- in( B6 )  Freq: 0.453293
03e     cmpl    R8, R11	# unsigned
041     jnb,u   B24  P=0.000001 C=-1.000000

047     B8: #	out( B23 B9 ) &lt;- in( B7 )  Freq: 0.453293
047     movsbl  R10, [RDX + #16 (8-bit)]	# byte
04c     movsbl  R9, [RSI + #16 (8-bit)]	# byte
051     cmpl    R9, R10
054     jne     B23  P=0.004969 C=42462.000000

05a     B9: #	out( B25 B10 ) &lt;- in( B8 )  Freq: 0.45104
05a     movl    R11, RBP	# spill
05d     addl    R11, #-3	# int
061     movl    R10, #-2147483648	# int
067     cmpl    R8, R11
06a     cmovll R11, R10	# signed, int
06e     cmpl    R11, #1
072     jle     B25  P=0.000001 C=-1.000000

078     B10: #	out( B11 ) &lt;- in( B9 )  Freq: 0.45104
078     movl    RCX, #4000	# int
07d     # TLS is in R15
07d     movl    R9, #1	# int

083     B11: #	out( B12 ) &lt;- in( B10 B17 ) Loop( B11-B17 ) Freq: 1.41445
083     movl    RDI, R11	# spill
086     subl    RDI, R9	# int
089     cmpl    RDI, RCX
08b     cmovlgt RDI, RCX	# min
08e     addl    RDI, R9	# int

091     B12: #	out( B23 B13 ) &lt;- in( B11 B16 ) Loop( B12-B16 inner main of N113 strip mined) Freq: 20.2261
091     movslq  RBX, R9	# i2l
094     movsbl  R10, [RSI + #16 + RBX]	# byte
09a     movsbl  R8, [RDX + #16 + RBX]	# byte
0a0     cmpl    R10, R8
0a3     jne,s   B23  P=0.004969 C=42462.000000

0a5     B13: #	out( B23 B14 ) &lt;- in( B12 )  Freq: 20.1256
0a5     movsbl  R10, [RDX + #17 + RBX]	# byte
0ab     movsbl  R8, [RSI + #17 + RBX]	# byte
0b1     cmpl    R8, R10
0b4     jne,s   B23  P=0.004969 C=42462.000000

0b6     B14: #	out( B23 B15 ) &lt;- in( B13 )  Freq: 20.0256
0b6     movsbl  R10, [RDX + #18 + RBX]	# byte
0bc     movsbl  R8, [RSI + #18 + RBX]	# byte
0c2     cmpl    R8, R10
0c5     jne,s   B23  P=0.004969 C=42462.000000

0c7     B15: #	out( B23 B16 ) &lt;- in( B14 )  Freq: 19.9261
0c7     movsbl  R8, [RDX + #19 + RBX]	# byte
0cd     movsbl  R10, [RSI + #19 + RBX]	# byte
0d3     cmpl    R10, R8
0d6     jne,s   B23  P=0.004969 C=42462.000000

0d8     B16: #	out( B12 B17 ) &lt;- in( B15 )  Freq: 19.8271
0d8     addl    R9, #4	# int
0dc     cmpl    R9, RDI
0df     jl,s   B12	# loop end  P=0.948787 C=42251.000000

0e1     B17: #	out( B11 B18 ) &lt;- in( B16 )  Freq: 1.01541
0e1     movq    R10, [R15 + #296 (32-bit)]	# ptr
0e8     testl   rax, [R10]	# Safepoint: poll for GC        # java.lang.StringLatin1::equals @ bci:29  L[0]=RSI L[1]=RDX L[2]=R9
        # OopMap {rdx=Oop rsi=Oop off=232/0xe8}
0eb     cmpl    R9, R11
0ee     jl,s   B11  P=0.948787 C=42251.000000

0f0     B18: #	out( B22 B19 ) &lt;- in( B25 B17 )  Freq: 0.052003
0f0     cmpl    R9, RBP
0f3     jge,s   B22  P=0.500000 C=-1.000000

0f5     B19: #	out( B20 ) &lt;- in( B18 )  Freq: 0.0260015
0f5     # castII of R9
        nop 	# 3 bytes pad for loops and calls

0f8     B20: #	out( B23 B21 ) &lt;- in( B19 B21 ) Loop( B20-B21 inner post of N210) Freq: 0.0517459
0f8     movslq  R10, R9	# i2l
0fb     movsbl  R8, [RSI + #16 + R10]	# byte
101     movsbl  R10, [RDX + #16 + R10]	# byte
107     cmpl    R8, R10
10a     jne,s   B23  P=0.004969 C=42462.000000

10c     B21: #	out( B20 B22 ) &lt;- in( B20 )  Freq: 0.0514887
10c     incl    R9	# int
10f     cmpl    R9, RBP
112     jl,s   B20	# loop end  P=0.500000 C=42251.000000

114     B22: #	out( B23 ) &lt;- in( B18 B4 B21 )  Freq: 0.0762136
114     movl    RAX, #1	# int

119     B23: #	out( N1 ) &lt;- in( B20 B14 B8 B12 B13 B15 B22 B3 )  Freq: 0.999997
119     addq    rsp, 32	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

128     ret

129     B24: #	out( N1 ) &lt;- in( B7 B6 B5 )  Freq: 1.37192e-06
129     movq    [rsp + #0], RSI	# spill
12d     movq    [rsp + #8], RDX	# spill
132     movl    RSI, #-138	# int
137     call,static  wrapper for: uncommon_trap(reason=&apos;predicate&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.StringLatin1::equals @ bci:12  L[0]=rsp + #0 L[1]=rsp + #8 L[2]=#0 STK[0]=#0 STK[1]=RBP
        # OopMap {[0]=Oop [8]=Oop off=316/0x13c}
13c     ud2	# ShouldNotReachHere

150     B25: #	out( B18 ) &lt;- in( B9 )  Freq: 4.5703e-07
150     movl    R9, #1	# int
156     jmp,s   B18

158     B26: #	out( N1 ) &lt;- in( B1 )  Freq: 1.01328e-06
158     movl    RSI, #-10	# int
        nop 	# 2 bytes pad for loops and calls
15f     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.StringLatin1::equals @ bci:1  L[0]=_ L[1]=_ L[2]=_ STK[0]=#NULL
        # OopMap {off=356/0x164}
164     ud2	# ShouldNotReachHere

178     B27: #	out( N1 ) &lt;- in( B2 )  Freq: 1.01328e-06
178     movl    RSI, #-10	# int
        nop 	# 2 bytes pad for loops and calls
17f     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.StringLatin1::equals @ bci:3  L[0]=_ L[1]=_ L[2]=_ STK[0]=_ STK[1]=#NULL
        # OopMap {off=388/0x184}
184     ud2	# ShouldNotReachHere

--------------------------------------------------------------------------------
</opto_assembly>
<writer thread='42755'/>
   1075  450       3       jdk.internal.org.objectweb.asm.ByteVector::putInt (74 bytes)
<writer thread='40963'/>
   1075  448       3       java.lang.Object::equals (11 bytes)
<writer thread='42755'/>
                              @ 18   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   callee is too large
<writer thread='40963'/>
   1077  454       3       jdk.internal.module.IllegalAccessMaps$$Lambda$28/0x000000080007bc40::accept (16 bytes)
                              @ 12   jdk.internal.module.IllegalAccessMaps::lambda$generate$0 (10 bytes)
                                @ 3   java.util.Map::putIfAbsent (23 bytes)   no static binding
<writer thread='42755'/>
   1078  455       3       jdk.internal.module.IllegalAccessMaps::lambda$generate$0 (10 bytes)
<writer thread='40963'/>
   1078  446       3       jdk.internal.org.objectweb.asm.ByteVector::putByteArray (49 bytes)
                              @ 16   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   callee is too large
                              @ 34   java.lang.System::arraycopy (0 bytes)   intrinsic
<writer thread='42755'/>
                              @ 3   java.util.Map::putIfAbsent (23 bytes)   no static binding
<writer thread='40963'/>
   1081  445       3       jdk.internal.org.objectweb.asm.Frame::execute (2305 bytes)
<writer thread='42755'/>
   1082  449       3       jdk.internal.org.objectweb.asm.MethodWriter::visitVarInsn (302 bytes)
<writer thread='24323'/>
   1082  456       3       java.nio.CharBuffer::arrayOffset (35 bytes)
                              @ 11  java/lang/UnsupportedOperationException::&lt;init&gt; (not loaded)   not inlineable
                              @ 26  java/nio/ReadOnlyBufferException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24579'/>
   1086  451       3       java.lang.Class::getPackageName (82 bytes)
                              @ 12   java.lang.Class::isArray (0 bytes)   native method
                              @ 19   java.lang.Class::getComponentType (14 bytes)
                                @ 1   java.lang.Class::isArray (0 bytes)   native method
                              @ 27   java.lang.Class::isPrimitive (0 bytes)   intrinsic
<writer thread='42755'/>
                              @ 61   jdk.internal.org.objectweb.asm.ByteVector::putByte (39 bytes)   callee is too large
<writer thread='24579'/>
                              @ 41   java.lang.Class::getName (18 bytes)
<writer thread='42755'/>
                              @ 82   jdk.internal.org.objectweb.asm.ByteVector::putByte (39 bytes)   callee is too large
<writer thread='40963'/>
                              @ 822   jdk.internal.org.objectweb.asm.Frame::
<writer thread='42755'/>
                              @ 87   jdk.internal.org.objectweb.asm.ByteVector::put12 (64 bytes)   callee is too large
<writer thread='40963'/>
push (109 bytes)   callee is too large
                              @ 959   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 983   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 968   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 974   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 992   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
<writer thread='42755'/>
                              @ 100   jdk.internal.org.objectweb.asm.ByteVector::put11 (52 bytes)   callee is too large
<writer thread='40963'/>
                              @ 998   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
<writer thread='24579'/>
                                @ 14   java.lang.Class::initClassName (0 bytes)   native method
                              @ 48   java.lang.String::lastIndexOf (12 bytes)
<writer thread='36611'/>

============================= C2-compiled nmethod ==============================
<opto_assembly compile_id='319'>
----------------------- MetaData before Compile_id = 319 ------------------------
{method}
 - this oop:          0x0000000122294570
 - method holder:     &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;
 - constants:         0x0000000122293ef8 constant pool [74] {0x0000000122293ef8} for &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos; cache=0x0000000122294610
 - access:            0xc1000001  public 
 - name:              &apos;next&apos;
 - signature:         &apos;()Ljava/lang/Object;&apos;
 - max stack:         4
 - max locals:        2
 - size of params:    1
 - method size:       13
 - highest level:     3
 - vtable index:      -2
 - i2i entry:         0x0000000105ef3de0
 - adapters:          AHE@0x00007f850a00f860: 0xb0000000 i2c: 0x0000000105f3bee0 c2i: 0x0000000105f3bfc3 c2iUV: 0x0000000105f3bf8a c2iNCI: 0x0000000105f3c000
 - compiled entry     0x000000010669e000
 - code size:         47
 - code start:        0x0000000122294518
 - code end (excl):   0x0000000122294547
 - method data:       0x00000001222a6010
 - checked ex length: 0
 - linenumber start:  0x0000000122294547
 - localvar length:   2
 - localvar start:    0x0000000122294554
 - compiled code: nmethod   1091  268       3       java.util.ImmutableCollections$SetN$SetNIterator::next (47 bytes)

------------------------ OptoAssembly for Compile_id = 319 -----------------------
#
#  java/lang/Object * ( java/util/ImmutableCollections$SetN$SetNIterator:NotNull:exact * )
#
#r018 rsi:rsi   : parm 0: java/util/ImmutableCollections$SetN$SetNIterator:NotNull:exact *
# -- Old rsp -- Framesize: 48 --
#r583 rsp+44: in_preserve
#r582 rsp+40: return address
#r581 rsp+36: in_preserve
#r580 rsp+32: saved fp register
#r579 rsp+28: pad2, stack alignment
#r578 rsp+24: pad2, stack alignment
#r577 rsp+20: Fixed slot 1
#r576 rsp+16: Fixed slot 0
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N167: #	out( B1 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
000     movl    rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	decode_klass_not_null rscratch1, rscratch1
	cmpq    rax, rscratch1	 # Inline cache check
	jne     SharedRuntime::_ic_miss_stub
	nop	# nops to align entry point


020     B1: #	out( B18 B2 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
020     # stack bang (248 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #32	# Create frame

02c     movl    R10, [RSI + #12 (8-bit)]	# int ! Field: java/util/ImmutableCollections$SetN$SetNIterator.remaining
030     testl   R10, R10
033     jle     B18  P=0.000000 C=11697.000000

039     B2: #	out( B19 B3 ) &lt;- in( B1 )  Freq: 1
039     movl    R8, [RSI + #20 (8-bit)]	# compressed ptr ! Field: java/util/ImmutableCollections$SetN$SetNIterator.this$0
03d     movl    R11, [R12 + R8 &lt;&lt; 3 + #16] (compressed oop addressing)	# compressed ptr ! Field: java/util/ImmutableCollections$SetN.elements (constant)
042     NullCheck R8

042     B3: #	out( B20 B4 ) &lt;- in( B2 )  Freq: 0.999999
042     movl    R9, [R12 + R11 &lt;&lt; 3 + #12] (compressed oop addressing)	# range
047     NullCheck R11

047     B4: #	out( B14 B5 ) &lt;- in( B3 )  Freq: 0.999997
047     movl    R8, [RSI + #16 (8-bit)]	# int ! Field: java/util/ImmutableCollections$SetN$SetNIterator.idx
04b     incl    R8	# int
04e     cmpl    R8, R9
051     jge,s   B14  P=0.015584 C=22973.000000

053     B5: #	out( B16 B6 ) &lt;- in( B4 B14 )  Freq: 0.999997
053     movl    [RSI + #16 (8-bit)], R8	# int ! Field: java/util/ImmutableCollections$SetN$SetNIterator.idx
057     cmpl    R8, R9	# unsigned
05a     jnb,us  B16  P=0.000001 C=-1.000000

05c     B6: #	out( B12 B7 ) &lt;- in( B5 )  Freq: 0.999996
05c     decode_heap_oop_not_null RCX,R11
060     movl    RBX, [RCX + #16 + R8 &lt;&lt; #2]	# compressed ptr
065     testl   RBX, RBX	# compressed ptr
067     jne,s   B12  P=0.509673 C=22950.000000

069     B7: #	out( B8 ) &lt;- in( B6 )  Freq: 0.490325
069     # TLS is in R15

069     B8: #	out( B15 B9 ) &lt;- in( B7 B10 ) Loop( B8-B10 inner ) Freq: 0.962037
069     movq    R8, [R15 + #296 (32-bit)]	# ptr
070     testl   rax, [R8]	# Safepoint: poll for GC        # java.util.ImmutableCollections$SetN$SetNIterator::next @ bci:24  L[0]=RSI L[1]=_
        # OopMap {r11=NarrowOop rcx=Oop rsi=Oop off=112/0x70}
073     movl    RBP, [RSI + #16 (8-bit)]	# int ! Field: java/util/ImmutableCollections$SetN$SetNIterator.idx
076     incl    RBP	# int
078     cmpl    RBP, R9
07b     jge,s   B15  P=0.015584 C=22973.000000

07d     B9: #	out( B17 B10 ) &lt;- in( B8 B15 )  Freq: 0.962037
07d     movl    [RSI + #16 (8-bit)], RBP	# int ! Field: java/util/ImmutableCollections$SetN$SetNIterator.idx
080     cmpl    RBP, R9	# unsigned
083     jnb,us  B17  P=0.000001 C=-1.000000

085     B10: #	out( B8 B11 ) &lt;- in( B9 )  Freq: 0.962036
085     movl    R8, [RCX + #16 + RBP &lt;&lt; #2]	# compressed ptr
08a     testl   R8, R8	# compressed ptr
08d     je,s   B8  P=0.490327 C=11253.000000

08f     B11: #	out( B13 ) &lt;- in( B10 )  Freq: 0.490324
08f     decode_heap_oop_not_null RAX,R8
093     jmp,s   B13

095     B12: #	out( B13 ) &lt;- in( B6 )  Freq: 0.509671
095     decode_heap_oop_not_null RAX,RBX

099     B13: #	out( N167 ) &lt;- in( B11 B12 )  Freq: 0.999996
099     decl    R10	# int
09c     movl    [RSI + #12 (8-bit)], R10	# int ! Field: java/util/ImmutableCollections$SetN$SetNIterator.remaining
0a0     addq    rsp, 32	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

0af     ret

0b0     B14: #	out( B5 ) &lt;- in( B4 )  Freq: 0.0155835
0b0     xorl    R8, R8	# int
0b3     jmp,s   B5

0b5     B15: #	out( B9 ) &lt;- in( B8 )  Freq: 0.0149919
0b5     xorl    RBP, RBP	# int
0b7     jmp,s   B9

0b9     B16: #	out( N167 ) &lt;- in( B5 )  Freq: 1.01328e-06
0b9     movq    RBP, RSI	# spill
0bc     movl    [rsp + #0], R11	# spill
0c0     movl    [rsp + #4], R8	# spill
0c5     movl    RSI, #-28	# int
        nop 	# 1 bytes pad for loops and calls
0cb     call,static  wrapper for: uncommon_trap(reason=&apos;range_check&apos; action=&apos;make_not_entrant&apos; debug_id=&apos;0&apos;)
        # java.util.ImmutableCollections$SetN$SetNIterator::next @ bci:18  L[0]=RBP L[1]=_ STK[0]=rsp + #0 STK[1]=rsp + #4
        # OopMap {rbp=Oop [0]=NarrowOop off=208/0xd0}
0d0     ud2	# ShouldNotReachHere

0e4     B17: #	out( N167 ) &lt;- in( B9 )  Freq: 9.74812e-07
0e4     movq    [rsp + #0], RSI	# spill
0e8     movl    [rsp + #8], R11	# spill
0ed     movl    RSI, #-28	# int
        nop 	# 1 bytes pad for loops and calls
0f3     call,static  wrapper for: uncommon_trap(reason=&apos;range_check&apos; action=&apos;make_not_entrant&apos; debug_id=&apos;0&apos;)
        # java.util.ImmutableCollections$SetN$SetNIterator::next @ bci:18  L[0]=rsp + #0 L[1]=_ STK[0]=rsp + #8 STK[1]=RBP
        # OopMap {[0]=Oop [8]=NarrowOop off=248/0xf8}
0f8     ud2	# ShouldNotReachHere

10c     B18: #	out( N167 ) &lt;- in( B1 )  Freq: 5e-07
10c     movq    RBP, RSI	# spill
10f     movl    [rsp + #0], R10	# spill
113     movl    RSI, #-187	# int
        nop 	# 3 bytes pad for loops and calls
11b     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.util.ImmutableCollections$SetN$SetNIterator::next @ bci:4  L[0]=RBP L[1]=_ STK[0]=rsp + #0
        # OopMap {rbp=Oop off=288/0x120}
120     ud2	# ShouldNotReachHere

134     B19: #	out( N167 ) &lt;- in( B2 )  Freq: 1.01328e-06
134     movl    RSI, #-10	# int
        nop 	# 2 bytes pad for loops and calls
13b     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.util.ImmutableCollections$SetN$SetNIterator::next @ bci:11  L[0]=_ L[1]=_ STK[0]=#NULL
        # OopMap {off=320/0x140}
140     ud2	# ShouldNotReachHere

154     B20: #	out( N167 ) &lt;- in( B3 )  Freq: 1.01328e-06
154     movl    RSI, #-10	# int
        nop 	# 2 bytes pad for loops and calls
15b     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.util.ImmutableCollections$SetN$SetNIterator::nextIndex @ bci:22  L[0]=_ L[1]=_ STK[0]=_ STK[1]=#NULL
        # java.util.ImmutableCollections$SetN$SetNIterator::next @ bci:15  L[0]=_ L[1]=_ STK[0]=_
        # OopMap {off=352/0x160}
160     ud2	# ShouldNotReachHere

--------------------------------------------------------------------------------
</opto_assembly>
<writer thread='42755'/>
                              @ 179   jdk.internal.org.objectweb.asm.MethodWriter::endCurrentBasicBlockWithNoSuccessor (94 bytes)   callee is too large
<writer thread='24579'/>
        
<writer thread='40963'/>
                              @ 1011   jdk.internal.org.objectweb.asm.SymbolTable::addType (81 bytes)   callee is too large
<writer thread='24579'/>
                        @ 3   java.lang.String::length (11 bytes)
                                  @ 6   java.lang.String::coder (15 bytes)
<writer thread='40963'/>
                              @ 1015   jdk.internal.org.objectweb.asm.Frame::
<writer thread='42755'/>
                              @ 138   jdk.internal.org.objectweb.asm.Frame::execute (2305 bytes)   callee is too large
<writer thread='40963'/>
push (109 bytes)   callee is too large
                              @ 1028   jdk.internal.org.objectweb.asm.SymbolTable::addType (81 bytes)   callee is too large
                          
<writer thread='24579'/>
                                @ 8   java.lang.String::lastIndexOf (29 bytes)
<writer thread='40963'/>
    @ 1032   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
<writer thread='24579'/>
                                  @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='40963'/>
                              @ 1062   jdk.internal.org.objectweb.asm.SymbolTable::addType (81 bytes)   callee is too large
                              @ 1066   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1045   jdk.internal.org.objectweb.asm.SymbolTable::addType (81 bytes)   callee is too large
                              @ 1049   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
<writer thread='42755'/>
             
<writer thread='40963'/>
                              @ 1079   jdk.internal.org.objectweb.asm.Frame::push (63 bytes)   callee is too large
<writer thread='24579'/>
                                  @ 13   java.lang.StringLatin1::lastIndexOf (40 bytes)   callee is too large
<writer thread='40963'/>
                              @ 1089  java/lang/AssertionError::&lt;init&gt; (not loaded)   not inlineable
                              @ 831   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
<writer thread='24579'/>
                                  @ 25   java.lang.StringUTF16::lastIndexOf (47 bytes)   callee is too large
<writer thread='40963'/>
                              @ 840   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 846   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
<writer thread='42755'/>
                 @ 295   jdk.internal.org.objectweb.asm.Label::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='40963'/>
                              @ 855  
<writer thread='24579'/>
                              @ 63   java.lang.String::substring (58 bytes)   callee is too large
<writer thread='40963'/>
 jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
<writer thread='24579'/>
                              @ 66   java.lang.String::intern (0 bytes)   native method
<writer thread='40963'/>
                              @ 864   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 870   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1096   jdk.internal.org.objectweb.asm.Frame::getLocal (46 bytes)   callee is too large
                              @ 1099   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1147   jdk.internal.org.objectweb.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1151   jdk.internal.org.objectweb.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1174   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1269   jdk.internal.org.objectweb.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1273   jdk.internal.org.objectweb.asm.Frame::pop (42 bytes)   callee is too large
<writer thread='24323'/>
   1099  457       3       java.lang.invoke.MemberName::getReferenceKind (12 bytes)
   1100  458       1       java.lang.Class::getModule (5 bytes)
<writer thread='9219'/>
   1100  459     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLL)V (native)   (static)
<writer thread='40963'/>
                              @ 1282   jdk.internal.org.objectweb.asm.Frame::setLocal (65 bytes)   callee is too large
                              @ 1291   jdk.internal.org.objectweb.asm.Frame::setLocal (65 bytes)   callee is too large
                              @ 1302   jdk.internal.org.objectweb.asm.Frame::getLocal (46 bytes)   callee is too large
<writer thread='42755'/>
                              @ 298   jdk.internal.org.objectweb.asm.MethodWriter::visitLabel (328 bytes)   callee is too large
<writer thread='40963'/>
                              @ 1362   jdk.internal.org.objectweb.asm.Frame::setLocal (65 bytes)   callee is too large
                              @ 1327   jdk.internal.org.objectweb.asm.Frame::setLocal (65 bytes)   callee is too large
                              @ 1181   jdk.internal.org.objectweb.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1190   jdk.internal.org.objectweb.asm.Frame::setLocal (65 bytes)   callee is too large
                              @ 1201   jdk.internal.org.objectweb.asm.Frame::getLocal (46 bytes)   callee is too large
                              @ 1261   jdk.internal.org.objectweb.asm.Frame::setLocal (65 bytes)   callee is too large
                              @ 1226   jdk.internal.org.objectweb.asm.Frame::setLocal (65 bytes)   callee is too large
<writer thread='37635'/>
   1102   94       3       java.lang.StringLatin1::equals (36 bytes)   made not entrant
   1102  428       4       java.util.HashMap$HashIterator::nextNode (100 bytes)
<writer thread='40963'/>
                              @ 1378   jdk.internal.org.objectweb.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1370   jdk.internal.org.objectweb.asm.Frame::pop (44 bytes)   callee is too large
<writer thread='9219'/>
   1104  460     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLL)L (native)   
<writer thread='40963'/>
                              @ 1401   jdk.internal.org.objectweb.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1409   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1415   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1422   jdk.internal.org.objectweb.asm.Frame::pop (42 bytes)   callee is too large
<writer thread='9219'/>
   1105  461     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLL)L (native)   (static)
<writer thread='40963'/>
                              @ 1428   jdk.internal.org.objectweb.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1436   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1442   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1448   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1455   jdk.internal.org.objectweb.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1461   jdk.internal.org.objectweb.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1467   jdk.internal.org.objectweb.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1475   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1481   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1487   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1493   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1500   jdk.internal.org.objectweb.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1506   jdk.internal.org.objectweb.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1514   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1520   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1526   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1532   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1539   jdk.internal.org.objectweb.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1545   jdk.internal.org.objectweb.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1551   jdk.internal.org.objectweb.asm.Frame::
<writer thread='37635'/>
<writer thread='40963'/>
pop (42 bytes)   callee is too large
                   
<writer thread='24323'/>
   1108  462       3       java.nio.ByteBuffer::arrayOffset (35 bytes)
                              @ 11  java/lang/UnsupportedOperationException::&lt;init&gt; (not loaded)   not inlineable
                              @ 26  java/nio/ReadOnlyBufferException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='40963'/>
           @ 1559   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1565   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1571   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1577   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1583   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1590   jdk.internal.org.objectweb.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1596   jdk.internal.org.objectweb.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1602   jdk.internal.org.objectweb.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1608   jdk.internal.org.objectweb.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1616   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1622   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1628   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1634   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1640   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1646   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1653   jdk.internal.org.objectweb.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1659   jdk.internal.org.objectweb.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1667   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1673   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1729   jdk.internal.org.objectweb.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1735   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1741   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1749   jdk.internal.org.objectweb.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1755   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1761   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1695   jdk.internal.org.objectweb.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1701   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1707   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1771   jdk.internal.org.objectweb.asm.Frame::setLocal (65 bytes)   callee is too large
                              @ 1799   jdk.internal.org.objectweb.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1805   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1127   jdk.internal.org.objectweb.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1133   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1139  
<writer thread='25603'/>

============================= C2-compiled nmethod ==============================
<opto_assembly compile_id='181'>
----------------------- MetaData before Compile_id = 181 ------------------------
{method}
 - this oop:          0x00000001220aa9e8
 - method holder:     &apos;java/lang/StringUTF16&apos;
 - constants:         0x00000001220a83d0 constant pool [581] {0x00000001220a83d0} for &apos;java/lang/StringUTF16&apos; cache=0x00000001220b06f8
 - access:            0xc1000009  public static 
 - name:              &apos;compress&apos;
 - signature:         &apos;([CI[BII)I&apos;
 - max stack:         4
 - max locals:        7
 - size of params:    5
 - method size:       13
 - intrinsic id:      85 _compressStringC
 - highest level:     3
 - vtable index:      -2
 - i2i entry:         0x0000000105ef3de0
 - adapters:          AHE@0x00007f850a00fb80: 0xbabaa000 i2c: 0x0000000105f39be0 c2i: 0x0000000105f39cd2 c2iUV: 0x0000000105f39c99 c2iNCI: 0x0000000105f39d0f
 - compiled entry     0x0000000106654ca0
 - code size:         50
 - code start:        0x00000001220aa940
 - code end (excl):   0x00000001220aa972
 - method data:       0x000000012226e940
 - checked ex length: 0
 - linenumber start:  0x00000001220aa972
 - localvar length:   7
 - localvar start:    0x00000001220aa98a
 - compiled code: nmethod   1114  121       3       java.lang.StringUTF16::compress (50 bytes)

------------------------ OptoAssembly for Compile_id = 181 -----------------------
#
#  int ( char[int:&gt;=0]:exact *, int, byte[int:&gt;=0]:exact *, int, int )
#
#r018 rsi:rsi   : parm 0: char[int:&gt;=0]:exact *
#r016 rdx   : parm 1: int
#r010 rcx:rcx   : parm 2: byte[int:&gt;=0]:exact *
#r004 r8   : parm 3: int
#r006 r9   : parm 4: int
# -- Old rsp -- Framesize: 80 --
#r583 rsp+76: in_preserve
#r582 rsp+72: return address
#r581 rsp+68: in_preserve
#r580 rsp+64: saved fp register
#r579 rsp+60: pad2, stack alignment
#r578 rsp+56: pad2, stack alignment
#r577 rsp+52: Fixed slot 1
#r576 rsp+48: Fixed slot 0
#r595 rsp+44: spill
#r594 rsp+40: spill
#r593 rsp+36: spill
#r592 rsp+32: spill
#r591 rsp+28: spill
#r590 rsp+24: spill
#r589 rsp+20: spill
#r588 rsp+16: spill
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N1: #	out( B1 ) &lt;- in( B39 B33 B38 B30 )  Freq: 1

000     B1: #	out( B30 B2 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
000     # stack bang (176 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #64	# Create frame

00c     movl    RDI, R9	# spill
00f     testl   R9, R9
012     jle     B30  P=0.027714 C=28542.000000

018     B2: #	out( B39 B3 ) &lt;- in( B1 )  Freq: 0.972286
018     movl    R14, [RSI + #12 (8-bit)]	# range
01c     NullCheck RSI

01c     B3: #	out( B39 B4 ) &lt;- in( B2 )  Freq: 0.972285
01c     movl    R10, [RCX + #12 (8-bit)]	# range
020     NullCheck RCX

020     B4: #	out( B39 B5 ) &lt;- in( B3 )  Freq: 0.972284
020     cmpl    R8, R10	# unsigned
023     jnb,u   B39  P=0.000001 C=-1.000000

029     B5: #	out( B39 B6 ) &lt;- in( B4 )  Freq: 0.972284
029     movslq  R10, R10	# i2l
02c     movslq  R11, R9	# i2l
02f     movslq  RAX, R8	# i2l
032     addq    R11, RAX	# long
035     decq    R11	# long
038     cmpq    R11, R10	# unsigned
03b     jnb,u   B39  P=0.000001 C=-1.000000

041     B6: #	out( B7 ) &lt;- in( B5 )  Freq: 0.972283
041     xorl    R10, R10	# int
044     movl    R9, #-2	# int
04a     subl    R9, RDX	# int
04d     movl    RBX, #-1	# int
052     subl    RBX, RDX	# int
054     movl    R11, #1	# int
05a     cmpl    RBX, R11
05d     cmovllt RBX, R11	# max
061     cmpl    RBX, RDI
063     cmovlgt RBX, RDI	# min
066     cmpl    RBX, R9
069     cmovllt RBX, R9	# max
06d     cmpl    RBX, RDI
06f     cmovlgt RBX, RDI	# min
072     xorl    R9, R9	# int

075     B7: #	out( B31 B8 ) &lt;- in( B6 B10 ) Loop( B7-B10 inner pre of N218) Freq: 1.94456
075     movl    R11, R9	# spill
078     addl    R11, R8	# int
07b     addl    R10, RDX	# int
07e     cmpl    R10, R14	# unsigned
081     jnb,u   B31  P=0.000001 C=-1.000000

087     B8: #	out( B41 B9 ) &lt;- in( B7 )  Freq: 1.94456
087     movzwl  R13, [RSI + #16 + R10 &lt;&lt; #1]	# ushort/char
08d     cmpl    R13, #255
094     jg     B41  P=0.000000 C=27751.000000

09a     B9: #	out( B11 B10 ) &lt;- in( B8 )  Freq: 1.94456
09a     movslq  R10, R9	# i2l
09d     addq    R10, RAX	# long
0a0     movb    [RCX + #16 + R10], R13	# byte
0a5     incl    R9	# int
0a8     cmpl    R9, RBX
0ab     jge,s   B11	# loop end  P=0.500000 C=27751.000000

0ad     B10: #	out( B7 ) &lt;- in( B9 )  Freq: 0.97228
0ad     movl    R10, R9	# spill
0b0     jmp,s   B7

0b2     B11: #	out( B40 B12 ) &lt;- in( B9 )  Freq: 0.97228
0b2     movl    R11, R14	# spill
0b5     subl    R11, RDX	# int
0b8     movl    R10, RDI	# spill
0bb     decl    R10	# int
0be     movl    RBX, R11	# spill
0c1     decl    RBX	# int
0c3     addl    R11, #-2	# int
0c7     movl    RAX, #-2147483648	# int
0cc     cmpl    RDI, R10
0cf     cmovll R10, RAX	# signed, int
0d3     cmpl    R10, RBX
0d6     cmovlgt R10, RBX	# min
0da     movl    RBP, R10	# spill
0dd     addl    RBP, #-2	# int
0e0     cmpl    R10, RBP
0e3     cmovll RBP, RAX	# signed, int
0e6     cmpl    RBP, R11
0e9     cmovlgt RBP, R11	# min
0ed     cmpl    R9, RBP
0f0     jge     B40  P=0.000001 C=-1.000000

0f6     B12: #	out( B22 ) &lt;- in( B11 )  Freq: 0.972279
0f6     movl    RBX, R9	# spill
0f9     # castII of RBX
0f9     # TLS is in R15
0f9     jmp     B22
        nop 	# 2 bytes pad for loops and calls

100     B13: #	out( B14 ) &lt;- in( B19 ) top-of-loop Freq: 1226.18
100     movl    R9, RBX	# spill
103     movdl   RDI, XMM1	# spill
107     movdl   R8, XMM0	# spill

10c     B14: #	out( B32 B15 ) &lt;- in( B22 B13 ) Loop( B14-B13 inner main of N157 strip mined) Freq: 1261.13
10c     movl    R11, RBX	# spill
10f     addl    R11, R8	# int
112     addl    R9, RDX	# int
115     cmpl    R9, R14	# unsigned
118     jnb,u   B32  P=0.000001 C=-1.000000

11e     B15: #	out( B35 B16 ) &lt;- in( B14 )  Freq: 1261.13
11e     movzwl  RAX, [RSI + #16 + R9 &lt;&lt; #1]	# ushort/char
124     cmpl    RAX, #255
12a     jg     B35  P=0.000000 C=27751.000000

130     B16: #	out( B36 B17 ) &lt;- in( B15 )  Freq: 1261.13
130     movdl   XMM0, R8	# spill
135     movb    [RCX + #16 + R11], RAX	# byte
13a     movl    R9, RBX	# spill
13d     addl    R9, RDX	# int
140     movslq  R8, R9	# i2l
143     movzwl  R13, [RSI + #18 + R8 &lt;&lt; #1]	# ushort/char
149     cmpl    R13, #255
150     jg     B36  P=0.000000 C=27751.000000

156     B17: #	out( B34 B18 ) &lt;- in( B16 )  Freq: 1261.13
156     movdl   XMM1, RDI	# spill
15a     movzwl  RAX, [RSI + #20 + R8 &lt;&lt; #1]	# ushort/char
160     movslq  RDI, R11	# i2l
163     movb    [RCX + #17 + RDI], R13	# byte
168     cmpl    RAX, #255
16e     jg     B34  P=0.000000 C=27751.000000

174     B18: #	out( B37 B19 ) &lt;- in( B17 )  Freq: 1261.13
174     movb    [RCX + #18 + RDI], RAX	# byte
178     movzwl  R13, [RSI + #22 + R8 &lt;&lt; #1]	# ushort/char
17e     cmpl    R13, #255
185     jg     B37  P=0.000000 C=27751.000000

18b     B19: #	out( B13 B20 ) &lt;- in( B18 )  Freq: 1261.13
18b     movb    [RCX + #19 + RDI], R13	# byte
190     addl    RBX, #4	# int
193     cmpl    RBX, R10
196     jl     B13	# loop end  P=0.972286 C=27751.000000

19c     B20: #	out( B23 B21 ) &lt;- in( B19 )  Freq: 34.9503
19c     movq    R10, [R15 + #296 (32-bit)]	# ptr
1a3     addl    R9, #4	# int
1a7     addl    R11, #4	# int
1ab     testl   rax, [R10]	# Safepoint: poll for GC        # java.lang.StringUTF16::compress @ bci:44  L[0]=RSI L[1]=R9 L[2]=RCX L[3]=R11 L[4]=XMM1 L[5]=RBX L[6]=_
        # OopMap {rcx=Oop rsi=Oop off=427/0x1ab}
1ae     cmpl    RBX, RBP
1b0     jge,s   B23  P=0.027714 C=27751.000000

1b2     B21: #	out( B22 ) &lt;- in( B20 )  Freq: 33.9817
1b2     movl    R9, RBX	# spill
1b5     movdl   RDI, XMM1	# spill
1b9     movdl   R8, XMM0	# spill

1be     B22: #	out( B14 ) &lt;- in( B12 B21 ) Loop( B22-B21 ) Freq: 34.9539
1be     movl    R10, RBP	# spill
1c1     subl    R10, RBX	# int
1c4     movl    RAX, #4000	# int
1c9     cmpl    R10, RAX
1cc     movl    R11, #4000	# int
1d2     cmovlgt R10, R11	# min
1d6     addl    R10, RBX	# int
1d9     jmp     B14

1de     B23: #	out( B24 ) &lt;- in( B20 )  Freq: 0.968595
1de     movdl   RDI, XMM1	# spill
1e2     movdl   R8, XMM0	# spill

1e7     B24: #	out( B30 B25 ) &lt;- in( B40 B23 )  Freq: 0.968596
1e7     cmpl    RBX, RDI
1e9     jge,s   B30  P=0.500000 C=-1.000000

1eb     B25: #	out( B26 ) &lt;- in( B24 )  Freq: 0.484298
1eb     movl    RBP, RBX	# spill
1ed     # castII of RBP
        nop 	# 3 bytes pad for loops and calls

1f0     B26: #	out( B33 B27 ) &lt;- in( B25 B29 ) Loop( B26-B29 inner post of N218) Freq: 0.968595
1f0     movl    R11, RBP	# spill
1f3     addl    R11, R8	# int
1f6     addl    RBX, RDX	# int
1f8     cmpl    RBX, R14	# unsigned
1fb     jnb,us  B33  P=0.000001 C=-1.000000

1fd     B27: #	out( B42 B28 ) &lt;- in( B26 )  Freq: 0.968594
1fd     movzwl  R13, [RSI + #16 + RBX &lt;&lt; #1]	# ushort/char
203     cmpl    R13, #255
20a     jg     B42  P=0.000000 C=27751.000000

210     B28: #	out( B30 B29 ) &lt;- in( B27 )  Freq: 0.968593
210     movb    [RCX + #16 + R11], R13	# byte
215     incl    RBP	# int
217     cmpl    RBP, RDI
219     jge,s   B30	# loop end  P=0.500000 C=27751.000000

21b     B29: #	out( B26 ) &lt;- in( B28 )  Freq: 0.484297
21b     movl    RBX, RBP	# spill
21d     jmp,s   B26

21f     B30: #	out( N1 ) &lt;- in( B1 B28 B24 )  Freq: 0.996308
21f     movl    RAX, RDI	# spill
221     addq    rsp, 64	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

230     ret

231     B31: #	out( B32 ) &lt;- in( B7 )  Freq: 1.97038e-06
231     movl    RBX, R9	# spill
234     movl    R9, R10	# spill

237     B32: #	out( B33 ) &lt;- in( B31 B14 )  Freq: 0.00127985
237     movl    RBP, RBX	# spill
239     movl    RBX, R9	# spill

23c     B33: #	out( N1 ) &lt;- in( B26 B32 )  Freq: 0.00128083
23c     movq    [rsp + #16], RCX	# spill
241     movl    [rsp + #12], R11	# spill
246     movl    [rsp + #24], RDI	# spill
24a     movq    [rsp + #32], RSI	# spill
24f     movl    [rsp + #28], RBX	# spill
253     movl    RSI, #-28	# int
        nop 	# 3 bytes pad for loops and calls
25b     call,static  wrapper for: uncommon_trap(reason=&apos;range_check&apos; action=&apos;make_not_entrant&apos; debug_id=&apos;0&apos;)
        # java.lang.StringUTF16::compress @ bci:12  L[0]=rsp + #32 L[1]=rsp + #28 L[2]=rsp + #16 L[3]=rsp + #12 L[4]=rsp + #24 L[5]=RBP L[6]=_ STK[0]=rsp + #32 STK[1]=rsp + #28
        # OopMap {[16]=Oop [32]=Oop off=608/0x260}
260     ud2	# ShouldNotReachHere

274     B34: #	out( B35 ) &lt;- in( B17 )  Freq: 0.000601352
274     addl    R9, #2	# int
278     addl    R11, #2	# int
27c     addl    RBX, #2	# int
27f     movdl   RDI, XMM1	# spill

283     B35: #	out( B38 ) &lt;- in( B15 B34 )  Freq: 0.00120271
283     movl    R13, RAX	# spill
286     jmp,s   B38

288     B36: #	out( B38 ) &lt;- in( B16 )  Freq: 0.000601353
288     incl    R9	# int
28b     incl    R11	# int
28e     incl    RBX	# int
290     jmp,s   B38

292     B37: #	out( B38 ) &lt;- in( B18 )  Freq: 0.000601352
292     addl    R9, #3	# int
296     addl    R11, #3	# int
29a     addl    RBX, #3	# int
29d     movdl   RDI, XMM1	# spill

2a1     B38: #	out( N1 ) &lt;- in( B42 B41 B35 B36 B37 )  Freq: 0.0024068
2a1     movq    RBP, RSI	# spill
2a4     movl    [rsp + #0], R9	# spill
2a8     movq    [rsp + #8], RCX	# spill
2ad     movl    [rsp + #4], R11	# spill
2b2     movl    [rsp + #16], RDI	# spill
2b6     movl    [rsp + #20], RBX	# spill
2ba     movl    [rsp + #28], R13	# spill
2bf     movl    RSI, #-187	# int
        nop 	# 3 bytes pad for loops and calls
2c7     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.lang.StringUTF16::compress @ bci:20  L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=rsp + #4 L[4]=rsp + #16 L[5]=rsp + #20 L[6]=rsp + #28 STK[0]=rsp + #28 STK[1]=#255
        # OopMap {rbp=Oop [8]=Oop off=716/0x2cc}
2cc     ud2	# ShouldNotReachHere

2e0     B39: #	out( N1 ) &lt;- in( B5 B2 B3 B4 )  Freq: 3.94078e-06
2e0     movq    RBP, RSI	# spill
2e3     movl    [rsp + #0], RDX	# spill
2e6     movq    [rsp + #8], RCX	# spill
2eb     movl    [rsp + #4], R8	# spill
2f0     movl    [rsp + #20], R9	# spill
2f5     movl    RSI, #-138	# int
        nop 	# 1 bytes pad for loops and calls
2fb     call,static  wrapper for: uncommon_trap(reason=&apos;predicate&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.StringUTF16::compress @ bci:7  L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=rsp + #4 L[4]=rsp + #20 L[5]=#0 L[6]=_ STK[0]=#0 STK[1]=rsp + #20
        # OopMap {rbp=Oop [8]=Oop off=768/0x300}
300     ud2	# ShouldNotReachHere

314     B40: #	out( B24 ) &lt;- in( B11 )  Freq: 9.8519e-07
314     movl    RBX, R9	# spill
317     jmp     B24

31c     B41: #	out( B38 ) &lt;- in( B8 )  Freq: 9.27239e-07
31c     movl    RBX, R9	# spill
31f     movl    R9, R10	# spill
322     jmp     B38

327     B42: #	out( B38 ) &lt;- in( B27 )  Freq: 4.61862e-07
327     movl    R9, RBX	# spill
32a     movl    RBX, RBP	# spill
32c     jmp     B38

--------------------------------------------------------------------------------
</opto_assembly>
<writer thread='40963'/>
 jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
<writer thread='36611'/>
   1121  268       3       java.util.ImmutableCollections$SetN$SetNIterator::next (47 bytes)   made not entrant
                              @ 15   java.util.ImmutableCollections$SetN$SetNIterator::nextIndex (56 bytes)   inline (hot)
                              @ 15   java.util.ImmutableCollections$SetN$SetNIterator::nextIndex (56 bytes)   inline (hot)
<writer thread='40963'/>
                              @ 1779   jdk.internal.org.objectweb.asm.Frame::pop (44 bytes)   callee is too large
<writer thread='36611'/>
   1121  452       4       java.util.ImmutableCollections$SetN$SetNIterator::nextIndex (56 bytes)
<writer thread='40963'/>
                              @ 1785   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
<writer thread='24579'/>
   1121  463       3       java.lang.String::startsWith (7 bytes)
<writer thread='40963'/>
                              @ 1791   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1813   jdk.internal.org.objectweb.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1819   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
<writer thread='24579'/>
                              @ 3   java.lang.String::startsWith (138 bytes)   callee is too large
<writer thread='24323'/>
   1121  464       1       java.lang.invoke.MethodTypeForm::erasedType (5 bytes)
<writer thread='40963'/>
                              @ 1825   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1107   jdk.internal.org.objectweb.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1113   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1119   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1715   jdk.internal.org.objectweb.asm.Frame::pop (44 bytes)   callee is too large
<writer thread='36611'/>
<writer thread='40963'/>
                              @ 1721   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1681   jdk.internal.org.objectweb.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1687   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 1847   jdk.internal.org.objectweb.asm.Frame::pop (44 bytes)   callee is too large
<writer thread='24323'/>
   1122  465       3       jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8Reference (101 bytes)
<writer thread='40963'/>
                              @ 1853   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
<writer thread='24323'/>
                              @ 2   jdk.internal.org.objectweb.asm.SymbolTable::hash (10 bytes)
<writer thread='40963'/>
                              @ 1865   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
<writer thread='24323'/>
                                @ 4   java.lang.String::hashCode (60 bytes)   callee is too large
<writer thread='40963'/>
                              @ 1394   jdk.internal.org.objectweb.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1876   jdk.internal.org.objectweb.asm.Frame::push (63 bytes)   callee is too large
<writer thread='24323'/>
                              @ 8   jdk.internal.org.objectweb.asm.SymbolTable::get (13 bytes)
<writer thread='40963'/>
                              @ 1887   jdk.internal.org.objectweb.asm.Frame::pop (53 bytes)   callee is too large
                              @ 1895   jdk.internal.org.objectweb.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1905   jdk.internal.org.objectweb.asm.Frame::push (63 bytes)   callee is too large
                              @ 1916   jdk.internal.org.objectweb.asm.Frame::pop (53 bytes)   callee is too large
<writer thread='24323'/>
                              @ 42   java.lang.String::equals (50 bytes)   callee is too large
<writer thread='40963'/>
                              @ 1920   jdk.internal.org.objectweb.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1932   jdk.internal.org.objectweb.asm.Frame::pop (53 bytes)   callee is too large
<writer thread='24323'/>
                              @ 68   jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8 (98 bytes)   callee is too large
<writer thread='40963'/>
                              @ 1943   jdk.internal.org.objectweb.asm.Frame::pop (42 bytes)   callee is too large
<writer thread='24323'/>
                              @ 71   jdk.internal.org.objectweb.asm.ByteVector::put12 (64 bytes)   callee is too large
<writer thread='40963'/>
                              @ 1960   java.lang.String::charAt (25 bytes)
<writer thread='24323'/>
                              @ 94   jdk.internal.org.objectweb.asm.SymbolTable$Entry::&lt;init&gt; (17 bytes)
<writer thread='40963'/>
                                @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='24323'/>
                                @ 7   jdk.internal.org.objectweb.asm.Symbol::&lt;init&gt; (38 bytes)   callee is too large
                              @ 97   jdk.internal.org.objectweb.asm.SymbolTable::put (150 bytes)   callee is too large
<writer thread='40963'/>
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)
                                  @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                                @ 21   java.lang.StringUTF16::charAt (11 bytes)
                                  @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
                                    @ 2   java.lang.StringUTF16::length (5 bytes)
                                    @ 5   java.lang.String::checkIndex (48 bytes)   callee is too large
                                  @ 7   java.lang.StringUTF16::getChar (60 bytes)   intrinsic
                              @ 1971   jdk.internal.org.objectweb.asm.Frame::addInitializedType (77 bytes)   callee is too large
                              @ 1981   jdk.internal.org.objectweb.asm.Frame::push (63 bytes)   callee is too large
                              @ 1992   jdk.internal.org.objectweb.asm.Frame::pop (53 bytes)   callee is too large
                              @ 2002   jdk.internal.org.objectweb.asm.Frame::push (63 bytes)   callee is too large
                              @ 2018   jdk.internal.org.objectweb.asm.SymbolTable::addUninitializedType (103 bytes)   callee is too large
                              @ 2022   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 2029   jdk.internal.org.objectweb.asm.Frame::pop (42 bytes)   callee is too large
                              @ 2083   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 2092   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 2128   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 2137   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 2101   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 2110   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 2119   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 2146   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 2156   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 2167   jdk.internal.org.objectweb.asm.Frame::pop (42 bytes)   callee is too large
                              @ 2174   java.lang.String::charAt (25 bytes)
                                @ 1   java.lang.String::isLatin1 (19 bytes)
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)
                                  @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                                @ 21   java.lang.StringUTF16::charAt (11 bytes)
                                  @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
<writer thread='9219'/>
   1133  466     n 0       java.lang.Class::isAssignableFrom (native)   
<writer thread='40963'/>
                                    @ 2   java.lang.StringUTF16::length (5 bytes)
                                    @ 5   java.lang.String::checkIndex (48 bytes)   callee is too large
                                  @ 7   java.lang.StringUTF16::getChar (60 bytes)   intrinsic
                              @ 2189   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
                              @ 2194   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (77 bytes)   callee is too large
                              @ 2199   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 2202   java.lang.StringBuilder::toString (35 bytes)
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
<writer thread='24579'/>
   1135  467       3       sun.invoke.util.VerifyAccess::isTypeVisible (118 bytes)
<writer thread='40963'/>
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
<writer thread='24579'/>
                              @ 8   java.lang.Class::isArray (0 bytes)   native method
<writer thread='24323'/>
   1135  468       3       jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes (132 bytes)
<writer thread='40963'/>
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
                              @ 2205   jdk.internal.org.objectweb.asm.Frame::push (63 bytes)   callee is too large
                              @ 2218   jdk.internal.org.objectweb.asm.SymbolTable::addType (81 bytes)   callee is too large
                              @ 2222   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
                              @ 2235   jdk.internal.org.objectweb.asm.Frame::pop (42 bytes)   callee is too large
             
<writer thread='24579'/>
                              @ 15   java.lang.Class::getComponentType (14 bytes)
<writer thread='42755'/>
   1137  469       3       java.util.Spliterators$IteratorSpliterator::tryAdvance (77 bytes)
<writer thread='24579'/>
                                @ 1   java.lang.Class::isArray (0 bytes)   native method
<writer thread='24323'/>
                              @ 6   java.lang.String::charAt (25 bytes)
<writer thread='40963'/>
                 
<writer thread='42755'/>
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='24579'/>
             
<writer thread='24323'/>
                                @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='40963'/>
@ 2242   java.lang.String::charAt (25 bytes)
<writer thread='42755'/>
                              @ 24   java.util.Collection::iterator (0 bytes)   no static binding
<writer thread='24579'/>
                 @ 23   java.lang.Class::isPrimitive (0 bytes)   intrinsic
<writer thread='42755'/>
                              @ 37   java.util.Collection::size (0 bytes)   no static binding
<writer thread='40963'/>
                                @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='24323'/>
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)
<writer thread='24579'/>
        
<writer thread='42755'/>
                              @ 50   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 63   java.util.Iterator::next (0 bytes)   no static binding
<writer thread='24323'/>
                                  @ 15  java/lang/StringIndexOutOfBoundsException::
<writer thread='40963'/>
        
<writer thread='42755'/>
        
<writer thread='24579'/>
     
<writer thread='24323'/>
&lt;init&gt;
<writer thread='42755'/>
     
<writer thread='24579'/>
                 @ 38   java.lang.Class::getClassLoader (28 bytes)   force inline by annotation
<writer thread='40963'/>
                        @ 12   java.lang.StringLatin1::charAt (28 bytes)
<writer thread='24323'/>
 (not loaded)   not inlineable
<writer thread='24579'/>
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
<writer thread='40963'/>
                                  @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24323'/>
                                @ 21   java.lang.StringUTF16::charAt (11 bytes)
<writer thread='24579'/>
                                @ 11   java.lang.System::getSecurityManager (12 bytes)
<writer thread='42755'/>
                 @ 68   java.util.function.Consumer::accept (0 bytes)   no static binding
<writer thread='24579'/>
                                  @ 0   java.lang.System::allowSecurityManager (13 bytes)
<writer thread='40963'/>
                                @ 21   java.lang.StringUTF16::charAt (11 bytes)
                                  @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
                                    @ 2   java.lang.StringUTF16::length (5 bytes)
<writer thread='24323'/>
                                  @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
<writer thread='40963'/>
                                    @ 5   java.lang.String::checkIndex (48 bytes)   callee is too large
<writer thread='24323'/>
                                    @ 2   java.lang.StringUTF16::length (5 bytes)
<writer thread='24579'/>
             
<writer thread='40963'/>
                                  @ 7   java.lang.StringUTF16::getChar (60 bytes)   intrinsic
        
<writer thread='24323'/>
                                    @ 5   java.lang.String::checkIndex (48 bytes)   callee is too large
<writer thread='40963'/>
                      @ 2255   jdk.internal.org.objectweb.asm.Frame::push (63 bytes)   callee is too large
                              @ 2268   jdk.internal.org.objectweb.asm.SymbolTable::
<writer thread='24323'/>
                                  @ 7  
<writer thread='24579'/>
                   @ 20  
<writer thread='40963'/>
addType (81 bytes)   callee is too large
<writer thread='24579'/>
 jdk.internal.reflect.Reflection::getCallerClass (0 bytes)   native method
<writer thread='40963'/>
                              @ 2272   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
<writer thread='24579'/>
                                @ 23  
<writer thread='40963'/>
        
<writer thread='24323'/>
 java.lang.StringUTF16::
<writer thread='24579'/>
 java.lang.ClassLoader::
<writer thread='40963'/>
                      @ 1833   jdk.internal.org.objectweb.asm.Frame::pop (44 bytes)   callee is too large
<writer thread='24323'/>
getChar (60 bytes)   intrinsic
<writer thread='24579'/>
checkClassLoaderPermission (29 bytes)
<writer thread='40963'/>
                              @ 1839   jdk.internal.org.objectweb.asm.Frame::push (109 bytes)   callee is too large
<writer thread='24579'/>
                                  @ 0   java.lang.System::
<writer thread='24323'/>
                              @ 39  
<writer thread='24579'/>
getSecurityManager
<writer thread='40963'/>
        
<writer thread='24323'/>
 java.lang.String::
<writer thread='24579'/>
 (12 bytes)
<writer thread='40963'/>
     
<writer thread='24323'/>
charAt
<writer thread='24579'/>

<writer thread='24323'/>
 (25 bytes)
<writer thread='40963'/>
                 @ 2280   jdk.internal.org.objectweb.asm.Frame::pop (44 bytes)
<writer thread='24579'/>
                                    @ 0  
<writer thread='40963'/>
   callee is too large
<writer thread='24323'/>
                                @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='24579'/>
 java.lang.System::allowSecurityManager (13 bytes)
<writer thread='40963'/>
                              @ 2290   jdk.internal.org.objectweb.asm.Frame::push (63 bytes)   callee is too large
<writer thread='24323'/>
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)
<writer thread='40963'/>
                              @ 1386   jdk.internal.org.objectweb.asm.Frame::pop (44 bytes)   callee is too large
                              @ 2300   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='24579'/>
                                  @ 9   java.lang.ClassLoader::
<writer thread='24323'/>
                                  
<writer thread='24579'/>
getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
<writer thread='24323'/>
@ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='42755'/>
   1143  477   !   3       java.io.BufferedReader::readLine (327 bytes)
<writer thread='24579'/>
                                  @ 15   java.lang.ClassLoader::
<writer thread='24323'/>
                                @ 21   java.lang.StringUTF16::charAt (11 bytes)
<writer thread='24579'/>
needsClassLoaderPermissionCheck (27 bytes)
<writer thread='24323'/>
                                  @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
                                    @ 2   java.lang.StringUTF16::length (5 bytes)
                                    @ 5   java.lang.String::checkIndex (48 bytes)   callee is too large
<writer thread='24579'/>
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
<writer thread='24323'/>
                                  @ 7   java.lang.StringUTF16::getChar (60 bytes)   intrinsic
                              @ 58   java.lang.String::charAt (25 bytes)
                                @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='42755'/>
                              @ 11   java.io.BufferedReader::ensureOpen (18 bytes)
                                @ 13  java/io/IOException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24323'/>
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)
<writer thread='24579'/>
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
<writer thread='24323'/>
                                  @ 15  
<writer thread='24579'/>
                              @ 43   java.lang.Class::getClassLoader (28 bytes)   force inline by annotation
<writer thread='24323'/>
java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24579'/>
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
<writer thread='42755'/>
                              @ 52   java.io.BufferedReader::fill (170 bytes)   callee is too large
<writer thread='24323'/>
                                @ 21   java.lang.StringUTF16::charAt (11 bytes)
                                  @ 2   java.lang.StringUTF16::checkIndex
<writer thread='24579'/>
                                @ 11   java.lang.System::getSecurityManager (12 bytes)
<writer thread='42755'/>
                              @ 71   java.lang.StringBuilder::length (5 bytes)
<writer thread='24323'/>
 (9 bytes)
<writer thread='24579'/>
                                  @ 0   java.lang.System::allowSecurityManager (13 bytes)
<writer thread='42755'/>
                                @ 1   java.lang.AbstractStringBuilder::length (5 bytes)
<writer thread='24323'/>
                                    @ 2   java.lang.StringUTF16::length (5 bytes)
                                    @ 5   java.lang.String::
<writer thread='42755'/>
                              @ 78   java.lang.StringBuilder::toString (35 bytes)
<writer thread='24323'/>
checkIndex (48 bytes)   callee is too large
<writer thread='42755'/>
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
<writer thread='24323'/>
                                  @ 7   java.lang.StringUTF16::
<writer thread='24579'/>
                                @ 20   jdk.internal.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
<writer thread='24323'/>
getChar (60 bytes)   intrinsic
<writer thread='24579'/>
                                  @ 0   java.lang.System::getSecurityManager (12 bytes)
                                    @ 0   java.lang.System::
<writer thread='24323'/>
                              @ 70   java.lang.String::indexOf (29 bytes)
<writer thread='24579'/>
allowSecurityManager (13 bytes)
<writer thread='24323'/>
                                @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='42755'/>
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
<writer thread='24323'/>
                                @ 13   java.lang.StringLatin1::indexOf (61 bytes)   callee is too large
<writer thread='42755'/>
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24579'/>
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
<writer thread='42755'/>
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
<writer thread='24579'/>
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
<writer thread='24323'/>
                                @ 25   java.lang.StringUTF16::indexOf (43 bytes)   callee is too large
                              @ 81   java.lang.String::charAt (25 bytes)
<writer thread='24579'/>
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
<writer thread='24323'/>
                                @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='24579'/>
                              @ 69   java.lang.Class::getName (18 bytes)
                                @ 14   java.lang.Class::initClassName (0 bytes)   native method
<writer thread='24323'/>
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)
<writer thread='24579'/>
                              @ 74   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (138 bytes)   callee is too large
                              @ 83   java.lang.Class::getName (18 bytes)
<writer thread='24323'/>
                                  @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24579'/>
                                @ 14   java.lang.Class::initClassName (0 bytes)   native method
                              @ 95  sun/invoke/util/VerifyAccess$1::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24323'/>
                                @ 21   java.lang.StringUTF16::charAt (11 bytes)
<writer thread='24579'/>
                              @ 98   java.security.AccessController::doPrivileged (9 bytes)
<writer thread='24323'/>
                                  @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
<writer thread='24579'/>
                                @ 2   jdk.internal.reflect.Reflection::getCallerClass (0 bytes)   native method
<writer thread='24323'/>
                                    @ 2   java.lang.StringUTF16::length (5 bytes)
<writer thread='24579'/>
                                @ 5   java.security.AccessController::executePrivileged (65 bytes)   force inline by annotation
<writer thread='42755'/>
                              @ 227   java.lang.String::&lt;init&gt; (14 bytes)
<writer thread='24323'/>
                                    @ 5   java.lang.String::checkIndex
<writer thread='24579'/>
                                  @ 29   java.security.PrivilegedAction::run (0 bytes)   not inlineable
<writer thread='24323'/>
 (48 bytes)   callee is too large
<writer thread='42755'/>
                                @ 7   java.lang.String::rangeCheck (9 bytes)
<writer thread='24579'/>
                                  @ 56   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
<writer thread='24323'/>
                                  @ 7   java.lang.StringUTF16::getChar (60 bytes)   intrinsic
<writer thread='42755'/>
                                  @ 4   java.lang.String::checkBoundsOffCount (64 bytes)   callee is too large
<writer thread='24579'/>
                                  @ 60   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
<writer thread='24323'/>
                              @ 92   java.lang.String::charAt (25 bytes)
                                @ 1  
<writer thread='42755'/>
                                @ 10   java.lang.String::&lt;init&gt; (74 bytes)   callee is too large
                              @ 247   java.lang.StringBuilder::append (10 bytes)
<writer thread='24323'/>
 java.lang.String::isLatin1 (19 bytes)
<writer thread='42755'/>
                                @ 4   java.lang.AbstractStringBuilder::append (33 bytes)   callee is too large
                              @ 252   java.lang.StringBuilder::toString (35 bytes)
<writer thread='24323'/>
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)
<writer thread='42755'/>
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
<writer thread='24323'/>
                                  @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                                @ 21   java.lang.StringUTF16::charAt (11 bytes)
<writer thread='42755'/>
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
<writer thread='24323'/>
                                  @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
                                    @ 2   java.lang.StringUTF16::length (5 bytes)
<writer thread='42755'/>
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
<writer thread='24323'/>
                                    @ 5   java.lang.String::checkIndex (48 bytes)   callee is too large
<writer thread='42755'/>
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
                                  @ 7   java.lang.StringUTF16::getChar (60 bytes)   intrinsic
<writer thread='42755'/>
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
                              @ 296   java.lang.StringBuilder::&lt;init&gt; (6 bytes)
                                @ 2   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
                              @ 312   java.lang.StringBuilder::append (10 bytes)
                                @ 4   java.lang.AbstractStringBuilder::append (33 bytes)   callee is too large
<writer thread='39683'/>

============================= C2-compiled nmethod ==============================
<opto_assembly compile_id='353'>
----------------------- MetaData before Compile_id = 353 ------------------------
{method}
 - this oop:          0x0000000121f1f0c8
 - method holder:     &apos;java/io/BufferedInputStream&apos;
 - constants:         0x0000000121f1e478 constant pool [155] {0x0000000121f1e478} for &apos;java/io/BufferedInputStream&apos; cache=0x0000000121f20728
 - access:            0x81000021  public synchronized 
 - name:              &apos;read&apos;
 - signature:         &apos;()I&apos;
 - max stack:         6
 - max locals:        1
 - size of params:    1
 - method size:       13
 - highest level:     3
 - vtable index:      7
 - i2i entry:         0x0000000105ef45e0
 - adapters:          AHE@0x00007f850a00f860: 0xb0000000 i2c: 0x0000000105f3bee0 c2i: 0x0000000105f3bfc3 c2iUV: 0x0000000105f3bf8a c2iNCI: 0x0000000105f3c000
 - compiled entry     0x0000000106634a60
 - code size:         49
 - code start:        0x0000000121f1f078
 - code end (excl):   0x0000000121f1f0a9
 - method data:       0x00000001221af4d0
 - checked ex length: 1
 - checked ex start:  0x0000000121f1f0c4
 - linenumber start:  0x0000000121f1f0a9
 - localvar length:   1
 - localvar start:    0x0000000121f1f0b6
 - compiled code: nmethod   1166   55  s    3       java.io.BufferedInputStream::read (49 bytes)

------------------------ OptoAssembly for Compile_id = 353 -----------------------
#
#  int ( java/io/BufferedInputStream:NotNull * )
#
#r018 rsi:rsi   : parm 0: java/io/BufferedInputStream:NotNull *
# -- Old rsp -- Framesize: 64 --
#r583 rsp+60: in_preserve
#r582 rsp+56: return address
#r581 rsp+52: in_preserve
#r580 rsp+48: saved fp register
#r579 rsp+44: Fixed slot 3
#r578 rsp+40: Fixed slot 2
#r577 rsp+36: Fixed slot 1
#r576 rsp+32: Fixed slot 0
#r591 rsp+28: spill
#r590 rsp+24: spill
#r589 rsp+20: spill
#r588 rsp+16: spill
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N307: #	out( B1 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
000     movl    rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	decode_klass_not_null rscratch1, rscratch1
	cmpq    rax, rscratch1	 # Inline cache check
	jne     SharedRuntime::_ic_miss_stub
	nop	# nops to align entry point


020     B1: #	out( B13 B2 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
020     # stack bang (248 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #48	# Create frame

02c     movq    [rsp + #0], RSI	# spill
030     movq    RAX, [RSI]	# long
033     movq    R10, RAX	# spill
036     andq    R10, #7	# long
03a     cmpq    R10, #5
03e     jne     B13  P=0.000001 C=-1.000000

044     B2: #	out( B15 B3 ) &lt;- in( B1 )  Freq: 0.999999
044     movl    R11, narrowklass: precise klass java/io/BufferedInputStream: 0x0000000122bd2b60:Constant:exact *	# compressed klass ptr
04a     decode_klass_not_null R10,R11
057     movq    R10, [R10 + #184 (32-bit)]	# long
05e     movq    R11, R10	# spill
061     # TLS is in R15
061     orq     R11, R15	# long
064     movq    R8, R11	# spill
067     xorq    R8, RAX	# long
06a     testq   R8, #-121	# long
071     jne     B15  P=0.000001 C=-1.000000

077     B3: #	out( B8 B4 ) &lt;- in( B14 B13 B2 B19 )  Freq: 1
077     MEMBAR-acquire (prior CMPXCHG in FastLock so empty encoding)
077     movq    R10, [rsp + #0]	# spill
07b     movl    R10, [R10 + #20 (8-bit)]	# int ! Field: java/io/BufferedInputStream.pos
07f     movq    R11, [rsp + #0]	# spill
083     movl    R8, [R11 + #16 (8-bit)]	# int ! Field: java/io/BufferedInputStream.count
087     cmpl    R10, R8
08a     jge,s   B8  P=0.002880 C=38190.000000

08c     B4: #	out( B22 B5 ) &lt;- in( B9 B3 )  Freq: 1
08c     movq    R10, [rsp + #0]	# spill
090     movl    R11, [R10 + #32 (8-bit)]	# compressed ptr ! Field: volatile java/io/BufferedInputStream.buf
094     MEMBAR-acquire ! (empty encoding)
094     movl    R10, [R12 + R11 &lt;&lt; 3 + #12] (compressed oop addressing)	# range
099     NullCheck R11

099     B5: #	out( B11 B6 ) &lt;- in( B4 )  Freq: 0.999999
099     movq    R8, [rsp + #0]	# spill
09d     movl    RBP, [R8 + #20 (8-bit)]	# int ! Field: java/io/BufferedInputStream.pos
0a1     movl    R8, RBP	# spill
0a4     incl    R8	# int
0a7     movq    R9, [rsp + #0]	# spill
0ab     movl    [R9 + #20 (8-bit)], R8	# int ! Field: java/io/BufferedInputStream.pos
0af     cmpl    RBP, R10	# unsigned
0b2     jnb,us  B11  P=0.000001 C=-1.000000

0b4     B6: #	out( B20 B7 ) &lt;- in( B5 )  Freq: 0.999998
0b4     decode_heap_oop_not_null R10,R11
0b8     movzbl  RBX, [R10 + #16 + RBP]	# ubyte
0be     MEMBAR-release (a FastUnlock follows so empty encoding)
0be     movl    R10, #7	# long (unsigned 32-bit)
0c4     andq    R10, [R9]	# long
0c7     cmpq    R10, #5
0cb     jne     B20  P=0.000001 C=-1.000000

0d1     B7: #	out( N307 ) &lt;- in( B21 B20 B6 )  Freq: 0.999998
0d1     movl    RAX, RBX	# spill
0d3     addq    rsp, 48	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

0e2     ret

0e3     B8: #	out( B23 B9 ) &lt;- in( B3 )  Freq: 0.00288033
0e3     movq    RSI, R11	# spill
0e6     movq    RBP, RSI	# spill
        nop 	# 2 bytes pad for loops and calls
0eb     call,static  java.io.BufferedInputStream::fill
        # java.io.BufferedInputStream::read @ bci:12  L[0]=RBP MON-BOX0=rsp+32 MON-OBJ[0]=RBP
        # OopMap {rbp=Oop [0]=Oop off=240/0xf0}

0f0     B9: #	out( B4 B10 ) &lt;- in( B8 )  Freq: 0.00288028
        # Block is sole successor of call
0f0     movl    R11, [RBP + #20 (8-bit)]	# int ! Field: java/io/BufferedInputStream.pos
0f4     movl    RBP, [RBP + #16 (8-bit)]	# int ! Field: java/io/BufferedInputStream.count
0f7     cmpl    R11, RBP
0fa     jl,s   B4  P=1.000000 C=110.000000

0fc     B10: #	out( N307 ) &lt;- in( B9 )  Freq: 1.37342e-09
0fc     movl    RSI, #-187	# int
101     movl    [rsp + #16], R11	# spill
        nop 	# 1 bytes pad for loops and calls
107     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.io.BufferedInputStream::read @ bci:23  L[0]=rsp + #0 STK[0]=rsp + #16 STK[1]=RBP MON-BOX0=rsp+32 MON-OBJ[0]=rsp + #0
        # OopMap {[0]=Oop off=268/0x10c}
10c     ud2	# ShouldNotReachHere

120     B11: #	out( N307 ) &lt;- in( B5 )  Freq: 1.01328e-06
120     movl    RSI, #-28	# int
125     movl    [rsp + #8], R11	# spill
        nop 	# 1 bytes pad for loops and calls
12b     call,static  wrapper for: uncommon_trap(reason=&apos;range_check&apos; action=&apos;make_not_entrant&apos; debug_id=&apos;0&apos;)
        # java.io.BufferedInputStream::read @ bci:43  L[0]=_ STK[0]=rsp + #8 STK[1]=RBP MON-BOX0=rsp+32 MON-OBJ[0]=rsp + #0
        # OopMap {[0]=Oop [8]=NarrowOop off=304/0x130}
130     ud2	# ShouldNotReachHere

144     B12: #	out( B13 ) &lt;- in( B15 )  Freq: 9.99999e-13
144     cmpxchgq [RSI], R10	# If rax == [RSI] then store R10 into [RSI]

149     B13: #	out( B3 B14 ) &lt;- in( B1 B12 )  Freq: 1e-06
149     leaq    RBX, [rsp + #32]	# box lock
14e     fastlock RSI,RBX	! kills RBX,RAX,R10
190     je     B3  P=0.999999 C=-1.000000

196     B14: #	out( B3 ) &lt;- in( B18 B13 )  Freq: 2e-12
196     leaq    RDX, [rsp + #32]	# box lock
19b     movq    RBP, RSI	# spill
        nop 	# 1 bytes pad for loops and calls
19f     call,static  wrapper for: _complete_monitor_locking_Java
        # java.io.BufferedInputStream::read @ bci:-1  L[0]=RBP MON-BOX0=rsp+32 MON-OBJ[0]=RBP
        # OopMap {rbp=Oop [0]=Oop off=420/0x1a4}
1a4     jmp     B3

1a9     B15: #	out( B12 B16 ) &lt;- in( B2 )  Freq: 9.99999e-07
1a9     testq   R8, #7	# long
1b0     jne,s   B12  P=0.000001 C=-1.000000

1b2     B16: #	out( B18 B17 ) &lt;- in( B15 )  Freq: 9.99998e-07
1b2     testq   R8, #768	# long
1b9     jne,s   B18  P=0.000001 C=-1.000000

1bb     B17: #	out( B18 ) &lt;- in( B16 )  Freq: 9.99997e-07
1bb     andq    RAX, #895	# long
1c2     movq    R11, RAX	# spill
1c5     # TLS is in R15
1c5     orq     R11, R15	# long

1c8     B18: #	out( B14 B19 ) &lt;- in( B17 B16 )  Freq: 9.99998e-07
1c8     cmpxchgq [RSI], R11	# If rax == [RSI] then store R11 into [RSI]
1cd     jne,us  B14  P=0.000001 C=-1.000000

1cf     B19: #	out( B3 ) &lt;- in( B18 )  Freq: 9.99997e-07
1cf     jmp     B3

1d4     B20: #	out( B7 B21 ) &lt;- in( B6 )  Freq: 9.99998e-07
1d4     leaq    RAX, [rsp + #32]	# box lock
1d9     fastunlock R9,RAX	! kills RAX,R10
25e     je     B7  P=0.999999 C=-1.000000

264     B21: #	out( B7 ) &lt;- in( B20 )  Freq: 9.99998e-13
264     movq    RDI, R9	# spill
267     leaq    RSI, [rsp + #32]	# box lock
26c     # TLS is in R15
26c     movq    RDX, R15	# spill
26f     call_leaf,runtime  complete_monitor_unlocking_C
        No JVM State Info
        # 
27c     jmp     B7

281     B22: #	out( N307 ) &lt;- in( B4 )  Freq: 4.76837e-07
281     movl    RSI, #-187	# int
286     movq    RBP, [rsp + #0]	# spill
28a     movl    [rsp + #12], R11	# spill
28f     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.io.BufferedInputStream::getBufIfOpen @ bci:6  L[0]=_ L[1]=rsp + #12 STK[0]=rsp + #12
        # java.io.BufferedInputStream::read @ bci:29  L[0]=RBP MON-BOX0=rsp+32 MON-OBJ[0]=RBP
        # OopMap {rbp=Oop [12]=NarrowOop off=660/0x294}
294     ud2	# ShouldNotReachHere

2a8     B23: #	out( B25 B24 ) &lt;- in( B8 )  Freq: 2.88033e-08
2a8     # exception oop is in rax; no code emitted
2a8     movq    RBX, RAX	# spill
2ab     MEMBAR-release (a FastUnlock follows so empty encoding)
2ab     movl    R10, #7	# long (unsigned 32-bit)
2b1     andq    R10, [RBP]	# long
2b5     cmpq    R10, #5
2b9     jne,s   B25  P=0.000001 C=-1.000000

2bb     B24: #	out( N307 ) &lt;- in( B26 B25 B23 )  Freq: 2.88033e-08
2bb     movq    RSI, RBX	# spill
2be     addq    rsp, 48	# Destroy frame
	popq    rbp

2c3     jmp     rethrow_stub

2c8     B25: #	out( B24 B26 ) &lt;- in( B23 )  Freq: 2.88033e-14
2c8     leaq    RAX, [rsp + #32]	# box lock
2cd     fastunlock RBP,RAX	! kills RAX,R10
354     je     B24  P=0.999999 C=-1.000000

35a     B26: #	out( B24 ) &lt;- in( B25 )  Freq: 2.88033e-20
35a     movq    RDI, RBP	# spill
35d     leaq    RSI, [rsp + #32]	# box lock
362     # TLS is in R15
362     movq    RDX, R15	# spill
365     call_leaf,runtime  complete_monitor_unlocking_C
        No JVM State Info
        # 
372     jmp     B24

--------------------------------------------------------------------------------
</opto_assembly>
<writer thread='36611'/>

============================= C2-compiled nmethod ==============================
<opto_assembly compile_id='452'>
----------------------- MetaData before Compile_id = 452 ------------------------
{method}
 - this oop:          0x0000000122294478
 - method holder:     &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;
 - constants:         0x0000000122293ef8 constant pool [74] {0x0000000122293ef8} for &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos; cache=0x0000000122294610
 - access:            0x81000002  private 
 - name:              &apos;nextIndex&apos;
 - signature:         &apos;()I&apos;
 - max stack:         4
 - max locals:        2
 - size of params:    1
 - method size:       13
 - highest level:     3
 - vtable index:      -2
 - i2i entry:         0x0000000105ef3de0
 - adapters:          AHE@0x00007f850a00f860: 0xb0000000 i2c: 0x0000000105f3bee0 c2i: 0x0000000105f3bfc3 c2iUV: 0x0000000105f3bf8a c2iNCI: 0x0000000105f3c000
 - compiled entry     0x000000010668e720
 - code size:         56
 - code start:        0x0000000122294418
 - code end (excl):   0x0000000122294450
 - method data:       0x0000000122295820
 - checked ex length: 0
 - linenumber start:  0x0000000122294450
 - localvar length:   2
 - localvar start:    0x000000012229445e
 - compiled code: nmethod   1175  244       3       java.util.ImmutableCollections$SetN$SetNIterator::nextIndex (56 bytes)

------------------------ OptoAssembly for Compile_id = 452 -----------------------
#
#  int ( java/util/ImmutableCollections$SetN$SetNIterator:NotNull:exact * )
#
#r018 rsi:rsi   : parm 0: java/util/ImmutableCollections$SetN$SetNIterator:NotNull:exact *
# -- Old rsp -- Framesize: 32 --
#r583 rsp+28: in_preserve
#r582 rsp+24: return address
#r581 rsp+20: in_preserve
#r580 rsp+16: saved fp register
#r579 rsp+12: pad2, stack alignment
#r578 rsp+ 8: pad2, stack alignment
#r577 rsp+ 4: Fixed slot 1
#r576 rsp+ 0: Fixed slot 0
#
000     N63: #	out( B1 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
000     movl    rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	decode_klass_not_null rscratch1, rscratch1
	cmpq    rax, rscratch1	 # Inline cache check
	jne     SharedRuntime::_ic_miss_stub
	nop	# nops to align entry point


020     B1: #	out( B6 B2 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
020     # stack bang (136 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #16	# Create frame

02c     movl    R11, [RSI + #20 (8-bit)]	# compressed ptr ! Field: java/util/ImmutableCollections$SetN$SetNIterator.this$0
030     movl    R10, [R12 + R11 &lt;&lt; 3 + #16] (compressed oop addressing)	# compressed ptr ! Field: java/util/ImmutableCollections$SetN.elements (constant)
035     NullCheck R11

035     B2: #	out( B7 B3 ) &lt;- in( B1 )  Freq: 0.999999
035     movl    R11, [R12 + R10 &lt;&lt; 3 + #12] (compressed oop addressing)	# range
03a     NullCheck R10

03a     B3: #	out( B5 B4 ) &lt;- in( B2 )  Freq: 0.999998
03a     movl    RAX, [RSI + #16 (8-bit)]	# int ! Field: java/util/ImmutableCollections$SetN$SetNIterator.idx
03d     incl    RAX	# int
03f     cmpl    RAX, R11
042     jge,s   B5  P=0.015857 C=24910.000000

044     B4: #	out( N63 ) &lt;- in( B3 B5 )  Freq: 0.999998
044     movl    [RSI + #16 (8-bit)], RAX	# int ! Field: java/util/ImmutableCollections$SetN$SetNIterator.idx
047     addq    rsp, 16	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

056     ret

057     B5: #	out( B4 ) &lt;- in( B3 )  Freq: 0.0158571
057     xorl    RAX, RAX	# int
059     jmp,s   B4

05b     B6: #	out( N63 ) &lt;- in( B1 )  Freq: 1.01328e-06
05b     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
063     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.util.ImmutableCollections$SetN$SetNIterator::nextIndex @ bci:19  L[0]=_ L[1]=_ STK[0]=_ STK[1]=#NULL
        # OopMap {off=104/0x68}
068     ud2	# ShouldNotReachHere

07c     B7: #	out( N63 ) &lt;- in( B2 )  Freq: 1.01328e-06
07c     movl    RSI, #-10	# int
        nop 	# 2 bytes pad for loops and calls
083     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.util.ImmutableCollections$SetN$SetNIterator::nextIndex @ bci:22  L[0]=_ L[1]=_ STK[0]=_ STK[1]=#NULL
        # OopMap {off=136/0x88}
088     ud2	# ShouldNotReachHere

--------------------------------------------------------------------------------
</opto_assembly>
<writer thread='24579'/>
   1180  484       3       java.util.stream.ReferencePipeline::forEachWithCancel (23 bytes)
                              @ 1   java.util.stream.Sink::cancellationRequested (2 bytes)   no static binding
                              @ 13   java.util.Spliterator::tryAdvance (0 bytes)   no static binding
<writer thread='36611'/>
   1183  244       3       java.util.ImmutableCollections$SetN$SetNIterator::nextIndex (56 bytes)   made not entrant
   1183  311       4       java.lang.String::equals (50 bytes)
<writer thread='24579'/>
   1183  470       1       java.util.stream.MatchOps$BooleanTerminalSink::cancellationRequested (5 bytes)
   1184  471       2       java.util.stream.MatchOps$1MatchSink::accept (44 bytes)
                              @ 12   java.util.function.Predicate::test (0 bytes)   no static binding
<writer thread='36611'/>
<writer thread='24579'/>
   1186  472       2       jdk.internal.module.IllegalAccessMaps$$Lambda$33/0x0000000800091c40::test (12 bytes)
                              @ 8   jdk.internal.module.IllegalAccessMaps::lambda$isExported$6 (24 bytes)
                                @ 1   java.lang.module.ModuleDescriptor$Exports::source (5 bytes)
                                @ 5   java.lang.String::equals (50 bytes)   callee is too large
                                @ 12   java.lang.module.ModuleDescriptor$Exports::isQualified (18 bytes)
                                  @ 4   java.util.Set::isEmpty (0 bytes)   no static binding
   1189  473       2       jdk.internal.module.IllegalAccessMaps::lambda$isExported$6 (24 bytes)
                              @ 1   java.lang.module.ModuleDescriptor$Exports::source (5 bytes)
                              @ 5   java.lang.String::equals (50 bytes)   callee is too large
                              @ 12   java.lang.module.ModuleDescriptor$Exports::isQualified (18 bytes)
                                @ 4   java.util.Set::isEmpty (0 bytes)   no static binding
<writer thread='42755'/>
   1191  505       3       java.util.stream.AbstractPipeline::wrapSink (37 bytes)
                              @ 1   java.util.Objects::requireNonNull (14 bytes)
                                @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 23   java.util.stream.AbstractPipeline::opWrapSink (0 bytes)   no static binding
<writer thread='24579'/>
   1192  515       3       java.util.stream.AbstractPipeline::copyIntoWithCancel (46 bytes)
                              @ 19   java.util.Spliterator::getExactSizeIfKnown (25 bytes)   no static binding
                              @ 24   java.util.stream.Sink::begin (1 bytes)   no static binding
                              @ 32   java.util.stream.AbstractPipeline::forEachWithCancel (0 bytes)   no static binding
                              @ 38   java.util.stream.Sink::end (1 bytes)   no static binding
<writer thread='25603'/>
   1193  121       3       java.lang.StringUTF16::compress (50 bytes)   made not entrant
   1193  531       4       java.util.HashMap::resize (356 bytes)
<writer thread='42755'/>
   1194  474       3       java.util.stream.AbstractPipeline::isParallel (8 bytes)
<writer thread='24579'/>
   1195  478       3       java.lang.invoke.LambdaForm$MH/0x0000000800063040::linkToTargetMethod (9 bytes)
                              @ 5   java.lang.invoke.MethodHandle::invokeBasic(L)L (0 bytes)   receiver not constant
<writer thread='42755'/>
   1195  479       3       java.lang.invoke.LambdaForm$DMH/0x0000000800062c40::invokeStatic (14 bytes)
                              @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
                              @ 10   java.lang.invoke.MethodHandle::linkToStatic(LL)L (0 bytes)   MemberName not constant
<writer thread='24579'/>
   1196  475       3       java.util.stream.PipelineHelper::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='42755'/>
   1198  485       3       java.util.stream.StreamOpFlag::combineOpFlags (9 bytes)
<writer thread='24579'/>
   1198  486       3       java.util.stream.StreamOpFlag::getMask (30 bytes)
<writer thread='42755'/>
                              @ 2   java.util.stream.StreamOpFlag::getMask (30 bytes)
<writer thread='24579'/>
   1199  496       3       java.util.stream.StreamSupport::stream (19 bytes)
                              @ 1   java.util.Objects::requireNonNull (14 bytes)
<writer thread='42755'/>
   1199  497       3       java.util.stream.StreamOpFlag::fromCharacteristics (37 bytes)
<writer thread='24579'/>
                                @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='42755'/>
                              @ 1   java.util.Spliterator::characteristics (0 bytes)   no static binding
<writer thread='24579'/>
                              @ 11   java.util.stream.StreamOpFlag::fromCharacteristics (37 bytes)   callee is too large
<writer thread='42755'/>
                              @ 14   java.util.Spliterator::getComparator (8 bytes)   no static binding
<writer thread='24579'/>
                              @ 15   java.util.stream.ReferencePipeline$Head::&lt;init&gt; (8 bytes)
                                @ 4   java.util.stream.ReferencePipeline::&lt;init&gt; (8 bytes)
                                  @ 4   java.util.stream.AbstractPipeline::&lt;init&gt; (55 bytes)   callee is too large
<writer thread='42755'/>
   1202  498       3       java.util.stream.ReferencePipeline$Head::&lt;init&gt; (8 bytes)
                              @ 4   java.util.stream.ReferencePipeline::&lt;init&gt; (8 bytes)
                                @ 4   java.util.stream.AbstractPipeline::&lt;init&gt; (55 bytes)   callee is too large
<writer thread='24579'/>
   1203  499       3       java.util.stream.ReferencePipeline::&lt;init&gt; (8 bytes)
                              @ 4   java.util.stream.AbstractPipeline::&lt;init&gt; (55 bytes)   callee is too large
<writer thread='42755'/>
   1203  500       3       java.util.stream.AbstractPipeline::&lt;init&gt; (55 bytes)
                              @ 1   java.util.stream.PipelineHelper::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='25603'/>
<writer thread='24579'/>
   1205  476       1       java.util.stream.AbstractPipeline::getStreamAndOpFlags (5 bytes)
<writer thread='25603'/>
<writer thread='24579'/>
   1206  509       3       java.util.stream.Sink::end (1 bytes)
   1207  501       3       java.util.stream.AbstractPipeline::evaluate (94 bytes)
<writer thread='42755'/>
   1207  502       3       java.util.stream.AbstractPipeline::sourceSpliterator (265 bytes)
<writer thread='24579'/>
                              @ 40  java/lang/IllegalStateException::&lt;init&gt; (not loaded)   not inlineable
                              @ 50   java.util.stream.AbstractPipeline::isParallel (8 bytes)
<writer thread='24323'/>
   1207  504       3       java.util.stream.AbstractPipeline::wrapAndCopyInto (18 bytes)
<writer thread='24579'/>
                              @ 60   java.util.stream.TerminalOp::getOpFlags (2 bytes)   no static binding
                              @ 65   java.util.stream.AbstractPipeline::sourceSpliterator (265 bytes)   callee is too large
<writer thread='24323'/>
                              @ 3  
<writer thread='24579'/>
        
<writer thread='42755'/>
                              @ 48  
<writer thread='24579'/>
                      @ 68  
<writer thread='24323'/>
 java.util.Objects::requireNonNull (14 bytes)
<writer thread='24579'/>
 java.util.stream.TerminalOp::evaluateParallel (24 bytes)   no static binding
<writer thread='42755'/>
 java.util.function.Supplier::
<writer thread='24579'/>
                              @ 80   java.util.stream.TerminalOp::getOpFlags (2 bytes)   no static binding
<writer thread='24323'/>
                                @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='24579'/>
                              @ 85   java.util.stream.AbstractPipeline::sourceSpliterator (265 bytes)   callee is too large
                              @ 88   java.util.stream.TerminalOp::evaluateSequential
<writer thread='42755'/>
get (0 bytes)   not inlineable
<writer thread='24579'/>
 (0 bytes)   no static binding
<writer thread='24323'/>
                              @ 9   java.util.stream.AbstractPipeline::wrapSink (37 bytes)   callee is too large
<writer thread='42755'/>
                              @ 79  
<writer thread='24323'/>
                              @ 13   java.util.stream.AbstractPipeline::copyInto (54 bytes)   callee is too large
<writer thread='42755'/>
 java.util.stream.AbstractPipeline::isParallel (8 bytes)
                              @ 131   java.util.stream.AbstractPipeline::opIsStateful (0 bytes)   no static binding
                              @ 144   java.util.stream.StreamOpFlag::isKnown (19 bytes)
                              @ 165   java.util.stream.AbstractPipeline::opEvaluateParallelLazy (17 bytes)
<writer thread='39683'/>
   1210   55  s    3       java.io.BufferedInputStream::read (49 bytes)   made not entrant
                              @ 12   java.io.BufferedInputStream::fill (203 bytes)   executed &lt; MinInliningThreshold times
                              @ 29   java.io.BufferedInputStream::getBufIfOpen (21 bytes)   inline (hot)
<writer thread='42755'/>
                                @ 3  java/lang/invoke/MethodHandle::invokeBasic (not loaded)   not inlineable
<writer thread='39683'/>
   1210  517       4       java.util.Spliterators$IteratorSpliterator::tryAdvance (77 bytes)
<writer thread='42755'/>
                                @ 8   java.util.stream.AbstractPipeline::opEvaluateParallel (11 bytes)
                                  @ 7  java/lang/UnsupportedOperationException::&lt;init&gt; (not loaded)   not inlineable
                              @ 227   java.util.stream.StreamOpFlag::combineOpFlags (9 bytes)
                                @ 2   java.util.stream.StreamOpFlag::getMask (30 bytes)
                              @ 257   java.util.stream.StreamOpFlag::combineOpFlags (9 bytes)
                                @ 2   java.util.stream.StreamOpFlag::getMask (30 bytes)
<writer thread='43011'/>

============================= C2-compiled nmethod ==============================
<opto_assembly compile_id='203'>
----------------------- MetaData before Compile_id = 203 ------------------------
{method}
 - this oop:          0x0000000122186b40
 - method holder:     &apos;jdk/internal/module/ModuleInfo$ConstantPool&apos;
 - constants:         0x0000000122185610 constant pool [271] {0x0000000122185610} for &apos;jdk/internal/module/ModuleInfo$ConstantPool&apos; cache=0x0000000122187040
 - access:            0xc1000000  
 - name:              &apos;checkUnqualifiedName&apos;
 - signature:         &apos;(Ljava/lang/String;ILjava/lang/String;)V&apos;
 - max stack:         3
 - max locals:        7
 - size of params:    4
 - method size:       13
 - highest level:     3
 - vtable index:      10
 - i2i entry:         0x0000000105ef3de0
 - adapters:          AHE@0x00007f850b0013d0: 0xbbab0000 i2c: 0x0000000105f217e0 c2i: 0x0000000105f218ce c2iUV: 0x0000000105f21895 c2iNCI: 0x0000000105f2190b
 - compiled entry     0x000000010666b320
 - code size:         131
 - code start:        0x0000000122186a50
 - code end (excl):   0x0000000122186ad3
 - method data:       0x0000000122284858
 - checked ex length: 0
 - linenumber start:  0x0000000122186ad3
 - localvar length:   7
 - localvar start:    0x0000000122186aea
 - compiled code: nmethod   1212  154       3       jdk.internal.module.ModuleInfo$ConstantPool::checkUnqualifiedName (131 bytes)

------------------------ OptoAssembly for Compile_id = 203 -----------------------
#
#  void ( jdk/internal/module/ModuleInfo$ConstantPool:NotNull *, java/lang/String:exact *, int, java/lang/String:exact * )
#
#r018 rsi:rsi   : parm 0: jdk/internal/module/ModuleInfo$ConstantPool:NotNull *
#r016 rdx:rdx   : parm 1: java/lang/String:exact *
#r010 rcx   : parm 2: int
#r004 r8:r8   : parm 3: java/lang/String:exact *
# -- Old rsp -- Framesize: 64 --
#r583 rsp+60: in_preserve
#r582 rsp+56: return address
#r581 rsp+52: in_preserve
#r580 rsp+48: saved fp register
#r579 rsp+44: pad2, stack alignment
#r578 rsp+40: pad2, stack alignment
#r577 rsp+36: Fixed slot 1
#r576 rsp+32: Fixed slot 0
#r591 rsp+28: spill
#r590 rsp+24: spill
#r589 rsp+20: spill
#r588 rsp+16: spill
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N467: #	out( B1 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
000     movl    rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	decode_klass_not_null rscratch1, rscratch1
	cmpq    rax, rscratch1	 # Inline cache check
	jne     SharedRuntime::_ic_miss_stub
	nop	# nops to align entry point


020     B1: #	out( B46 B2 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
020     # stack bang (264 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #48	# Create frame

02c     movl    RBX, RCX	# spill
02e     movq    R9, R8	# spill
031     movl    R10, [R8 + #12 (8-bit)]	# compressed ptr ! Field: java/lang/String.value (constant)
035     NullCheck R8

035     B2: #	out( B47 B3 ) &lt;- in( B1 )  Freq: 0.999999
035     movl    R8, [R12 + R10 &lt;&lt; 3 + #12] (compressed oop addressing)	# range
03a     NullCheck R10

03a     B3: #	out( B42 B4 ) &lt;- in( B2 )  Freq: 0.999998
03a     movsbl  RCX, [R9 + #20 (8-bit)]	# byte ! Field: java/lang/String.coder (constant)
03f     movl    RBP, R8	# spill
042     sarl    RBP, RCX
044     testl   RBP, RBP
046     je     B42  P=0.000000 C=1741.000000

04c     B4: #	out( B34 B5 ) &lt;- in( B3 )  Freq: 0.999997
04c     testl   RBP, RBP
04e     jle     B34  P=0.030965 C=56225.000000

054     B5: #	out( B41 B6 ) &lt;- in( B4 )  Freq: 0.969033
054     testl   RCX, RCX
056     jne     B41  P=0.000001 C=-1.000000

05c     B6: #	out( B41 B7 ) &lt;- in( B5 )  Freq: 0.969032
05c     testl   R8, R8	# unsigned
05f     jbe,u   B41  P=0.000001 C=-1.000000

065     B7: #	out( B41 B8 ) &lt;- in( B6 )  Freq: 0.969031
065     movslq  R11, R8	# i2l
068     movslq  R8, RBP	# i2l
06b     decq    R8	# long
06e     cmpq    R8, R11	# unsigned
071     jnb,u   B41  P=0.000001 C=-1.000000

077     B8: #	out( B36 B9 ) &lt;- in( B7 )  Freq: 0.96903
077     movzbl  RDI, [R12 + R10 &lt;&lt; 3 + #16] (compressed oop addressing)	# ubyte
07d     xorl    R8, R8	# int
080     cmpl    RDI, #46
083     je     B36  P=0.000000 C=54484.000000

089     B9: #	out( B38 B10 ) &lt;- in( B8 )  Freq: 0.969029
089     cmpl    RDI, #59
08c     je     B38  P=0.000000 C=54484.000000

092     B10: #	out( B40 B11 ) &lt;- in( B9 )  Freq: 0.969029
092     cmpl    RDI, #91
095     je     B40  P=0.000000 C=54484.000000

09b     B11: #	out( B28 B12 ) &lt;- in( B10 )  Freq: 0.969028
09b     movl    RAX, RBP	# spill
09d     addl    RAX, #-3	# int
0a0     decode_heap_oop_not_null RSI,R10
0a4     movl    R10, #1	# int
0aa     movl    R11, #-2147483648	# int
0b0     cmpl    RBP, RAX
0b2     cmovll RAX, R11	# signed, int
0b6     cmpl    RAX, #1
0b9     jle     B28  P=0.000001 C=-1.000000

0bf     B12: #	out( B13 ) &lt;- in( B11 )  Freq: 0.969027
0bf     movl    R11, #4000	# int
0c5     # TLS is in R15

0c5     B13: #	out( B14 ) &lt;- in( B12 B27 ) Loop( B13-B27 ) Freq: 31.1145
0c5     movl    RCX, RAX	# spill
0c7     subl    RCX, R10	# int
0ca     cmpl    RCX, R11
0cd     cmovlgt RCX, R11	# min
0d1     addl    RCX, R10	# int

0d4     B14: #	out( B35 B15 ) &lt;- in( B13 B26 ) Loop( B14-B26 inner main of N163 strip mined) Freq: 1004.65
0d4     movslq  R13, R10	# i2l
0d7     movzbl  RDI, [RSI + #16 + R13]	# ubyte
0dd     cmpl    RDI, #46
0e0     je     B35  P=0.000000 C=54484.000000

0e6     B15: #	out( B37 B16 ) &lt;- in( B14 )  Freq: 1004.65
0e6     cmpl    RDI, #59
0e9     je     B37  P=0.000000 C=54484.000000

0ef     B16: #	out( B39 B17 ) &lt;- in( B15 )  Freq: 1004.65
0ef     cmpl    RDI, #91
0f2     je     B39  P=0.000000 C=54484.000000

0f8     B17: #	out( B36 B18 ) &lt;- in( B16 )  Freq: 1004.65
0f8     movzbl  RDI, [RSI + #17 + R13]	# ubyte
0fe     movl    R8, R10	# spill
101     incl    R8	# int
104     cmpl    RDI, #46
107     je     B36  P=0.000000 C=54484.000000

10d     B18: #	out( B38 B19 ) &lt;- in( B17 )  Freq: 1004.65
10d     cmpl    RDI, #59
110     je     B38  P=0.000000 C=54484.000000

116     B19: #	out( B40 B20 ) &lt;- in( B18 )  Freq: 1004.65
116     cmpl    RDI, #91
119     je     B40  P=0.000000 C=54484.000000

11f     B20: #	out( B36 B21 ) &lt;- in( B19 )  Freq: 1004.65
11f     movzbl  RDI, [RSI + #18 + R13]	# ubyte
125     movl    R8, R10	# spill
128     addl    R8, #2	# int
12c     cmpl    RDI, #46
12f     je     B36  P=0.000000 C=54484.000000

135     B21: #	out( B38 B22 ) &lt;- in( B20 )  Freq: 1004.65
135     cmpl    RDI, #59
138     je     B38  P=0.000000 C=54484.000000

13e     B22: #	out( B40 B23 ) &lt;- in( B21 )  Freq: 1004.65
13e     cmpl    RDI, #91
141     je     B40  P=0.000000 C=54484.000000

147     B23: #	out( B36 B24 ) &lt;- in( B22 )  Freq: 1004.65
147     movzbl  RDI, [RSI + #19 + R13]	# ubyte
14d     movl    R8, R10	# spill
150     addl    R8, #3	# int
154     cmpl    RDI, #46
157     je,s   B36  P=0.000000 C=54484.000000

159     B24: #	out( B38 B25 ) &lt;- in( B23 )  Freq: 1004.65
159     cmpl    RDI, #59
15c     je     B38  P=0.000000 C=54484.000000

162     B25: #	out( B40 B26 ) &lt;- in( B24 )  Freq: 1004.65
162     cmpl    RDI, #91
165     je     B40  P=0.000000 C=54484.000000

16b     B26: #	out( B14 B27 ) &lt;- in( B25 )  Freq: 1004.65
16b     addl    R10, #4	# int
16f     cmpl    R10, RCX
172     jl     B14	# loop end  P=0.969035 C=54484.000000

178     B27: #	out( B13 B28 ) &lt;- in( B26 )  Freq: 31.1088
178     movq    R8, [R15 + #296 (32-bit)]	# ptr
17f     testl   rax, [R8]	# Safepoint: poll for GC        # jdk.internal.module.ModuleInfo$ConstantPool::checkUnqualifiedName @ bci:127  L[0]=_ L[1]=RDX L[2]=RBX L[3]=R9 L[4]=RBP L[5]=R10 L[6]=_
        # OopMap {r9=Oop rdx=Oop rsi=Oop off=383/0x17f}
182     cmpl    R10, RAX
185     jl     B13  P=0.969035 C=54484.000000

18b     B28: #	out( B34 B29 ) &lt;- in( B11 B27 )  Freq: 0.96328
18b     cmpl    R10, RBP
18e     jge,s   B34  P=0.500000 C=-1.000000

190     B29: #	out( B30 ) &lt;- in( B28 )  Freq: 0.48164
190     # castII of R10

190     B30: #	out( B43 B31 ) &lt;- in( B29 B33 ) Loop( B30-B33 inner post of N387) Freq: 0.963278
190     movzbl  RDI, [RSI + #16 + R10]	# ubyte
196     cmpl    RDI, #46
199     je     B43  P=0.000000 C=54484.000000

19f     B31: #	out( B44 B32 ) &lt;- in( B30 )  Freq: 0.963278
19f     cmpl    RDI, #59
1a2     je     B44  P=0.000000 C=54484.000000

1a8     B32: #	out( B45 B33 ) &lt;- in( B31 )  Freq: 0.963277
1a8     cmpl    RDI, #91
1ab     je     B45  P=0.000000 C=54484.000000

1b1     B33: #	out( B30 B34 ) &lt;- in( B32 )  Freq: 0.963277
1b1     incl    R10	# int
1b4     cmpl    R10, RBP
1b7     jl,s   B30	# loop end  P=0.500000 C=54484.000000

1b9     B34: #	out( N467 ) &lt;- in( B28 B4 B33 )  Freq: 0.994243
1b9     addq    rsp, 48	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

1c8     ret

1c9     B35: #	out( B36 ) &lt;- in( B14 )  Freq: 0.000479056
1c9     movl    R8, R10	# spill

1cc     B36: #	out( N467 ) &lt;- in( B43 B8 B35 B20 B17 B23 )  Freq: 0.00191714
1cc     movl    RSI, #-187	# int
1d1     movl    [rsp + #0], R8	# spill
1d5     movl    [rsp + #8], RDI	# spill
1d9     movq    [rsp + #16], RDX	# spill
1de     movl    [rsp + #12], RBX	# spill
1e2     movq    [rsp + #24], R9	# spill
1e7     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # jdk.internal.module.ModuleInfo$ConstantPool::checkUnqualifiedName @ bci:65  L[0]=_ L[1]=rsp + #16 L[2]=rsp + #12 L[3]=rsp + #24 L[4]=RBP L[5]=rsp + #0 L[6]=rsp + #8 STK[0]=rsp + #8 STK[1]=#46
        # OopMap {[16]=Oop [24]=Oop off=492/0x1ec}
1ec     ud2	# ShouldNotReachHere

200     B37: #	out( B38 ) &lt;- in( B15 )  Freq: 0.000479056
200     movl    R8, R10	# spill

203     B38: #	out( N467 ) &lt;- in( B44 B9 B37 B21 B18 B24 )  Freq: 0.00191714
203     movl    RSI, #-187	# int
208     movl    [rsp + #0], R8	# spill
20c     movl    [rsp + #8], RDI	# spill
210     movq    [rsp + #16], RDX	# spill
215     movl    [rsp + #12], RBX	# spill
219     movq    [rsp + #24], R9	# spill
        nop 	# 1 bytes pad for loops and calls
21f     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # jdk.internal.module.ModuleInfo$ConstantPool::checkUnqualifiedName @ bci:72  L[0]=_ L[1]=rsp + #16 L[2]=rsp + #12 L[3]=rsp + #24 L[4]=RBP L[5]=rsp + #0 L[6]=rsp + #8 STK[0]=rsp + #8 STK[1]=#59
        # OopMap {[16]=Oop [24]=Oop off=548/0x224}
224     ud2	# ShouldNotReachHere

238     B39: #	out( B40 ) &lt;- in( B16 )  Freq: 0.000479056
238     movl    R8, R10	# spill

23b     B40: #	out( N467 ) &lt;- in( B45 B10 B39 B22 B19 B25 )  Freq: 0.00191714
23b     movl    RSI, #-187	# int
240     movl    [rsp + #0], R8	# spill
244     movl    [rsp + #8], RDI	# spill
248     movq    [rsp + #16], RDX	# spill
24d     movl    [rsp + #12], RBX	# spill
251     movq    [rsp + #24], R9	# spill
        nop 	# 1 bytes pad for loops and calls
257     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # jdk.internal.module.ModuleInfo$ConstantPool::checkUnqualifiedName @ bci:79  L[0]=_ L[1]=rsp + #16 L[2]=rsp + #12 L[3]=rsp + #24 L[4]=RBP L[5]=rsp + #0 L[6]=rsp + #8 STK[0]=rsp + #8 STK[1]=#91
        # OopMap {[16]=Oop [24]=Oop off=604/0x25c}
25c     ud2	# ShouldNotReachHere

270     B41: #	out( N467 ) &lt;- in( B7 B5 B6 )  Freq: 2.91996e-06
270     movl    RSI, #-138	# int
275     movq    [rsp + #0], RDX	# spill
279     movl    [rsp + #8], RBX	# spill
27d     movq    [rsp + #16], R9	# spill
        nop 	# 1 bytes pad for loops and calls
283     call,static  wrapper for: uncommon_trap(reason=&apos;predicate&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # jdk.internal.module.ModuleInfo$ConstantPool::checkUnqualifiedName @ bci:50  L[0]=_ L[1]=rsp + #0 L[2]=rsp + #8 L[3]=rsp + #16 L[4]=RBP L[5]=#0 L[6]=_ STK[0]=#0 STK[1]=RBP
        # OopMap {[0]=Oop [16]=Oop off=648/0x288}
288     ud2	# ShouldNotReachHere

29c     B42: #	out( N467 ) &lt;- in( B3 )  Freq: 4.76836e-07
29c     movl    RSI, #-187	# int
2a1     movq    [rsp + #0], RDX	# spill
2a5     movl    [rsp + #8], RBX	# spill
2a9     movq    [rsp + #16], R9	# spill
        nop 	# 1 bytes pad for loops and calls
2af     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # jdk.internal.module.ModuleInfo$ConstantPool::checkUnqualifiedName @ bci:8  L[0]=_ L[1]=rsp + #0 L[2]=rsp + #8 L[3]=rsp + #16 L[4]=RBP L[5]=_ L[6]=_ STK[0]=RBP
        # OopMap {[0]=Oop [16]=Oop off=692/0x2b4}
2b4     ud2	# ShouldNotReachHere

2c8     B43: #	out( B36 ) &lt;- in( B30 )  Freq: 4.59327e-07
2c8     movl    R8, R10	# spill
2cb     jmp     B36

2d0     B44: #	out( B38 ) &lt;- in( B31 )  Freq: 4.59327e-07
2d0     movl    R8, R10	# spill
2d3     jmp     B38

2d8     B45: #	out( B40 ) &lt;- in( B32 )  Freq: 4.59326e-07
2d8     movl    R8, R10	# spill
2db     jmp     B40

2e0     B46: #	out( N467 ) &lt;- in( B1 )  Freq: 1.01328e-06
2e0     movl    RSI, #-10	# int
        nop 	# 2 bytes pad for loops and calls
2e7     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # jdk.internal.module.ModuleInfo$ConstantPool::checkUnqualifiedName @ bci:1  L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ STK[0]=#NULL
        # OopMap {off=748/0x2ec}
2ec     ud2	# ShouldNotReachHere

300     B47: #	out( N467 ) &lt;- in( B2 )  Freq: 1.01328e-06
300     movl    RSI, #-10	# int
        nop 	# 2 bytes pad for loops and calls
307     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.String::length @ bci:4  L[0]=_ STK[0]=#NULL
        # jdk.internal.module.ModuleInfo$ConstantPool::checkUnqualifiedName @ bci:1  L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_
        # OopMap {off=780/0x30c}
30c     ud2	# ShouldNotReachHere

--------------------------------------------------------------------------------
</opto_assembly>
<writer thread='42755'/>
                              @ 74  java/lang/IllegalStateException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24579'/>
   1219  512       3       java.util.Set::spliterator (6 bytes)
<writer thread='24323'/>
   1219  511       3       java.util.stream.Sink::begin (1 bytes)
<writer thread='24579'/>
                              @ 2   java.util.Spliterators::spliterator (16 bytes)
                                @ 5   java.util.Objects::requireNonNull (14 bytes)
                                @ 12   java.util.Spliterators$IteratorSpliterator::&lt;init&gt; (39 bytes)   callee is too large
<writer thread='24323'/>
   1220  513       3       java.util.Spliterators::spliterator (16 bytes)
                              @ 5   java.util.Objects::requireNonNull (14 bytes)
                                @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 12   java.util.Spliterators$IteratorSpliterator::&lt;init&gt; (39 bytes)   callee is too large
<writer thread='24579'/>
   1221  483       3       java.util.stream.ForEachOps$ForEachOp$OfRef::accept (11 bytes)
                              @ 5   java.util.function.Consumer::accept (0 bytes)   no static binding
   1222  487   !   3       java.io.BufferedReader$1::hasNext (43 bytes)
<writer thread='39683'/>
<writer thread='24323'/>
   1224  488       3       java.io.BufferedReader::readLine (7 bytes)
<writer thread='24579'/>
                              @ 14   java.io.BufferedReader::readLine (7 bytes)
<writer thread='39683'/>
<writer thread='24323'/>
               !m             @ 3   java.io.BufferedReader::readLine (327 bytes)   callee is too large
<writer thread='24579'/>
               !m               @ 3   java.io.BufferedReader::readLine (327 bytes)   callee is too large
                              @ 39  java/io/UncheckedIOException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='39683'/>
<writer thread='24323'/>
   1225  490       3       java.io.BufferedReader::ensureOpen (18 bytes)
<writer thread='39683'/>
<writer thread='24323'/>
                              @ 13  java/io/IOException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='39683'/>
<writer thread='24579'/>
   1227  489       3       java.io.BufferedReader$1::next (5 bytes)
                              @ 1   java.io.BufferedReader$1::next (34 bytes)
<writer thread='24323'/>
   1228  491       3       java.io.BufferedReader$1::next (34 bytes)
<writer thread='24579'/>
               !                @ 8   java.io.BufferedReader$1::hasNext (43 bytes)   callee is too large
<writer thread='24323'/>
               !              @ 8   java.io.BufferedReader$1::hasNext (43 bytes)   callee is too large
<writer thread='24579'/>
                                @ 30  java/util/NoSuchElementException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24323'/>
                              @ 30  java/util/NoSuchElementException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='42755'/>
   1231  492       3       jdk.internal.module.IllegalAccessMaps$$Lambda$29/0x0000000800090040::test (8 bytes)
<writer thread='24323'/>
   1231  493       3       jdk.internal.module.IllegalAccessMaps::lambda$generate$2 (22 bytes)
                              @ 1   java.lang.String::isEmpty (14 bytes)
<writer thread='24579'/>
   1231  506       3       java.util.stream.AbstractPipeline::copyInto (54 bytes)
                              @ 1   java.util.Objects::requireNonNull (14 bytes)
<writer thread='24323'/>
                              @ 10   java.lang.String::startsWith (7 bytes)
<writer thread='24579'/>
                                @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='24323'/>
                                @ 3   java.lang.String::startsWith (138 bytes)   callee is too large
<writer thread='24579'/>
                              @ 9   java.util.stream.AbstractPipeline::getStreamAndOpFlags (5 bytes)
                              @ 12   java.util.stream.StreamOpFlag::isKnown (19 bytes)
<writer thread='42755'/>
                              @ 4   jdk.internal.module.IllegalAccessMaps::lambda$generate$2 (22 bytes)
<writer thread='24579'/>
                              @ 20   java.util.Spliterator::getExactSizeIfKnown (25 bytes)   no static binding
<writer thread='42755'/>
                                @ 1   java.lang.String::isEmpty (14 bytes)
<writer thread='24579'/>
                              @ 25   java.util.stream.Sink::begin (1 bytes)   no static binding
                              @ 32   java.util.Spliterator::forEachRemaining (11 bytes)   no static binding
                              @ 38   java.util.stream.Sink::end (1 bytes)   no static binding
<writer thread='24323'/>
   1234  507       3       java.util.stream.StreamOpFlag::isKnown (19 bytes)
<writer thread='24579'/>
                              @ 49   java.util.stream.AbstractPipeline::copyIntoWithCancel (46 bytes)   callee is too large
<writer thread='24323'/>
   1236  508       3       java.util.Spliterator::getExactSizeIfKnown (25 bytes)
                              @ 1   java.util.Spliterator::characteristics (0 bytes)   no static binding
                              @ 19   java.util.Spliterator::estimateSize (0 bytes)   no static binding
<writer thread='42755'/>
                                @ 10   java.lang.String::startsWith (7 bytes)
                                  @ 3   java.lang.String::startsWith (138 bytes)   callee is too large
<writer thread='24323'/>
   1238  494       3       jdk.internal.module.IllegalAccessMaps$$Lambda$30/0x0000000800090840::accept (20 bytes)
<writer thread='24579'/>
   1239  495       3       jdk.internal.module.IllegalAccessMaps::lambda$generate$5 (92 bytes)
<writer thread='24323'/>
                              @ 16   jdk.internal.module.IllegalAccessMaps::lambda$generate$5 (92 bytes)   callee is too large
<writer thread='24579'/>
                              @ 2   java.util.Map::get (0 bytes)   no static binding
                              @ 20   jdk.internal.module.IllegalAccessMaps::isOpen (21 bytes)
                                @ 1   java.lang.module.ModuleDescriptor::opens (5 bytes)
                                @ 4   java.util.Collection::stream (11 bytes)   no static binding
                                @ 10   java.lang.invoke.LambdaForm$MH/0x0000000800063040::linkToTargetMethod (9 bytes)   force inline by annotation
                                  @ 5   java.lang.invoke.LambdaForm$DMH/0x0000000800062c40::invokeStatic (14 bytes)   force inline by annotation
<writer thread='24323'/>
   1240  539       1       java.net.URL::getProtocol (5 bytes)
<writer thread='24579'/>
                                    @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
<writer thread='42755'/>
   1240  510       3       java.util.Collection::stream (11 bytes)
                              @ 1   java.util.Collection::spliterator (6 bytes)   no static binding
<writer thread='24323'/>
   1241  514       3       java.util.Spliterators$IteratorSpliterator::&lt;init&gt; (39 bytes)
<writer thread='42755'/>
                              @ 7   java.util.stream.StreamSupport::stream (19 bytes)
<writer thread='24579'/>
                                    @ 10   jdk.internal.module.IllegalAccessMaps$$Lambda$31/0x0000000800091440::get$Lambda
<writer thread='42755'/>

<writer thread='24579'/>
 (9 bytes)
<writer thread='24323'/>
                              @ 1  
<writer thread='42755'/>
                                @ 1   java.util.Objects::
<writer thread='24323'/>
 java.lang.Object::&lt;init&gt;
<writer thread='42755'/>
requireNonNull (14 bytes)
                                  @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='24323'/>
 (1 bytes)
<writer thread='42755'/>
                                @ 11   java.util.stream.StreamOpFlag::fromCharacteristics (37 bytes)   callee is too large
                                @ 15   java.util.stream.ReferencePipeline$Head::&lt;init&gt; (8 bytes)
<writer thread='24579'/>
                                      @ 5   jdk.internal.module.IllegalAccessMaps$$Lambda$31/0x0000000800091440::&lt;init&gt; (10 bytes)
<writer thread='42755'/>
                                  @ 4   java.util.stream.ReferencePipeline::&lt;init&gt; (8 bytes)
<writer thread='24579'/>
                                        @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='42755'/>
                                    @ 4   java.util.stream.AbstractPipeline::&lt;init&gt; (55 bytes)   callee is too large
<writer thread='24579'/>
                                @ 15   java.util.stream.ReferencePipeline::anyMatch (18 bytes)
                                  @ 5   java.util.stream.MatchOps::makeRef (29 bytes)   callee is too large
                                  @ 8   java.util.stream.AbstractPipeline::evaluate (94 bytes)   callee is too large
                                  @ 14   java.lang.Boolean::booleanValue (5 bytes)
<writer thread='24323'/>
   1243  516       3       java.util.Spliterators$IteratorSpliterator::estimateSize (41 bytes)
<writer thread='24579'/>
                              @ 28   java.lang.module.ModuleDescriptor::name (5 bytes)
<writer thread='24323'/>
                              @ 12   java.util.Collection::iterator (0 bytes)   no static binding
<writer thread='24579'/>
                              @ 36   jdk.internal.module.IllegalAccessMaps::isExported (21 bytes)
<writer thread='24323'/>
                              @ 25   java.util.Collection::size (0 bytes)   no static binding
<writer thread='24579'/>
                                @ 1   java.lang.module.ModuleDescriptor::exports (5 bytes)
                                @ 4   java.util.Collection::stream (11 bytes)   no static binding
                                @ 10   java.lang.invoke.LambdaForm$MH/0x0000000800063040::linkToTargetMethod (9 bytes)   force inline by annotation
                                  @ 5   java.lang.invoke.LambdaForm$DMH/0x0000000800062c40::invokeStatic (14 bytes)   force inline by annotation
                                    @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
                                    @ 10   jdk.internal.module.IllegalAccessMaps$$Lambda$33/0x0000000800091c40::get$Lambda (9 bytes)
<writer thread='42755'/>
   1245  481       1       java.util.stream.MatchOps$BooleanTerminalSink::getAndClearState (5 bytes)
<writer thread='24579'/>
                                      @ 5   jdk.internal.module.IllegalAccessMaps$$Lambda$33/0x0000000800091c40::&lt;init&gt; (10 bytes)
                                        @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='42755'/>
   1246  482       1       java.lang.Boolean::booleanValue (5 bytes)
<writer thread='24323'/>
   1246  518       3       java.util.stream.ReferencePipeline::anyMatch (18 bytes)
<writer thread='24579'/>
                                @ 15  
<writer thread='24323'/>
                              @ 5   java.util.stream.MatchOps::makeRef (29 bytes)
<writer thread='24579'/>
 java.util.stream.ReferencePipeline::anyMatch (18 bytes)
<writer thread='24323'/>
                                @ 1   java.util.Objects::requireNonNull (14 bytes)
<writer thread='24579'/>
                                  @ 5   java.util.stream.MatchOps::makeRef (29 bytes)   callee is too large
                                  @ 8   java.util.stream.AbstractPipeline::evaluate (94 bytes)   callee is too large
<writer thread='42755'/>
   1246  541       3       java.lang.StringLatin1::indexOf (121 bytes)
<writer thread='24579'/>

<writer thread='24323'/>
        
<writer thread='24579'/>
                                  @ 14   java.lang.Boolean::booleanValue (5 bytes)
             
<writer thread='24323'/>
                          @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 6   java.util.Objects::requireNonNull (14 bytes)
<writer thread='24579'/>
                 @ 45   java.lang.invoke.LambdaForm$MH/0x0000000800078c40::linkToTargetMethod (8 bytes)   force inline by annotation
                                @ 4   java.lang.invoke.LambdaForm$MH/0x0000000800078440::invoke (8 bytes)   force inline by annotation
<writer thread='24323'/>
                                @ 20   java.lang.invoke.LambdaForm$MH/0x0000000800061840::linkToTargetMethod (10 bytes)   force inline by annotation
<writer thread='24579'/>
                              @ 50   java.util.Map::computeIfAbsent (45 bytes)   no static binding
<writer thread='24323'/>
                                  @ 6   java.lang.invoke.LambdaForm$DMH/0x0000000800060440::invokeStatic (15 bytes)   force inline by annotation
<writer thread='24579'/>
                              @ 59   java.util.Set::add (0 bytes)   no static binding
<writer thread='24323'/>
                                    @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
<writer thread='24579'/>
                              @ 71   java.lang.invoke.LambdaForm$MH/0x0000000800078c40::linkToTargetMethod (8 bytes)   force inline by annotation
                                @ 4   java.lang.invoke.LambdaForm$MH/0x0000000800078440::invoke (8 bytes)   force inline by annotation
<writer thread='24323'/>
                                    @ 11   java.util.stream.MatchOps$$Lambda$32/0x0000000800091840::get$Lambda (10 bytes)
<writer thread='24579'/>
                              @ 76   java.util.Map::computeIfAbsent (45 bytes)   no static binding
                              @ 85   java.util.Set::add (0 bytes)   no static binding
<writer thread='24323'/>
                                      @ 6   java.util.stream.MatchOps$$Lambda$32/0x0000000800091840::&lt;init&gt; (15 bytes)
                                        @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 25   java.util.stream.MatchOps$MatchOp::&lt;init&gt; (20 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 8   java.util.stream.AbstractPipeline::evaluate (94 bytes)   callee is too large
                              @ 14   java.lang.Boolean::booleanValue (5 bytes)
<writer thread='42755'/>
   1253  542       1       java.net.URL::getFile (5 bytes)
   1253  540       1       java.net.URL::getPort (5 bytes)
   1254  543       1       java.net.URL::getAuthority (5 bytes)
   1254  549       3       java.lang.CharacterDataLatin1::toLowerCase (39 bytes)
                              @ 4   java.lang.CharacterDataLatin1::getProperties (11 bytes)
<writer thread='24323'/>
   1257  550       3       java.io.UnixFileSystem::normalize (75 bytes)
<writer thread='42755'/>
   1257  519       3       java.util.stream.MatchOps::makeRef (29 bytes)
<writer thread='24323'/>
                              @ 1   java.lang.String::length (11 bytes)
<writer thread='42755'/>
                              @ 1   java.util.Objects::requireNonNull (14 bytes)
<writer thread='24323'/>
                                @ 6   java.lang.String::coder (15 bytes)
<writer thread='42755'/>
                                @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 6   java.util.Objects::requireNonNull (14 bytes)
                                @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='24323'/>
                              @ 19   java.lang.String::charAt (25 bytes)
                                @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='42755'/>
                              @ 20   java.lang.invoke.LambdaForm$MH/0x0000000800061840::linkToTargetMethod (10 bytes)   force inline by annotation
<writer thread='24323'/>
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)
<writer thread='42755'/>
                                @ 6   java.lang.invoke.LambdaForm$DMH/0x0000000800060440::invokeStatic (15 bytes)   force inline by annotation
<writer thread='36611'/>

<writer thread='42755'/>
                                  @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
<writer thread='24323'/>
                                  @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='36611'/>
============================= C2-compiled nmethod ==============================
<opto_assembly compile_id='311'>
----------------------- MetaData before Compile_id = 311 ------------------------
{method}
 - this oop:          0x0000000121d87b38
 - method holder:     &apos;java/lang/String&apos;
 - constants:         0x0000000121d82360 constant pool [1059]/operands[28] {0x0000000121d82360} for &apos;java/lang/String&apos; cache=0x0000000121ea1220
 - access:            0x81000001  public 
 - name:              &apos;equals&apos;
 - signature:         &apos;(Ljava/lang/Object;)Z&apos;
 - max stack:         3
 - max locals:        3
 - size of params:    2
 - method size:       13
 - highest level:     3
 - vtable index:      1
 - i2i entry:         0x0000000105ef3de0
 - adapters:          AHE@0x00007f850a00f8b0: 0xbb000000 i2c: 0x0000000105f3bb60 c2i: 0x0000000105f3bc47 c2iUV: 0x0000000105f3bc0e c2iNCI: 0x0000000105f3bc84
 - compiled entry     0x0000000106630840
 - code size:         50
 - code start:        0x0000000121d87ad0
 - code end (excl):   0x0000000121d87b02
 - method data:       0x000000012219c2d8
 - checked ex length: 0
 - linenumber start:  0x0000000121d87b02
 - localvar length:   3
 - localvar start:    0x0000000121d87b12
 - compiled code: nmethod   1260   44       3       java.lang.String::equals (50 bytes)

------------------------ OptoAssembly for Compile_id = 311 -----------------------
#
#  bool ( java/lang/String:NotNull:exact *, java/lang/Object * )
#
#r018 rsi:rsi   : parm 0: java/lang/String:NotNull:exact *
#r016 rdx:rdx   : parm 1: java/lang/Object *
# -- Old rsp -- Framesize: 64 --
#r583 rsp+60: in_preserve
#r582 rsp+56: return address
#r581 rsp+52: in_preserve
#r580 rsp+48: saved fp register
#r579 rsp+44: pad2, stack alignment
#r578 rsp+40: pad2, stack alignment
#r577 rsp+36: Fixed slot 1
#r576 rsp+32: Fixed slot 0
#r591 rsp+28: spill
#r590 rsp+24: spill
#r589 rsp+20: spill
#r588 rsp+16: spill
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N100: #	out( B1 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
000     movl    rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	decode_klass_not_null rscratch1, rscratch1
	cmpq    rax, rscratch1	 # Inline cache check
	jne     SharedRuntime::_ic_miss_stub
	nop	# nops to align entry point


020     B1: #	out( B8 B2 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
020     # stack bang (136 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #48	# Create frame

02c     cmpq    RSI, RDX	# ptr
02f     je,u   B8  P=0.022174 C=29223.000000

035     B2: #	out( B7 B3 ) &lt;- in( B1 )  Freq: 0.977826
035     xorl    RAX, RAX	# int
037     testq   RDX, RDX	# ptr
03a     je     B7  P=0.001000 C=-1.000000

040     B3: #	out( B10 B4 ) &lt;- in( B2 )  Freq: 0.976848
040     movl    R11, [RDX + #8 (8-bit)]	# compressed klass ptr
044     cmpl    R11, narrowklass: precise klass java/lang/String: 0x00000001226c1ca0:Constant:exact *	# compressed klass ptr
04b     jne,u   B10  P=0.000000 C=-1.000000

051     B4: #	out( B9 B5 ) &lt;- in( B3 )  Freq: 0.976848
051     # checkcastPP of RDX
051     movsbl  R10, [RSI + #20 (8-bit)]	# byte ! Field: java/lang/String.coder (constant)
056     movsbl  RBP, [RDX + #20 (8-bit)]	# byte ! Field: java/lang/String.coder (constant)
05a     cmpl    R10, RBP
05d     jne     B9  P=0.000000 C=26839.000000

063     B5: #	out( B7 B6 ) &lt;- in( B4 )  Freq: 0.976847
063     movl    R10, [RDX + #12 (8-bit)]	# compressed ptr ! Field: java/lang/String.value (constant)
067     movl    R8, [RSI + #12 (8-bit)]	# compressed ptr ! Field: java/lang/String.value (constant)
06b     movl    R11, [R12 + R10 &lt;&lt; 3 + #12] (compressed oop addressing)	# range
070     movl    RCX, [R12 + R8 &lt;&lt; 3 + #12] (compressed oop addressing)	# range
075     cmpl    RCX, R11
078     jne     B7  P=0.001000 C=-1.000000

07e     B6: #	out( B7 ) &lt;- in( B5 )  Freq: 0.975871
07e     decode_heap_oop_not_null R11,R10
082     leaq    RSI, [R12 + R10 &lt;&lt; 3 + #16] (compressed oop addressing)	# ptr compressedoopoff32
087     decode_heap_oop_not_null R10,R8
08b     leaq    RDI, [R12 + R8 &lt;&lt; 3 + #16] (compressed oop addressing)	# ptr compressedoopoff32
090     String Equals RDI,RSI,RCX -&gt; RAX    // KILL XMM1, XMM0, RBX

14c     B7: #	out( N100 ) &lt;- in( B8 B6 B5 B2 )  Freq: 1
14c     vzeroupper
	addq    rsp, 48	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

15e     ret

15f     B8: #	out( B7 ) &lt;- in( B1 )  Freq: 0.0221743
15f     movl    RAX, #1	# int
164     jmp,s   B7

166     B9: #	out( N100 ) &lt;- in( B4 )  Freq: 4.88424e-07
166     movq    [rsp + #0], RSI	# spill
16a     movq    [rsp + #8], RDX	# spill
16f     movl    [rsp + #16], R10	# spill
174     movl    RSI, #-187	# int
        nop 	# 3 bytes pad for loops and calls
17c     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.lang.String::equals @ bci:33  L[0]=rsp + #0 L[1]=_ L[2]=rsp + #8 STK[0]=rsp + #16 STK[1]=RBP
        # OopMap {[0]=Oop [8]=Oop off=388/0x184}
184     ud2	# ShouldNotReachHere

198     B10: #	out( N100 ) &lt;- in( B3 )  Freq: 1e-35
198     movq    RBP, RSI	# spill
19b     movq    [rsp + #8], RDX	# spill
1a0     movl    RSI, #-34	# int
        nop 	# 3 bytes pad for loops and calls
1a8     call,static  wrapper for: uncommon_trap(reason=&apos;class_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.String::equals @ bci:8  L[0]=RBP L[1]=rsp + #8 L[2]=_ STK[0]=rsp + #8
        # OopMap {rbp=Oop [8]=Oop off=432/0x1b0}
1b0     ud2	# ShouldNotReachHere

--------------------------------------------------------------------------------
</opto_assembly>
<writer thread='42755'/>
                     
<writer thread='24323'/>
                                @ 21   java.lang.StringUTF16::charAt (11 bytes)
<writer thread='42755'/>
             @ 11   java.util.stream.MatchOps$$Lambda$32/0x0000000800091840::get$Lambda (10 bytes)
<writer thread='24323'/>
                                  @ 2  
<writer thread='42755'/>
                   
<writer thread='24323'/>
 java.lang.StringUTF16::checkIndex (9 bytes)
<writer thread='24579'/>
   1264  520       3       java.util.stream.MatchOps$$Lambda$32/0x0000000800091840::get$Lambda (10 bytes)
<writer thread='42755'/>
                 @ 6   java.util.stream.MatchOps$$Lambda$32/0x0000000800091840::&lt;init&gt; (15 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 25   java.util.stream.MatchOps$MatchOp::&lt;init&gt; (20 bytes)
<writer thread='24323'/>
                                    @ 2   java.lang.StringUTF16::
<writer thread='42755'/>
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
length (5 bytes)
                                    @ 5   java.lang.String::checkIndex (48 bytes)   callee is too large
                                  @ 7   java.lang.StringUTF16::getChar (60 bytes)   intrinsic
<writer thread='24579'/>
                              @ 6   java.util.stream.MatchOps$$Lambda$32/0x0000000800091840::&lt;init&gt; (15 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
                              @ 44   java.io.UnixFileSystem::normalize (129 bytes)   callee is too large
<writer thread='43011'/>
   1266  154       3       jdk.internal.module.ModuleInfo$ConstantPool::checkUnqualifiedName (131 bytes)   made not entrant
                              @ 1   java.lang.String::length (11 bytes)   inline (hot)
                                @ 6   java.lang.String::coder (15 bytes)   inline (hot)
                              @ 56   java.lang.String::charAt (25 bytes)   inline (hot)
                                @ 1   java.lang.String::isLatin1 (19 bytes)   inline (hot)
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)   inline (hot)
   1266  159       4       java.lang.String::length (11 bytes)
<writer thread='24323'/>
                              @ 69   java.io.UnixFileSystem::normalize (129 bytes)   callee is too large
<writer thread='43011'/>
<writer thread='24579'/>
   1268  521       3       java.util.stream.MatchOps$$Lambda$32/0x0000000800091840::&lt;init&gt; (15 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   1271  522       3       java.util.stream.MatchOps$MatchOp::&lt;init&gt; (20 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   1273  523       3       java.util.stream.MatchOps$MatchOp::getOpFlags (8 bytes)
<writer thread='42755'/>
   1275  524       3       java.util.stream.MatchOps$MatchOp::evaluateSequential (7 bytes)
<writer thread='24579'/>
   1276  525       3       java.util.stream.MatchOps$MatchOp::evaluateSequential (27 bytes)
<writer thread='42755'/>
                              @ 3   java.util.stream.MatchOps$MatchOp::evaluateSequential (27 bytes)
                                @ 5   java.util.function.Supplier::get (0 bytes)   not inlineable
                                @ 14   java.util.stream.PipelineHelper::wrapAndCopyInto (0 bytes)   no static binding
                                @ 20   java.util.stream.MatchOps$BooleanTerminalSink::getAndClearState (5 bytes)
<writer thread='24323'/>
   1277  526       3       java.util.stream.MatchOps$$Lambda$32/0x0000000800091840::get (12 bytes)
<writer thread='42755'/>
                                @ 23   java.lang.Boolean::valueOf (14 bytes)
<writer thread='24579'/>
                              @ 5   java.util.function.Supplier::get (0 bytes)   not inlineable
                              @ 14   java.util.stream.PipelineHelper::
<writer thread='24323'/>
                              @ 8   java.util.stream.MatchOps::lambda$makeRef$0 (10 bytes)
<writer thread='36611'/>
   1278   44       3       java.lang.String::equals (50 bytes)   made not entrant
                              @ 44   java.lang.StringLatin1::equals (36 bytes)   (intrinsic)
   1279  380       4       java.lang.AbstractStringBuilder::ensureCapacityInternal (39 bytes)
<writer thread='24579'/>
wrapAndCopyInto (0 bytes)   no static binding
                              @ 20   java.util.stream.MatchOps$BooleanTerminalSink::getAndClearState (5 bytes)
<writer thread='24323'/>
                                @ 6   java.util.stream.MatchOps$1MatchSink::&lt;init&gt; (16 bytes)
<writer thread='24579'/>
                              @ 23   java.lang.Boolean::valueOf (14 bytes)
<writer thread='24323'/>
                                  @ 12   java.util.stream.MatchOps$BooleanTerminalSink::&lt;init&gt; (21 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='42755'/>
   1281  527       3       java.util.stream.MatchOps::lambda$makeRef$0 (10 bytes)
                              @ 6   java.util.stream.MatchOps$1MatchSink::&lt;init&gt; (16 bytes)
<writer thread='36611'/>
<writer thread='42755'/>
                                @ 12   java.util.stream.MatchOps$BooleanTerminalSink::&lt;init&gt; (21 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
   1283  528       3       java.util.stream.MatchOps$1MatchSink::&lt;init&gt; (16 bytes)
<writer thread='9219'/>
<dependency_failed type='unique_concrete_method' ctxk='java/io/DataInput' x='java.io.DataInputStream readUnsignedShort ()I' witness='java/io/DataInput' stamp='1.283'/>
<dependency_failed type='unique_concrete_method' ctxk='java/io/DataInput' x='java.io.DataInputStream readUnsignedByte ()I' witness='java/io/DataInput' stamp='1.283'/>
<writer thread='24579'/>
   1283  529       3       java.util.stream.MatchOps$BooleanTerminalSink::&lt;init&gt; (21 bytes)
<writer thread='9219'/>
<dependency_failed type='unique_concrete_method' ctxk='java/io/DataInput' x='java.io.DataInputStream readUTF ()Ljava/lang/String;' witness='java/io/DataInput' stamp='1.283'/>
<dependency_failed type='unique_concrete_method' ctxk='java/io/DataInput' x='java.io.DataInputStream readInt ()I' witness='java/io/DataInput' stamp='1.283'/>
<dependency_failed type='unique_concrete_method' ctxk='java/io/DataInput' x='java.io.DataInputStream readFloat ()F' witness='java/io/DataInput' stamp='1.283'/>
<dependency_failed type='unique_concrete_method' ctxk='java/io/DataInput' x='java.io.DataInputStream readLong ()J' witness='java/io/DataInput' stamp='1.283'/>
<dependency_failed type='unique_concrete_method' ctxk='java/io/DataInput' x='java.io.DataInputStream readDouble ()D' witness='java/io/DataInput' stamp='1.283'/>
<dependency_failed type='unique_concrete_method' ctxk='java/io/DataInput' x='java.io.DataInputStream readUnsignedShort ()I' witness='java/io/DataInput' stamp='1.283'/>
<dependency_failed type='unique_concrete_method' ctxk='java/io/DataInput' x='java.io.DataInputStream readFully ([BII)V' witness='java/io/DataInput' stamp='1.283'/>
   1283  122       3       java.io.DataInputStream::readUTF (501 bytes)   made not entrant
   1284  405       3       jdk.internal.module.ModuleInfo$ConstantPool::&lt;init&gt; (452 bytes)   made not entrant
<writer thread='24579'/>
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='24323'/>
                              @ 12   java.util.stream.MatchOps$BooleanTerminalSink::&lt;init&gt; (21 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='42755'/>
   1286  530       3       java.lang.Boolean::valueOf (14 bytes)
<writer thread='24579'/>
   1287  480       1       java.lang.module.ModuleDescriptor::opens (5 bytes)
<writer thread='24323'/>
   1287  544       1       java.net.URL::getPath (5 bytes)
<writer thread='24579'/>
   1287  545       1       java.net.URL::getQuery (5 bytes)
<writer thread='42755'/>
   1288  546       1       java.net.URL::getRef (5 bytes)
<writer thread='24323'/>
   1288  535       1       java.lang.module.ModuleDescriptor::isOpen (5 bytes)
<writer thread='24579'/>
   1288  547       1       java.util.ArrayList::size (5 bytes)
<writer thread='42755'/>
   1288  538       1       java.lang.Module::getDescriptor (5 bytes)
<writer thread='24579'/>
   1289  548       1       jdk.internal.loader.URLClassPath$Loader::getBaseURL (5 bytes)
<writer thread='24323'/>
   1289  532       1       java.lang.module.ModuleDescriptor$Opens::source (5 bytes)
<writer thread='43011'/>

============================= C2-compiled nmethod ==============================
<opto_assembly compile_id='159'>
----------------------- MetaData before Compile_id = 159 ------------------------
{method}
 - this oop:          0x0000000121d86fa8
 - method holder:     &apos;java/lang/String&apos;
 - constants:         0x0000000121d82360 constant pool [1059]/operands[28] {0x0000000121d82360} for &apos;java/lang/String&apos; cache=0x0000000121ea1220
 - access:            0x81000001  public 
 - name:              &apos;length&apos;
 - signature:         &apos;()I&apos;
 - max stack:         3
 - max locals:        1
 - size of params:    1
 - method size:       13
 - highest level:     3
 - vtable index:      -2
 - i2i entry:         0x0000000105ef3de0
 - adapters:          AHE@0x00007f850a00f860: 0xb0000000 i2c: 0x0000000105f3bee0 c2i: 0x0000000105f3bfc3 c2iUV: 0x0000000105f3bf8a c2iNCI: 0x0000000105f3c000
 - compiled entry     0x0000000106626b00
 - code size:         11
 - code start:        0x0000000121d86f88
 - code end (excl):   0x0000000121d86f93
 - method data:       0x00000001221257b8
 - checked ex length: 0
 - linenumber start:  0x0000000121d86f93
 - localvar length:   1
 - localvar start:    0x0000000121d86f9a
 - compiled code: nmethod   1290   10       3       java.lang.String::length (11 bytes)

------------------------ OptoAssembly for Compile_id = 159 -----------------------
#
#  int ( java/lang/String:NotNull:exact * )
#
#r018 rsi:rsi   : parm 0: java/lang/String:NotNull:exact *
# -- Old rsp -- Framesize: 32 --
#r583 rsp+28: in_preserve
#r582 rsp+24: return address
#r581 rsp+20: in_preserve
#r580 rsp+16: saved fp register
#r579 rsp+12: pad2, stack alignment
#r578 rsp+ 8: pad2, stack alignment
#r577 rsp+ 4: Fixed slot 1
#r576 rsp+ 0: Fixed slot 0
#
000     N34: #	out( B1 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
000     movl    rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	decode_klass_not_null rscratch1, rscratch1
	cmpq    rax, rscratch1	 # Inline cache check
	jne     SharedRuntime::_ic_miss_stub
	nop	# nops to align entry point


020     B1: #	out( B3 B2 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
020     # stack bang (120 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #16	# Create frame

02c     movl    R11, [RSI + #12 (8-bit)]	# compressed ptr ! Field: java/lang/String.value (constant)
030     movl    RAX, [R12 + R11 &lt;&lt; 3 + #12] (compressed oop addressing)	# range
035     NullCheck R11

035     B2: #	out( N34 ) &lt;- in( B1 )  Freq: 0.999999
035     movsbl  RCX, [RSI + #20 (8-bit)]	# byte ! Field: java/lang/String.coder (constant)
039     sarl    RAX, RCX
03b     addq    rsp, 16	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

04a     ret

04b     B3: #	out( N34 ) &lt;- in( B1 )  Freq: 1.01328e-06
04b     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
053     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.String::length @ bci:4  L[0]=_ STK[0]=#NULL
        # OopMap {off=88/0x58}
058     ud2	# ShouldNotReachHere

--------------------------------------------------------------------------------
</opto_assembly>
<writer thread='42755'/>
   1292  551       3       java.util.zip.ZipUtils::SH (21 bytes)
<writer thread='43011'/>
   1294   10       3       java.lang.String::length (11 bytes)   made not entrant
                              @ 6   java.lang.String::coder (15 bytes)   inline (hot)
   1294  188       4       java.lang.String::hashCode (60 bytes)
<writer thread='24579'/>
   1334  553       3       java.lang.String::endsWith (15 bytes)
<writer thread='24323'/>
   1334  554       3       java.lang.String::indexOf (64 bytes)
<writer thread='24579'/>
                              @ 3   java.lang.String::length (11 bytes)
                                @ 6   java.lang.String::coder (15 bytes)
<writer thread='24323'/>
                              @ 1   java.lang.String::coder (15 bytes)
                              @ 7   java.lang.String::coder (15 bytes)
<writer thread='42755'/>
   1334  555       3       java.lang.StringLatin1::indexOf (25 bytes)
<writer thread='24323'/>
                              @ 14   java.lang.String::isLatin1 (19 bytes)
<writer thread='42755'/>
                              @ 21   java.lang.StringLatin1::indexOf (121 bytes)   callee is too large
<writer thread='24323'/>
                              @ 28   java.lang.StringLatin1::indexOf (25 bytes)
                                @ 21   java.lang.StringLatin1::indexOf (121 bytes)   callee is too large
<writer thread='24579'/>
                              @ 7   java.lang.String::length (11 bytes)
                                @ 6   java.lang.String::
<writer thread='24323'/>
                              @ 42   java.lang.StringUTF16::indexOf (31 bytes)
                                @ 18   java.lang.StringUTF16::length (5 bytes)
                                @ 23   java.lang.StringUTF16::length (5 bytes)
<writer thread='24579'/>
coder (15 bytes)
<writer thread='42755'/>
   1336  556       3       sun.net.www.ParseUtil::firstEncodeIndex (86 bytes)
<writer thread='24579'/>
                              @ 11   java.lang.String::startsWith (138 bytes)   callee is too large
<writer thread='42755'/>
                              @ 1   java.lang.String::length (11 bytes)
<writer thread='24323'/>
                                @ 27   java.lang.StringUTF16::
<writer thread='42755'/>
                                @ 6   java.lang.String::coder (15 bytes)
<writer thread='24323'/>
indexOfUnsafe (209 bytes)   callee is too large
<writer thread='42755'/>
                              @ 14   java.lang.String::charAt (25 bytes)
                                @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='24323'/>
                              @ 60   java.lang.StringUTF16::indexOfLatin1 (31 bytes)
<writer thread='42755'/>
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)
<writer thread='24323'/>
                                @ 8   java.lang.StringUTF16::length (5 bytes)
                                @ 20   java.lang.StringUTF16::length (5 bytes)
<writer thread='42755'/>
                                  @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                                @ 21   java.lang.StringUTF16::charAt (11 bytes)
<writer thread='24323'/>
                                @ 27   java.lang.StringUTF16::indexOfLatin1Unsafe (212 bytes)   callee is too large
<writer thread='42755'/>
                                  @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
                                    @ 2   java.lang.StringUTF16::length (5 bytes)
                                    @ 5   java.lang.String::checkIndex (48 bytes)   callee is too large
                                  @ 7   java.lang.StringUTF16::getChar (60 bytes)   intrinsic
<writer thread='24579'/>
   1344  561   !   3       java.net.URL::&lt;init&gt; (543 bytes)
<writer thread='42755'/>
                              @ 70   sun.net.www.ParseUtil::match (50 bytes)   callee is too large
<writer thread='24579'/>
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 33   java.lang.System::getSecurityManager (12 bytes)
                                @ 0   java.lang.System::allowSecurityManager (13 bytes)
                              @ 46   java.net.URL::checkSpecifyHandler (8 bytes)
                                @ 4   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 50   java.lang.String::length (11 bytes)
<writer thread='24323'/>
   1346  562       3       java.lang.Character::toLowerCase (9 bytes)
                              @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
        
<writer thread='24579'/>
                                @ 6   java.lang.String::coder (15 bytes)
<writer thread='24323'/>
                      @ 5   java.lang.CharacterData::toLowerCase (0 bytes)   no static binding
<writer thread='24579'/>
                              @ 65   java.lang.String::charAt (25 bytes)
                                @ 1   java.lang.String::isLatin1 (19 bytes)
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)
                                  @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24323'/>
   1349  563       3       java.net.URL::isBuiltinStreamHandler (12 bytes)
<writer thread='24579'/>
                                @ 21   java.lang.StringUTF16::charAt
<writer thread='24323'/>
                              @ 2   java.lang.Object::getClass (0 bytes)   intrinsic
<writer thread='24579'/>
 (11 bytes)
<writer thread='24323'/>
                              @ 5   java.lang.Class::getName (18 bytes)
<writer thread='24579'/>
                                  @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
<writer thread='24323'/>
                                @ 14  
<writer thread='24579'/>
                              
<writer thread='24323'/>
 java.lang.Class::initClassName (0 bytes)   native method
<writer thread='24579'/>
      @ 2   java.lang.StringUTF16::length (5 bytes)
<writer thread='24323'/>
                              @ 8   java.net.URL::isBuiltinStreamHandler (8 bytes)
                                @ 4   java.lang.String::startsWith (7 bytes)
<writer thread='24579'/>
                                    @ 5   java.lang.String::checkIndex (48 bytes)   callee is too large
<writer thread='24323'/>
                                  @ 3   java.lang.String::startsWith (138 bytes)   callee is too large
<writer thread='24579'/>
                                  @ 7   java.lang.StringUTF16::getChar (60 bytes)   intrinsic
                              @ 89   java.lang.String::charAt (25 bytes)
                                @ 1   java.lang.String::isLatin1 (19 bytes)
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)
                                  @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                                @ 21   java.lang.StringUTF16::charAt (11 bytes)
                                  @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
                                    @ 2   java.lang.StringUTF16::length (5 bytes)
                                    @ 5   java.lang.String::checkIndex (48 bytes)   callee is too large
                                  @ 7   java.lang.StringUTF16::getChar (60 bytes)   intrinsic
<writer thread='24323'/>
   1352  564       3       java.net.URL::isBuiltinStreamHandler (8 bytes)
<writer thread='24579'/>
                              @ 111   java.lang.String::regionMatches (150 bytes)   callee is too large
                              @ 123   java.lang.String::length (11 bytes)
<writer thread='24323'/>
                              @ 4   java.lang.String::startsWith (7 bytes)
<writer thread='24579'/>
                                @ 6   java.lang.String::coder (15 bytes)
<writer thread='24323'/>
                                @ 3   java.lang.String::startsWith (138 bytes)   callee is too large
<writer thread='24579'/>
                              @ 132   java.lang.String::charAt (25 bytes)
                                @ 1   java.lang.String::isLatin1 (19 bytes)
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)
<writer thread='24323'/>
   1355  565       3       sun.net.util.IPAddressUtil::checkHostString (53 bytes)
<writer thread='24579'/>
                                  @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                                @ 21   java.lang.StringUTF16::charAt (11 bytes)
<writer thread='24323'/>
                   
<writer thread='24579'/>
                                  @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
<writer thread='24323'/>
           @ 16   sun.net.util.IPAddressUtil::scan
<writer thread='24579'/>
                                    @ 2  
<writer thread='24323'/>
 (92 bytes)   callee is too large
<writer thread='24579'/>
 java.lang.StringUTF16::length (5 bytes)
<writer thread='24323'/>
                              @ 28   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
<writer thread='24579'/>
                                    @ 5   java.lang.String::checkIndex (48 bytes)   callee is too large
<writer thread='24323'/>
                              @ 33   java.lang.StringBuilder::append (8 bytes)
                                @ 2  
<writer thread='24579'/>
                                  @ 7   java.lang.StringUTF16::getChar (60 bytes)   intrinsic
<writer thread='24323'/>
 java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 38   java.lang.String::charAt (25 bytes)
<writer thread='24579'/>
                              @ 162   java.lang.String::charAt (25 bytes)
                                @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='24323'/>
                                @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='24579'/>
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)
                                  @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='42755'/>
   1358  566       3       sun.net.util.IPAddressUtil::scan (92 bytes)
                              @ 8   java.lang.String::
<writer thread='24579'/>
                                @ 21   java.lang.StringUTF16::
<writer thread='42755'/>
length (11 bytes)
<writer thread='24323'/>
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)
<writer thread='24579'/>
charAt (11 bytes)
<writer thread='42755'/>
                                @ 6   java.lang.String::coder (15 bytes)
<writer thread='24579'/>
                                  @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
                                    @ 2   java.lang.StringUTF16::length (5 bytes)
                                    @ 5   java.lang.String::checkIndex (48 bytes)   callee is too large
<writer thread='42755'/>
                              @ 41   java.lang.String::charAt (25 bytes)
                                @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='24579'/>
                                  @ 7   java.lang.StringUTF16::getChar (60 bytes)   intrinsic
                              @ 185   java.lang.String::substring (58 bytes)   callee is too large
<writer thread='24323'/>
                                  @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24579'/>
                              @ 188   java.net.URL::toLowerCase (38 bytes)   callee is too large
<writer thread='42755'/>
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)
<writer thread='24323'/>
                                @ 21   java.lang.StringUTF16::charAt (11 bytes)
<writer thread='24579'/>
                              @ 196   java.net.URL::isValidProtocol (78 bytes)   callee is too large
<writer thread='24323'/>
                                  @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
                                    @ 2   java.lang.StringUTF16::length (5 bytes)
<writer thread='42755'/>
                                  @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24579'/>
                              @ 242   java.lang.String::equalsIgnoreCase (45 bytes)   callee is too large
<writer thread='24323'/>
                                    @ 5   java.lang.String::checkIndex (48 bytes)   callee is too large
<writer thread='42755'/>
                                @ 21   java.lang.StringUTF16::charAt (11 bytes)
<writer thread='24323'/>
                                  @ 7   java.lang.StringUTF16::getChar (60 bytes)   intrinsic
<writer thread='42755'/>
                                  @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
<writer thread='24579'/>
                              @ 270   java.lang.String::startsWith (7 bytes)
<writer thread='42755'/>
                                    @ 2   java.lang.StringUTF16::length (5 bytes)
<writer thread='24323'/>
                              @ 41   sun.net.util.IPAddressUtil::describeChar (89 bytes)   callee is too large
                              @ 44   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::
<writer thread='42755'/>
                                    @ 5   java.lang.String::checkIndex (48 bytes)   callee is too large
<writer thread='24323'/>
append (45 bytes)   callee is too large
                              @ 47   java.lang.StringBuilder::toString (35 bytes)
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
<writer thread='24579'/>
                                @ 3   java.lang.String::startsWith (138 bytes)   callee is too large
<writer thread='42755'/>
                                  @ 7   java.lang.StringUTF16::getChar (60 bytes)   intrinsic
<writer thread='24323'/>
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
<writer thread='42755'/>
                              @ 49   sun.net.util.IPAddressUtil::match (50 bytes)   callee is too large
<writer thread='24323'/>
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
<writer thread='42755'/>
                              @ 69   java.util.Arrays::binarySearch (9 bytes)
<writer thread='24323'/>
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='42755'/>
                                @ 5   java.util.Arrays::binarySearch0 (72 bytes)   callee is too large
<writer thread='24323'/>
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
<writer thread='24579'/>
                              @ 358   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
                              @ 363   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 368   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 371   java.lang.StringBuilder::toString (35 bytes)
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
                              @ 374  java/net/MalformedURLException::&lt;init&gt; (not loaded)   not inlineable
               !m             @ 386   java.net.URL::getURLStreamHandler (191 bytes)   callee is too large
                              @ 402   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
                              @ 407   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 414   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
                              @ 417   java.lang.StringBuilder::toString (35 bytes)
                                @ 1   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
                                @ 16   java.lang.StringLatin1::newString (17 bytes)
                                  @ 9   java.util.Arrays::copyOfRange (64 bytes)   callee is too large
                                  @ 13   java.lang.String::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 31   java.lang.StringUTF16::newString (50 bytes)   callee is too large
                              @ 420  java/net/MalformedURLException::&lt;init&gt; (not loaded)   not inlineable
                              @ 434   java.lang.String::indexOf (29 bytes)
                                @ 1   java.lang.String::isLatin1 (19 bytes)
                                @ 13   java.lang.StringLatin1::indexOf (61 bytes)   callee is too large
                                @ 25   java.lang.StringUTF16::indexOf (43 bytes)   callee is too large
                              @ 452   java.lang.String::substring (58 bytes)   callee is too large
                              @ 504   java.net.URLStreamHandler::parseURL (1201 bytes)   no static binding
                              @ 523   java.lang.Throwable::getMessage (5 bytes)   no static binding
                              @ 526  java/net/MalformedURLException::&lt;init&gt; (not loaded)   not inlineable
                              @ 535  java/net/MalformedURLException::initCause (not loaded)   not inlineable
<writer thread='24323'/>
   1376  571 %     3       jvmLearning.chapter11.Test::doubleValue @ 2 (18 bytes)
<writer thread='42755'/>
   1377  567       3       java.lang.CharacterDataLatin1::toUpperCase (53 bytes)
<writer thread='24323'/>
   1378  557       3       java.io.UnixFileSystem::prefixLength (25 bytes)
<writer thread='42755'/>
                              @ 4   java.lang.CharacterDataLatin1::getProperties (11 bytes)
<writer thread='24323'/>
                              @ 1   java.lang.String::isEmpty (14 bytes)
                              @ 11   java.lang.String::charAt (25 bytes)
                                @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='34307'/>
   1378  573     n 0       java.lang.Object::clone (native)   
<writer thread='24323'/>
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)
                                  @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                                @ 21   java.lang.StringUTF16::charAt (11 bytes)
                                  @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
                                    @ 2   java.lang.StringUTF16::length (5 bytes)
                                    @ 5   java.lang.String::checkIndex (48 bytes)   callee is too large
                                  @ 7   java.lang.StringUTF16::getChar (60 bytes)   intrinsic
<writer thread='42755'/>
   1380  558       3       java.lang.String::indexOf (18 bytes)
                              @ 5   java.lang.String::coder (15 bytes)
                              @ 9   java.lang.String::length (11 bytes)
                                @ 6   java.lang.String::coder (15 bytes)
                              @ 14   java.lang.String::indexOf (113 bytes)   callee is too large
<writer thread='24323'/>
   1386  559       3       java.lang.String::indexOf (113 bytes)
<writer thread='42755'/>
   1387  560       3       java.lang.String::regionMatches (150 bytes)
<writer thread='24323'/>
                              @ 7   java.lang.String::coder (15 bytes)
                              @ 13   java.lang.String::length (11 bytes)
<writer thread='42755'/>
                              @ 11   java.lang.String::regionMatches (189 bytes)   callee is too large
                              @ 27   java.lang.String::length (11 bytes)
<writer thread='24323'/>
                                @ 6   java.lang.String::coder (15 bytes)
<writer thread='42755'/>
                                @ 6   java.lang.String::coder (15 bytes)
                              @ 43   java.lang.String::length (11 bytes)
<writer thread='24323'/>
                              @ 77   java.lang.StringLatin1::indexOf (121 bytes)   callee is too large
<writer thread='42755'/>
                                @ 6   java.lang.String::coder (15 bytes)
<writer thread='24323'/>
                              @ 91   java.lang.StringUTF16::indexOf (23 bytes)
                                @ 4   java.lang.StringUTF16::checkBoundsBeginEnd (10 bytes)
                                  @ 3   java.lang.StringUTF16::length
<writer thread='42755'/>
                              @ 70   java.lang.String::coder (15 bytes)
<writer thread='24323'/>
 (5 bytes)
                                  @ 6  
<writer thread='42755'/>
                              @ 78   java.lang.String::coder (15 bytes)
<writer thread='24323'/>
 java.lang.String::checkBoundsBeginEnd (63 bytes)   callee is too large
                                @ 10   java.lang.StringUTF16::checkBoundsBeginEnd (10 bytes)
                                  @ 3   java.lang.StringUTF16::length (5 bytes)
<writer thread='42755'/>
                              @ 98   java.lang.StringLatin1::regionMatchesCI (98 bytes)   callee is too large
<writer thread='24323'/>
                                  @ 6   java.lang.String::checkBoundsBeginEnd (63 bytes)   callee is too large
                                @ 19   java.lang.StringUTF16::indexOfUnsafe (209 bytes)   callee is too large
<writer thread='42755'/>
                              @ 113   java.lang.StringUTF16::regionMatchesCI (156 bytes)   callee is too large
<writer thread='24323'/>
                              @ 109   java.lang.StringUTF16::indexOfLatin1 (24 bytes)
<writer thread='42755'/>
                              @ 131   java.lang.StringLatin1::regionMatchesCI_UTF16
<writer thread='24323'/>
                                @ 4   java.lang.StringUTF16::checkBoundsBeginEnd (10 bytes)
<writer thread='42755'/>
 (93 bytes)   callee is too large
<writer thread='24323'/>
                                  @ 3   java.lang.StringUTF16::length (5 bytes)
<writer thread='42755'/>
                              @ 146   java.lang.StringUTF16::regionMatchesCI_Latin1 (10 bytes)
                                @ 6  
<writer thread='24323'/>
                                  @ 6   java.lang.String::checkBoundsBeginEnd (63 bytes)   callee is too large
<writer thread='42755'/>
 java.lang.StringLatin1::regionMatchesCI_UTF16 (93 bytes)   callee is too large
<writer thread='24323'/>
                                @ 11   java.lang.String::checkBoundsBeginEnd (63 bytes)   callee is too large
                                @ 20   java.lang.StringUTF16::indexOfLatin1Unsafe (212 bytes)   callee is too large
<writer thread='34307'/>
<dependency_failed type='unique_concrete_method' ctxk='java/util/concurrent/ConcurrentMap' x='java.util.concurrent.ConcurrentHashMap remove (Ljava/lang/Object;)Ljava/lang/Object;' witness='java/util/concurrent/ConcurrentMap' stamp='1.403'/>
<dependency_failed type='unique_concrete_method' ctxk='java/util/concurrent/ConcurrentMap' x='java.util.concurrent.ConcurrentHashMap get (Ljava/lang/Object;)Ljava/lang/Object;' witness='java/util/concurrent/ConcurrentMap' stamp='1.403'/>
<dependency_failed type='unique_concrete_method' ctxk='java/util/concurrent/ConcurrentMap' x='java.util.concurrent.ConcurrentHashMap remove (Ljava/lang/Object;)Ljava/lang/Object;' witness='java/util/concurrent/ConcurrentMap' stamp='1.403'/>
   1403   82       3       java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements (27 bytes)   made not entrant
   1403  111       3       java.lang.invoke.MethodType$ConcurrentWeakInternSet::get (47 bytes)   made not entrant
<writer thread='42755'/>
   1411  574       3       sun.invoke.util.VerifyAccess::isSamePackage (32 bytes)
                              @ 8   java.lang.Class::getClassLoader (28 bytes)   force inline by annotation
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (12 bytes)
                                  @ 0   java.lang.System::allowSecurityManager (13 bytes)
                                @ 20   jdk.internal.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (12 bytes)
                                    @ 0   java.lang.System::allowSecurityManager (13 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 12   java.lang.Class::getClassLoader (28 bytes)   force inline by annotation
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (12 bytes)
                                  @ 0   java.lang.System::allowSecurityManager (13 bytes)
                                @ 20   jdk.internal.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (12 bytes)
                                    @ 0   java.lang.System::allowSecurityManager (13 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
<writer thread='34307'/>
   1423  575     n 0       java.lang.invoke.MethodHandle::linkToStatic(L)L (native)   (static)
<writer thread='42755'/>
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 21   java.lang.Class::getPackageName (82 bytes)   callee is too large
                              @ 25   java.lang.Class::getPackageName (82 bytes)   callee is too large
                              @ 28   java.util.Objects::equals (23 bytes)
                                @ 11   java.lang.String::equals (50 bytes)   callee is too large
<writer thread='24323'/>
   1426  576       3       java.lang.reflect.Modifier::isStatic (13 bytes)
   1428  578       3       java.lang.invoke.MemberName::isResolved (13 bytes)
   1481  579       3       java.lang.invoke.MethodType$ConcurrentWeakInternSet::get (47 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 13   java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements (27 bytes)
               !m               @ 4   java.lang.ref.ReferenceQueue::poll (28 bytes)
                                  @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                                @ 17   java.util.concurrent.ConcurrentMap::remove (10 bytes)   no static binding
                              @ 21   java.util.concurrent.ConcurrentMap::get (10 bytes)   no static binding
                              @ 35   java.lang.ref.Reference::get (5 bytes)   intrinsic
<writer thread='42755'/>
   1488  581       3       java.io.DataInputStream::readShort (40 bytes)
                              @ 4   java.io.InputStream::read (0 bytes)   no static binding
                              @ 12   java.io.InputStream::read (0 bytes)   no static binding
                              @ 26  java/io/EOFException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24323'/>
   1491  582       3       java.io.DataInputStream::readFully (9 bytes)
                              @ 5   java.io.DataInputStream::readFully (63 bytes)   callee is too large
<writer thread='34307'/>
   1514  583     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLL)I (native)   (static)
<writer thread='36611'/>

============================= C2-compiled nmethod ==============================
<opto_assembly compile_id='380'>
----------------------- MetaData before Compile_id = 380 ------------------------
{method}
 - this oop:          0x0000000121e34510
 - method holder:     &apos;java/lang/AbstractStringBuilder&apos;
 - constants:         0x0000000121e32410 constant pool [538]/operands[14] {0x0000000121e32410} for &apos;java/lang/AbstractStringBuilder&apos; cache=0x0000000121f7be78
 - access:            0x81000002  private 
 - name:              &apos;ensureCapacityInternal&apos;
 - signature:         &apos;(I)V&apos;
 - max stack:         5
 - max locals:        3
 - size of params:    2
 - method size:       13
 - highest level:     3
 - vtable index:      -2
 - i2i entry:         0x0000000105ef3de0
 - adapters:          AHE@0x00007f850a00fa40: 0xba000000 i2c: 0x0000000105f3a9e0 c2i: 0x0000000105f3aac6 c2iUV: 0x0000000105f3aa8d c2iNCI: 0x0000000105f3ab03
 - compiled entry     0x000000010662dc80
 - code size:         39
 - code start:        0x0000000121e344b0
 - code end (excl):   0x0000000121e344d7
 - method data:       0x0000000122180b18
 - checked ex length: 0
 - linenumber start:  0x0000000121e344d7
 - localvar length:   3
 - localvar start:    0x0000000121e344ea
 - compiled code: nmethod   1517   36       3       java.lang.AbstractStringBuilder::ensureCapacityInternal (39 bytes)

------------------------ OptoAssembly for Compile_id = 380 -----------------------
#
#  void ( java/lang/AbstractStringBuilder:NotNull *, int )
#
#r018 rsi:rsi   : parm 0: java/lang/AbstractStringBuilder:NotNull *
#r016 rdx   : parm 1: int
# -- Old rsp -- Framesize: 80 --
#r583 rsp+76: in_preserve
#r582 rsp+72: return address
#r581 rsp+68: in_preserve
#r580 rsp+64: saved fp register
#r579 rsp+60: pad2, stack alignment
#r578 rsp+56: pad2, stack alignment
#r577 rsp+52: Fixed slot 1
#r576 rsp+48: Fixed slot 0
#r595 rsp+44: spill
#r594 rsp+40: spill
#r593 rsp+36: spill
#r592 rsp+32: spill
#r591 rsp+28: spill
#r590 rsp+24: spill
#r589 rsp+20: spill
#r588 rsp+16: spill
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N470: #	out( B1 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
000     movl    rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	decode_klass_not_null rscratch1, rscratch1
	cmpq    rax, rscratch1	 # Inline cache check
	jne     SharedRuntime::_ic_miss_stub
	nop	# nops to align entry point


020     B1: #	out( B38 B2 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
020     # stack bang (288 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #64	# Create frame

02c     movq    RBX, RSI	# spill
02f     movl    R11, [RSI + #20 (8-bit)]	# compressed ptr ! Field: java/lang/AbstractStringBuilder.value
033     movl    R9, [R12 + R11 &lt;&lt; 3 + #12] (compressed oop addressing)	# range
038     NullCheck R11

038     B2: #	out( B4 B3 ) &lt;- in( B1 )  Freq: 0.999999
038     movsbl  RCX, [RSI + #16 (8-bit)]	# byte ! Field: java/lang/AbstractStringBuilder.coder
03c     movl    R10, R9	# spill
03f     sarl    R10, RCX
042     movl    RDI, RDX	# spill
044     subl    RDI, R10	# int
047     testl   RDI, RDI
049     jg,s   B4  P=0.085575 C=15951.000000

04b     B3: #	out( N470 ) &lt;- in( B24 B25 B22 B21 B20 B2 )  Freq: 0.999999
04b     vzeroupper
	addq    rsp, 64	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

05d     ret

05e     B4: #	out( B6 B5 ) &lt;- in( B2 )  Freq: 0.0855745
05e     sall    R10, #1
061     movl    RDI, R10	# spill
064     subl    RDI, RDX	# int
066     addl    RDI, #2	# int
069     testl   RDI, RDI
06b     jge,s   B6  P=0.696716 C=1431.000000

06d     B5: #	out( B7 ) &lt;- in( B4 )  Freq: 0.0259534
06d     movl    R10, RDX	# spill
070     jmp,s   B7

072     B6: #	out( B7 ) &lt;- in( B4 )  Freq: 0.0596211
072     addl    R10, #2	# int

076     B7: #	out( B35 B8 ) &lt;- in( B5 B6 )  Freq: 0.0855745
076     movl    RBP, #2147483639	# int
07b     sarl    RBP, RCX
07d     testl   R10, R10
080     jle     B35  P=0.000000 C=1431.000000

086     B8: #	out( B37 B9 ) &lt;- in( B7 )  Freq: 0.0855744
086     subl    RBP, R10	# int
089     testl   RBP, RBP
08b     jl     B37  P=0.000000 C=1431.000000

091     B9: #	out( B32 B10 ) &lt;- in( B8 )  Freq: 0.0855744
091     sall    R10, RCX
094     cmpl    R10, #1048576	# unsigned
09b     jnbe,u   B32  P=0.000001 C=-1.000000

0a1     B10: #	out( B11 ) &lt;- in( B9 )  Freq: 0.0855743
0a1     movslq  R8, R10	# i2l

0a4     B11: #	out( B34 B12 ) &lt;- in( B10 B32 )  Freq: 0.0855744
0a4     movl    RCX, R10	# spill
0a7     # castII of RCX
0a7     cmpl    R9, RCX
0aa     movl    RBP, RCX	# spill
0ac     cmovll RBP, R9	# signed, int
0b0     cmpl    R9, RBP	# unsigned
0b3     jb,u   B34  P=0.000001 C=-1.000000

0b9     B12: #	out( B34 B13 ) &lt;- in( B11 )  Freq: 0.0855743
0b9     cmpl    RCX, RBP	# unsigned
0bb     jb,u   B34  P=0.000001 C=-1.000000

0c1     B13: #	out( B30 B14 ) &lt;- in( B12 )  Freq: 0.0855742
0c1     addq    R8, #23	# long
0c5     movq    RCX, R8	# spill
0c8     andq    RCX, #-8	# long
0cc     cmpl    R10, #1048576	# unsigned
0d3     jnbe,u   B30  P=0.000001 C=-1.000000

0d9     B14: #	out( B30 B15 ) &lt;- in( B13 )  Freq: 0.0855741
0d9     # TLS is in R15
0d9     movq    R13, [R15 + #320 (32-bit)]	# ptr
0e0     movq    R9, R13	# spill
0e3     addq    R9, RCX	# ptr
0e6     # TLS is in R15
0e6     cmpq    R9, [R15 + #336 (32-bit)]	# raw ptr
0ed     jnb,u   B30  P=0.000100 C=-1.000000

0f3     B15: #	out( B16 ) &lt;- in( B14 )  Freq: 0.0855656
0f3     # TLS is in R15
0f3     movq    [R15 + #320 (32-bit)], R9	# ptr
0fa     PREFETCHW [R9 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
102     movq    [R13], #1	# long
10a     PREFETCHW [R9 + #256 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
112     movl    [R13 + #8 (8-bit)], narrowklass: precise klass [B: 0x0000000122713a90:Constant:exact *	# compressed klass ptr
11a     movl    [R13 + #12 (8-bit)], R10	# int
11e     PREFETCHW [R9 + #320 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
126     PREFETCHW [R9 + #384 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified

12e     B16: #	out( B33 B17 ) &lt;- in( B31 B15 )  Freq: 0.0855742
12e     
12e     # checkcastPP of R13
12e     movq    R9, R13	# spill
131     addq    R9, #16	# ptr
135     shrq    R8, #3
139     encode_heap_oop_not_null R14,R13
182     testl   RBP, RBP
184     je     B33  P=0.000001 C=-1.000000

18a     B17: #	out( B26 B18 ) &lt;- in( B16 )  Freq: 0.0855741
18a     decode_heap_oop_not_null RDI,R11
18e     leaq    R11, [R12 + R11 &lt;&lt; 3 + #16] (compressed oop addressing)	# ptr compressedoopoff32
193     cmpl    RBP, R10
196     jl     B26  P=0.001000 C=-1.000000

19c     B18: #	out( B19 ) &lt;- in( B17 )  Freq: 0.0854886
19c     addq    RCX, #-16	# long
1a0     shrq    RCX, #3
1a4     movq    RDI, R11	# spill
1a7     movq    RSI, R9	# spill
1aa     movq    RDX, RCX	# spill
1ad     call_leaf_nofp,runtime  jlong_disjoint_arraycopy
        No JVM State Info
        # 

1bd     B19: #	out( B27 B20 ) &lt;- in( B26 B18 B33 )  Freq: 0.0855742
1bd     MEMBAR-storestore (empty encoding)
1bd     # TLS is in R15
1bd     cmpb    [R15 + #48 (8-bit)], #0
1c2     jne     B27  P=0.001000 C=-1.000000

1c8     B20: #	out( B3 B21 ) &lt;- in( B36 B29 B27 B19 )  Freq: 0.0855742
1c8     movl    [RBX + #20 (8-bit)], R14	# compressed ptr ! Field: java/lang/AbstractStringBuilder.value
1cc     movq    R10, R13	# ptr -&gt; long
1cf     movq    R11, RBX	# ptr -&gt; long
1d2     xorq    R10, R11	# long
1d5     shrq    R10, #20
1d9     testq   R10, R10
1dc     je     B3  P=0.001000 C=-1.000000

1e2     B21: #	out( B3 B22 ) &lt;- in( B20 )  Freq: 0.0854887
1e2     shrq    R11, #9
1e6     movq    RDI, 0x00000001126eb000	# ptr
1f0     addq    RDI, R11	# ptr
1f3     cmpb    [RDI], #8
1f6     je     B3  P=0.999000 C=-1.000000

1fc     B22: #	out( B3 B23 ) &lt;- in( B21 )  Freq: 8.54887e-05
1fc     # TLS is in R15
1fc     movq    R10, [R15 + #120 (8-bit)]	# ptr
200     # TLS is in R15
200     movq    R11, [R15 + #104 (8-bit)]	# long
204     lock addl [rsp + #0], 0	! membar_volatile
20a     cmpb    [RDI], #0
20d     je     B3  P=0.500000 C=-1.000000

213     B23: #	out( B25 B24 ) &lt;- in( B22 )  Freq: 4.27443e-05
213     movb    [RDI], #0	# CMS card-mark byte 0
216     testq   R11, R11
219     jne,s   B25  P=0.500000 C=-1.000000

21b     B24: #	out( B3 ) &lt;- in( B23 )  Freq: 2.13722e-05
21b     # TLS is in R15
21b     movq    RSI, R15	# spill
21e     call_leaf,runtime  write_ref_field_post_entry
        No JVM State Info
        # 
22e     jmp     B3

233     B25: #	out( B3 ) &lt;- in( B23 )  Freq: 2.13722e-05
233     movq    [R10 + #-8 + R11], RDI	# ptr
238     addq    R11, #-8	# long
23c     # TLS is in R15
23c     movq    [R15 + #104 (8-bit)], R11	# long
240     jmp     B3

245     B26: #	out( B19 ) &lt;- in( B17 )  Freq: 8.55741e-05
245     movslq  RDX, RBP	# i2l
248     movq    R10, RDX	# spill
24b     addq    R10, #16	# long
24f     movq    RCX, R10	# spill
252     andq    RCX, #-8	# long
256     movq    RDI, R13	# spill
259     addq    RDI, RCX	# ptr
25c     shrq    R10, #3
260     subq    R8, R10	# long
263     movq    RCX, R8	# spill
266     xorq    rax, rax	# ClearArray:
	cmp     InitArrayShortSize,rcx
	jg      LARGE
	dec     rcx
	js      DONE	# Zero length
	mov     rax,(rdi,rcx,8)	# LOOP
	dec     rcx
	jge     LOOP
	jmp     DONE
	# LARGE:
	shlq    rcx,3	# Convert doublewords to bytes
	rep     stosb	# Store rax to *rdi++ while rcx--
	# DONE
286     movq    RDI, R11	# spill
289     movq    RSI, R9	# spill
28c     call_leaf_nofp,runtime  arrayof_jbyte_disjoint_arraycopy
        No JVM State Info
        # 
29c     jmp     B19

2a1     B27: #	out( B20 B28 ) &lt;- in( B19 )  Freq: 8.55731e-05
2a1     movl    R10, [RBX + #20 (8-bit)]	# compressed ptr ! Field: java/lang/AbstractStringBuilder.value
2a5     testl   R10, R10	# compressed ptr
2a8     je     B20  P=0.500000 C=-1.000000

2ae     B28: #	out( B36 B29 ) &lt;- in( B27 )  Freq: 4.27866e-05
2ae     # TLS is in R15
2ae     movq    R11, [R15 + #56 (8-bit)]	# long
2b2     decode_heap_oop RDI,R10
2de     testq   R11, R11
2e1     je     B36  P=0.001000 C=-1.000000

2e7     B29: #	out( B20 ) &lt;- in( B28 )  Freq: 4.27438e-05
2e7     # TLS is in R15
2e7     movq    R10, [R15 + #72 (8-bit)]	# ptr
2eb     movq    [R10 + #-8 + R11], RDI	# ptr
2f0     addq    R11, #-8	# long
2f4     # TLS is in R15
2f4     movq    [R15 + #56 (8-bit)], R11	# long
2f8     jmp     B20

2fd     B30: #	out( B39 B31 ) &lt;- in( B13 B14 )  Freq: 8.64554e-06
2fd     movq    [rsp + #24], RCX	# spill
302     movq    [rsp + #16], R8	# spill
307     movl    [rsp + #12], R10	# spill
30c     movl    [rsp + #8], R11	# spill
311     movq    [rsp + #0], RSI	# spill
315     movq    RSI, precise klass [B: 0x0000000122713a90:Constant:exact *	# ptr
31f     movl    RDX, R10	# spill
        nop 	# 2 bytes pad for loops and calls
324     call,static  wrapper for: _new_array_nozero_Java
        # java.util.Arrays::copyOf @ bci:1  L[0]=rsp + #8 L[1]=rsp + #12 L[2]=_
        # java.lang.AbstractStringBuilder::ensureCapacityInternal @ bci:32  L[0]=_ L[1]=_ L[2]=_ STK[0]=rsp + #0
        # OopMap {[0]=Oop [8]=NarrowOop off=812/0x32c}

32c     B31: #	out( B16 ) &lt;- in( B30 )  Freq: 8.64537e-06
        # Block is sole successor of call
32c     movq    RBX, [rsp + #0]	# spill
330     movl    R11, [rsp + #8]	# spill
335     movl    R10, [rsp + #12]	# spill
33a     movq    R8, [rsp + #16]	# spill
33f     movq    RCX, [rsp + #24]	# spill
344     movq    R13, RAX	# spill
347     jmp     B16

34c     B32: #	out( B11 ) &lt;- in( B9 )  Freq: 8.67107e-08
34c     movslq  R8, R10	# i2l
34f     jmp     B11

354     B33: #	out( B19 ) &lt;- in( B16 )  Freq: 8.67106e-08
354     addq    R8, #-2	# long
358     movq    RCX, R8	# spill
35b     movq    RDI, R9	# spill
35e     xorq    rax, rax	# ClearArray:
	cmp     InitArrayShortSize,rcx
	jg      LARGE
	dec     rcx
	js      DONE	# Zero length
	mov     rax,(rdi,rcx,8)	# LOOP
	dec     rcx
	jge     LOOP
	jmp     DONE
	# LARGE:
	shlq    rcx,3	# Convert doublewords to bytes
	rep     stosb	# Store rax to *rdi++ while rcx--
	# DONE
37e     
37e     jmp     B19

383     B34: #	out( N470 ) &lt;- in( B11 B12 )  Freq: 1.71149e-07
383     movl    RSI, #-52	# int
388     movq    RBP, RBX	# spill
38b     movl    [rsp + #0], R11	# spill
38f     movl    [rsp + #8], R10	# spill
394     call,static  wrapper for: uncommon_trap(reason=&apos;intrinsic_or_type_checked_inlining&apos; action=&apos;make_not_entrant&apos; debug_id=&apos;0&apos;)
        # java.util.Arrays::copyOf @ bci:1  L[0]=rsp + #0 L[1]=rsp + #8 L[2]=_ STK[0]=rsp + #8
        # java.lang.AbstractStringBuilder::ensureCapacityInternal @ bci:32  L[0]=_ L[1]=_ L[2]=_ STK[0]=RBP
        # OopMap {rbp=Oop [0]=NarrowOop off=924/0x39c}
39c     ud2	# ShouldNotReachHere

3b0     B35: #	out( N470 ) &lt;- in( B7 )  Freq: 4.27872e-08
3b0     movl    RSI, #-187	# int
3b5     movq    [rsp + #8], RBX	# spill
3ba     movl    [rsp + #16], R11	# spill
3bf     movq    [rsp + #24], RBX	# spill
3c4     movl    [rsp + #20], RDX	# spill
3c8     movl    [rsp + #36], R10	# spill
        nop 	# 3 bytes pad for loops and calls
3d0     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.lang.AbstractStringBuilder::newCapacity @ bci:35  L[0]=rsp + #8 L[1]=rsp + #20 L[2]=_ L[3]=rsp + #36 L[4]=RBP STK[0]=rsp + #36
        # java.lang.AbstractStringBuilder::ensureCapacityInternal @ bci:24  L[0]=rsp + #8 L[1]=_ L[2]=_ STK[0]=rsp + #24 STK[1]=rsp + #16
        # OopMap {[8]=Oop [16]=NarrowOop [24]=Oop off=984/0x3d8}
3d8     ud2	# ShouldNotReachHere

3ec     B36: #	out( B20 ) &lt;- in( B28 )  Freq: 4.2786e-08
3ec     # TLS is in R15
3ec     movq    RSI, R15	# spill
3ef     call_leaf,runtime  write_ref_field_pre_entry
        No JVM State Info
        # 
3ff     jmp     B20

404     B37: #	out( N470 ) &lt;- in( B8 )  Freq: 4.08051e-08
404     movl    RSI, #-187	# int
409     movq    [rsp + #8], RBX	# spill
40e     movl    [rsp + #16], R11	# spill
413     movq    [rsp + #24], RBX	# spill
418     movl    [rsp + #20], RDX	# spill
41c     movl    [rsp + #32], R10	# spill
        nop 	# 3 bytes pad for loops and calls
424     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.lang.AbstractStringBuilder::newCapacity @ bci:42  L[0]=rsp + #8 L[1]=rsp + #20 L[2]=_ L[3]=rsp + #32 L[4]=_ STK[0]=RBP
        # java.lang.AbstractStringBuilder::ensureCapacityInternal @ bci:24  L[0]=rsp + #8 L[1]=_ L[2]=_ STK[0]=rsp + #24 STK[1]=rsp + #16
        # OopMap {[8]=Oop [16]=NarrowOop [24]=Oop off=1068/0x42c}
42c     ud2	# ShouldNotReachHere

440     B38: #	out( N470 ) &lt;- in( B1 )  Freq: 1.01328e-06
440     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
448     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.AbstractStringBuilder::ensureCapacityInternal @ bci:4  L[0]=_ L[1]=_ L[2]=_ STK[0]=#NULL
        # OopMap {off=1104/0x450}
450     ud2	# ShouldNotReachHere

464     B39: #	out( N470 ) &lt;- in( B30 )  Freq: 8.64554e-11
464     # exception oop is in rax; no code emitted
464     movq    RSI, RAX	# spill
467     vzeroupper
	addq    rsp, 64	# Destroy frame
	popq    rbp

46f     jmp     rethrow_stub

--------------------------------------------------------------------------------
</opto_assembly>
<writer thread='39171'/>

============================= C2-compiled nmethod ==============================
<opto_assembly compile_id='187'>
----------------------- MetaData before Compile_id = 187 ------------------------
{method}
 - this oop:          0x0000000121f053d8
 - method holder:     &apos;java/lang/StringLatin1&apos;
 - constants:         0x0000000121f02920 constant pool [372] {0x0000000121f02920} for &apos;java/lang/StringLatin1&apos; cache=0x0000000121f072b0
 - access:            0xc1000009  public static 
 - name:              &apos;replace&apos;
 - signature:         &apos;([BCC)Ljava/lang/String;&apos;
 - max stack:         6
 - max locals:        7
 - size of params:    3
 - method size:       13
 - highest level:     3
 - vtable index:      -2
 - i2i entry:         0x0000000105ef3de0
 - adapters:          AHE@0x00007f850a00f9f0: 0xbaa00000 i2c: 0x0000000105f3ad60 c2i: 0x0000000105f3ae49 c2iUV: 0x0000000105f3ae10 c2iNCI: 0x0000000105f3ae86
 - compiled entry     0x000000010663e020
 - code size:         198
 - code start:        0x0000000121f05270
 - code end (excl):   0x0000000121f05336
 - method data:       0x00000001221eea40
 - checked ex length: 0
 - linenumber start:  0x0000000121f05336
 - localvar length:   10
 - localvar start:    0x0000000121f0535e
 - compiled code: nmethod   1525   74       3       java.lang.StringLatin1::replace (198 bytes)

------------------------ OptoAssembly for Compile_id = 187 -----------------------
#
#  java/lang/String:exact * ( byte[int:&gt;=0]:exact *, int, int )
#
#r018 rsi:rsi   : parm 0: byte[int:&gt;=0]:exact *
#r016 rdx   : parm 1: int
#r010 rcx   : parm 2: int
# -- Old rsp -- Framesize: 64 --
#r583 rsp+60: in_preserve
#r582 rsp+56: return address
#r581 rsp+52: in_preserve
#r580 rsp+48: saved fp register
#r579 rsp+44: pad2, stack alignment
#r578 rsp+40: pad2, stack alignment
#r577 rsp+36: Fixed slot 1
#r576 rsp+32: Fixed slot 0
#r591 rsp+28: spill
#r590 rsp+24: spill
#r589 rsp+20: spill
#r588 rsp+16: spill
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N1: #	out( B1 ) &lt;- in( B76 B78 B72 B65 B73 B81 B77 B75 )  Freq: 1

000     B1: #	out( B76 B2 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
000     # stack bang (408 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #48	# Create frame

00c     movl    [rsp + #12], RCX	# spill
010     movq    R10, RSI	# spill
013     movl    [rsp + #8], RDX	# spill
017     movl    RBP, RDX	# spill
019     shrl    RBP, #8
01c     testl   RBP, RBP
01e     jne     B76  P=0.000000 C=11294.000000

024     B2: #	out( B78 B3 ) &lt;- in( B1 )  Freq: 1
024     movq    RBX, RSI	# spill
027     movl    R14, [RSI + #12 (8-bit)]	# range
02b     NullCheck RSI

02b     B3: #	out( B45 B4 ) &lt;- in( B2 )  Freq: 0.999999
02b     testl   R14, R14	# unsigned
02e     jbe,u   B45  P=0.005204 C=5380.000000

034     B4: #	out( B72 B5 ) &lt;- in( B3 )  Freq: 0.994794
034     movl    R8, R14	# spill
037     decl    R8	# int
03a     cmpl    R8, R14	# unsigned
03d     jnb,u   B72  P=0.000001 C=-1.000000

043     B5: #	out( B32 B6 ) &lt;- in( B4 )  Freq: 0.994793
043     movsbl  R10, [RSI + #16 (8-bit)]	# byte
048     movl    RCX, R14	# spill
04b     addl    RCX, #-3	# int
04e     movsbl  RDI, RDX	# i2b
051     cmpl    R10, RDI
054     jne     B32  P=0.784006 C=5352.000000

05a     B6: #	out( B8 ) &lt;- in( B5 )  Freq: 0.214869
05a     xorl    R10, R10	# int
05d     movl    RDX, #1	# int
062     jmp,s   B8

064     B7: #	out( B8 ) &lt;- in( B35 )  Freq: 0.211603
064     incl    R10	# int

067     B8: #	out( B45 B9 ) &lt;- in( B43 B6 B34 B37 B7 B39 )  Freq: 0.992772
067     cmpl    R10, R14
06a     jge     B45  P=0.023649 C=1184.000000

070     B9: #	out( B77 B10 ) &lt;- in( B8 )  Freq: 0.969294
070     movl    RBP, [rsp + #12]	# spill
074     shrl    RBP, #8
077     testl   RBP, RBP
079     jne     B77  P=0.000000 C=11294.000000

07f     B10: #	out( B68 B11 ) &lt;- in( B9 )  Freq: 0.969294
07f     cmpl    R14, #1048576	# unsigned
086     jnbe,u   B68  P=0.000001 C=-1.000000

08c     B11: #	out( B68 B12 ) &lt;- in( B10 )  Freq: 0.969293
08c     # TLS is in R15
08c     movq    RBP, [R15 + #320 (32-bit)]	# ptr
093     movslq  R11, R14	# i2l
096     addq    R11, #23	# long
09a     andq    R11, #-8	# long
09e     movq    R9, RBP	# spill
0a1     addq    R9, R11	# ptr
0a4     # TLS is in R15
0a4     cmpq    R9, [R15 + #336 (32-bit)]	# raw ptr
0ab     jnb,u   B68  P=0.000100 C=-1.000000

0b1     B12: #	out( B13 ) &lt;- in( B11 )  Freq: 0.969196
0b1     # TLS is in R15
0b1     movq    [R15 + #320 (32-bit)], R9	# ptr
0b8     PREFETCHW [R9 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
0c0     movq    [RBP], #1	# long
0c8     PREFETCHW [R9 + #256 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
0d0     movl    [RBP + #8 (8-bit)], narrowklass: precise klass [B: 0x0000000122713a90:Constant:exact *	# compressed klass ptr
0d7     movl    [RBP + #12 (8-bit)], R14	# int
0db     PREFETCHW [R9 + #320 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
0e3     PREFETCHW [R9 + #384 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified

0eb     B13: #	out( B24 B14 ) &lt;- in( B69 B12 )  Freq: 0.969294
0eb     
0eb     MEMBAR-storestore (empty encoding)
0eb     # checkcastPP of RBP
0eb     testl   R10, R10
0ee     jle     B24  P=0.229183 C=5044.000000

0f4     B14: #	out( B75 B15 ) &lt;- in( B13 )  Freq: 0.747148
0f4     movl    R11, R10	# spill
0f7     decl    R11	# int
0fa     cmpl    R11, R14	# unsigned
0fd     jnb,u   B75  P=0.000001 C=-1.000000

103     B15: #	out( B75 B16 ) &lt;- in( B14 )  Freq: 0.747147
103     testl   R14, R14	# unsigned
106     jbe,u   B75  P=0.000001 C=-1.000000

10c     B16: #	out( B21 B17 ) &lt;- in( B15 )  Freq: 0.747146
10c     movsbl  RSI, [RBX + #16 (8-bit)]	# byte
110     movb    [RBP + #16 (8-bit)], RSI	# byte
114     cmpl    R11, #1
118     jle,s   B21  P=0.000001 C=-1.000000

11a     B17: #	out( B18 ) &lt;- in( B16 )  Freq: 0.747146
11a     movl    R9, #2000	# int

120     B18: #	out( B19 ) &lt;- in( B17 B20 ) Loop( B18-B20 ) Freq: 3.26004
120     movl    RSI, R10	# spill
123     subl    RSI, RDX	# int
125     decl    RSI	# int
127     cmpl    R9, RSI
12a     movl    RAX, #2000	# int
12f     cmovlgt RAX, RSI	# min
132     addl    RAX, RDX	# int
        nop 	# 12 bytes pad for loops and calls

140     B19: #	out( B19 B20 ) &lt;- in( B18 B19 ) Loop( B19-B19 inner main of N269 strip mined) Freq: 14.2246
140     movslq  R13, RDX	# i2l
143     movsbl  RSI, [RBX + #16 + R13]	# byte
149     movb    [RBP + #16 + R13], RSI	# byte
14e     movsbl  RSI, [RBX + #17 + R13]	# byte
154     movb    [RBP + #17 + R13], RSI	# byte
159     addl    RDX, #2	# int
15c     cmpl    RDX, RAX
15e     jl,s   B19	# loop end  P=0.770817 C=3888.000000

160     B20: #	out( B18 B21 ) &lt;- in( B19 )  Freq: 3.26004
160     # TLS is in R15
160     movq    RSI, [R15 + #296 (32-bit)]	# ptr
167     testl   rax, [RSI]	# Safepoint: poll for GC        # java.lang.StringLatin1::replace @ bci:76  L[0]=RBX L[1]=rsp + #8 L[2]=rsp + #12 L[3]=R14 L[4]=R10 L[5]=RBP L[6]=RDX
        # OopMap {rbx=Oop rbp=Oop off=359/0x167}
169     cmpl    RDX, R11
16c     jl,s   B18  P=0.770817 C=3888.000000

16e     B21: #	out( B24 B22 ) &lt;- in( B16 B20 )  Freq: 0.747146
16e     cmpl    RDX, R10
171     jge,s   B24  P=0.500000 C=-1.000000

173     B22: #	out( B23 ) &lt;- in( B21 )  Freq: 0.373573
173     # castII of RDX
        nop 	# 1 bytes pad for loops and calls

174     B23: #	out( B23 B24 ) &lt;- in( B22 B23 ) Loop( B23-B23 inner post of N741) Freq: 0.747146
174     movslq  R11, RDX	# i2l
177     movsbl  R9, [RBX + #16 + R11]	# byte
17d     movb    [RBP + #16 + R11], R9	# byte
182     incl    RDX	# int
184     cmpl    RDX, R10
187     jl,s   B23	# loop end  P=0.500000 C=3888.000000

189     B24: #	out( B62 B25 ) &lt;- in( B23 B21 B13 )  Freq: 0.969292
189     cmpl    R10, R14
18c     jge     B62  P=0.032432 C=35644.000000

192     B25: #	out( B73 B26 ) &lt;- in( B24 )  Freq: 0.937856
192     cmpl    R10, R14	# unsigned
195     jnb,u   B73  P=0.000001 C=-1.000000

19b     B26: #	out( B73 B27 ) &lt;- in( B25 )  Freq: 0.937855
19b     cmpl    R8, R14	# unsigned
19e     jnb,u   B73  P=0.000001 C=-1.000000

1a4     B27: #	out( B28 ) &lt;- in( B26 )  Freq: 0.937854
1a4     movl    RDX, R10	# spill
1a7     incl    RDX	# int
1a9     movsbl  R9, [RSP + #12 (32-bit)]	# int -&gt; byte

1af     B28: #	out( B66 B29 ) &lt;- in( B27 B29 ) Loop( B28-B29 inner pre of N752) Freq: 1.87571
1af     movslq  R8, R10	# i2l
1b2     movsbl  R11, [RBX + #16 + R8]	# byte
1b8     cmpl    R11, RDI
1bb     je     B66  P=0.117490 C=34488.000000

1c1     B29: #	out( B28 B30 ) &lt;- in( B28 B66 )  Freq: 1.87571
1c1     movb    [RBP + #16 + R8], R11	# byte
1c6     incl    R10	# int
1c9     cmpl    R10, RDX
1cc     jl,s   B28	# loop end  P=0.500000 C=34488.000000

1ce     B30: #	out( B58 B31 ) &lt;- in( B29 )  Freq: 0.937854
1ce     cmpl    R10, RCX
1d1     jge     B58  P=0.000001 C=-1.000000

1d7     B31: #	out( B57 ) &lt;- in( B30 )  Freq: 0.937853
1d7     # castII of R10
1d7     movl    RDX, #4000	# int
1dc     jmp     B57

1e1     B32: #	out( B74 B33 ) &lt;- in( B5 )  Freq: 0.779924
1e1     cmpl    RCX, #1
1e4     jle     B74  P=0.000001 C=-1.000000

1ea     B33: #	out( B34 ) &lt;- in( B32 )  Freq: 0.779923
1ea     movl    R10, #1	# int
1f0     movl    RDX, #1	# int
        nop 	# 11 bytes pad for loops and calls

200     B34: #	out( B8 B35 ) &lt;- in( B33 B40 ) Loop( B34-B40 inner main of N178) Freq: 1.24957
200     movslq  R11, R10	# i2l
203     movsbl  R9, [RBX + #16 + R11]	# byte
209     cmpl    R9, RDI
20c     je     B8  P=0.215994 C=5352.000000

212     B35: #	out( B7 B36 ) &lt;- in( B34 )  Freq: 0.979671
212     movsbl  R9, [RBX + #17 + R11]	# byte
218     cmpl    R9, RDI
21b     je     B7  P=0.215994 C=5352.000000

221     B36: #	out( B38 B37 ) &lt;- in( B35 )  Freq: 0.768068
221     movsbl  RSI, [RBX + #18 + R11]	# byte
227     cmpl    RSI, RDI
229     jne,s   B38  P=0.784006 C=5352.000000

22b     B37: #	out( B8 ) &lt;- in( B36 )  Freq: 0.165898
22b     addl    R10, #2	# int
22f     jmp     B8

234     B38: #	out( B40 B39 ) &lt;- in( B36 )  Freq: 0.60217
234     movsbl  R9, [RBX + #19 + R11]	# byte
23a     cmpl    R9, RDI
23d     jne,s   B40  P=0.784006 C=5352.000000

23f     B39: #	out( B8 ) &lt;- in( B38 )  Freq: 0.130065
23f     addl    R10, #3	# int
243     jmp     B8

248     B40: #	out( B34 B41 ) &lt;- in( B38 )  Freq: 0.472105
248     addl    R10, #4	# int
24c     cmpl    R10, RCX
24f     jl,s   B34	# loop end  P=0.994796 C=5380.000000

251     B41: #	out( B45 B42 ) &lt;- in( B74 B40 )  Freq: 0.00245783
251     cmpl    R10, R14
254     jge,s   B45  P=0.500000 C=-1.000000

256     B42: #	out( B43 ) &lt;- in( B41 )  Freq: 0.00122892
256     # castII of R10
        nop 	# 2 bytes pad for loops and calls

258     B43: #	out( B8 B44 ) &lt;- in( B42 B44 ) Loop( B43-B44 inner post of N731) Freq: 0.00202125
258     movsbl  RSI, [RBX + #16 + R10]	# byte
25e     cmpl    RSI, RDI
260     je     B8  P=0.215994 C=5352.000000

266     B44: #	out( B43 B45 ) &lt;- in( B43 )  Freq: 0.00158467
266     incl    R10	# int
269     cmpl    R10, R14
26c     jl,s   B43	# loop end  P=0.500000 C=5380.000000

26e     B45: #	out( B65 ) &lt;- in( B41 B8 B3 B44 )  Freq: 0.0307034
26e     xorl    RAX, RAX	# ptr
270     jmp     B65

275     B46: #	out( B47 ) &lt;- in( B52 ) top-of-loop Freq: 104.759
275     movl    R8, R9	# spill
        nop 	# 8 bytes pad for loops and calls

280     B47: #	out( B54 B48 ) &lt;- in( B51 B46 ) top-of-loop Freq: 891.645
280     movb    [RBP + #17 + RSI], R8	# byte
285     movsbl  R11, [RBX + #18 + RSI]	# byte
28b     cmpl    R11, RDI
28e     je,s   B54  P=0.117490 C=34488.000000

290     B48: #	out( B55 B49 ) &lt;- in( B47 B54 )  Freq: 891.645
290     movb    [RBP + #18 + RSI], R11	# byte
295     movsbl  R11, [RBX + #19 + RSI]	# byte
29b     cmpl    R11, RDI
29e     je,s   B55  P=0.117490 C=34488.000000

2a0     B49: #	out( B56 B50 ) &lt;- in( B48 B55 )  Freq: 891.645
2a0     movb    [RBP + #19 + RSI], R11	# byte
2a5     addl    R10, #4	# int
2a9     cmpl    R10, RAX
2ac     jge,s   B56	# loop end  P=0.032432 C=34488.000000

2ae     B50: #	out( B53 B51 ) &lt;- in( B57 B49 ) Loop( B50-B49 inner main of N353 strip mined) Freq: 891.645
2ae     movslq  R11, R10	# i2l
2b1     movsbl  R8, [RBX + #16 + R11]	# byte
2b7     cmpl    R8, RDI
2ba     je,s   B53  P=0.117490 C=34488.000000

2bc     B51: #	out( B47 B52 ) &lt;- in( B50 B53 )  Freq: 891.645
2bc     movb    [RBP + #16 + R11], R8	# byte
2c1     movslq  RSI, R10	# i2l
2c4     movsbl  R8, [RBX + #17 + RSI]	# byte
2ca     cmpl    R8, RDI
2cd     jne,s   B47  P=0.882510 C=34488.000000

2cf     B52: #	out( B46 ) &lt;- in( B51 )  Freq: 104.759
2cf     jmp,s   B46

2d1     B53: #	out( B51 ) &lt;- in( B50 )  Freq: 104.759
2d1     movl    R8, R9	# spill
2d4     jmp,s   B51

2d6     B54: #	out( B48 ) &lt;- in( B47 )  Freq: 104.759
2d6     movl    R11, R9	# spill
2d9     jmp,s   B48

2db     B55: #	out( B49 ) &lt;- in( B48 )  Freq: 104.759
2db     movl    R11, R9	# spill
2de     jmp,s   B49

2e0     B56: #	out( B58 B57 ) &lt;- in( B49 )  Freq: 28.9177
2e0     # TLS is in R15
2e0     movq    R11, [R15 + #296 (32-bit)]	# ptr
2e7     testl   rax, [R11]	# Safepoint: poll for GC        # java.lang.StringLatin1::replace @ bci:113  L[0]=RBX L[1]=rsp + #8 L[2]=rsp + #12 L[3]=R14 L[4]=R10 L[5]=RBP L[6]=_
        # OopMap {rbx=Oop rbp=Oop off=743/0x2e7}
2ea     cmpl    R10, RCX
2ed     jge,s   B58  P=0.032432 C=34488.000000

2ef     B57: #	out( B50 ) &lt;- in( B31 B56 ) Loop( B57-B56 ) Freq: 28.9177
2ef     movl    R11, R14	# spill
2f2     subl    R11, R10	# int
2f5     addl    R11, #-3	# int
2f9     cmpl    RDX, R11
2fc     movl    RAX, #4000	# int
301     cmovlgt RAX, R11	# min
305     addl    RAX, R10	# int
308     jmp,s   B50

30a     B58: #	out( B62 B59 ) &lt;- in( B30 B56 )  Freq: 0.937854
30a     cmpl    R10, R14
30d     jge,s   B62  P=0.500000 C=-1.000000

30f     B59: #	out( B60 ) &lt;- in( B58 )  Freq: 0.468927
30f     # castII of R10
        nop 	# 1 bytes pad for loops and calls

310     B60: #	out( B67 B61 ) &lt;- in( B59 B61 ) Loop( B60-B61 inner post of N752) Freq: 0.937854
310     movslq  R11, R10	# i2l
313     movsbl  RCX, [RBX + #16 + R11]	# byte
319     cmpl    RCX, RDI
31b     je     B67  P=0.117490 C=34488.000000

321     B61: #	out( B60 B62 ) &lt;- in( B60 B67 )  Freq: 0.937854
321     movb    [RBP + #16 + R11], RCX	# byte
326     incl    R10	# int
329     cmpl    R10, R14
32c     jl,s   B60	# loop end  P=0.500000 C=34488.000000

32e     B62: #	out( B70 B63 ) &lt;- in( B61 B58 B24 )  Freq: 0.96929
32e     # TLS is in R15
32e     movq    RAX, [R15 + #320 (32-bit)]	# ptr
335     movq    R10, RAX	# spill
338     addq    R10, #24	# ptr
33c     # TLS is in R15
33c     cmpq    R10, [R15 + #336 (32-bit)]	# raw ptr
343     jnb,u   B70  P=0.000100 C=-1.000000

349     B63: #	out( B64 ) &lt;- in( B62 )  Freq: 0.969193
349     # TLS is in R15
349     movq    [R15 + #320 (32-bit)], R10	# ptr
350     PREFETCHW [R10 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
358     movl    R11, narrowklass: precise klass java/lang/String: 0x00000001226c1ca0:Constant:exact *	# compressed klass ptr
35e     decode_klass_not_null R10,R11
36b     movq    R10, [R10 + #184 (32-bit)]	# long
372     movq    [RAX], R10	# long
375     movl    [RAX + #8 (8-bit)], narrowklass: precise klass java/lang/String: 0x00000001226c1ca0:Constant:exact *	# compressed klass ptr
37c     movl    [RAX + #12 (8-bit)], #0	# int
383     movq    [RAX + #16 (8-bit)], #0	# long

38b     B64: #	out( B65 ) &lt;- in( B71 B63 )  Freq: 0.96929
38b     
38b     # checkcastPP of RAX
38b     encode_heap_oop_not_null R11,RBP
3d4     movl    [RAX + #12 (8-bit)], R11	# compressed ptr ! Field: java/lang/String.value (constant)
3d8     MEMBAR-release ! (empty encoding)
3d8     MEMBAR-release ! (empty encoding)

3d8     B65: #	out( N1 ) &lt;- in( B64 B45 )  Freq: 0.999994
3d8     addq    rsp, 48	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

3e7     ret

3e8     B66: #	out( B29 ) &lt;- in( B28 )  Freq: 0.220377
3e8     movl    R11, R9	# spill
3eb     jmp     B29

3f0     B67: #	out( B61 ) &lt;- in( B60 )  Freq: 0.110189
3f0     movl    RCX, R9	# spill
3f3     jmp     B61

3f8     B68: #	out( B79 B69 ) &lt;- in( B10 B11 )  Freq: 9.79275e-05
3f8     movl    [rsp + #28], RDX	# spill
3fc     movl    [rsp + #24], RDI	# spill
400     movl    [rsp + #20], RCX	# spill
404     movl    [rsp + #16], R8	# spill
409     movl    [rsp + #4], R10	# spill
40e     movl    [rsp + #0], R14	# spill
412     movq    RBP, RBX	# spill
415     movq    RSI, precise klass [B: 0x0000000122713a90:Constant:exact *	# ptr
41f     movl    RDX, R14	# spill
        nop 	# 1 bytes pad for loops and calls
423     call,static  wrapper for: _new_array_Java
        # jdk.internal.misc.Unsafe::allocateUninitializedArray @ bci:51  L[0]=_ L[1]=_ L[2]=_
        # java.lang.StringConcatHelper::newArray @ bci:19  L[0]=_ L[1]=_ L[2]=_ L[3]=_
        # java.lang.StringLatin1::replace @ bci:49  L[0]=RBP L[1]=rsp + #8 L[2]=rsp + #12 L[3]=rsp + #0 L[4]=rsp + #4 L[5]=_ L[6]=_
        # OopMap {rbp=Oop off=1064/0x428}

428     B69: #	out( B13 ) &lt;- in( B68 )  Freq: 9.79256e-05
        # Block is sole successor of call
428     movq    RBX, RBP	# spill
42b     movl    R14, [rsp + #0]	# spill
42f     movl    R10, [rsp + #4]	# spill
434     movq    RBP, RAX	# spill
437     movl    R8, [rsp + #16]	# spill
43c     movl    RCX, [rsp + #20]	# spill
440     movl    RDI, [rsp + #24]	# spill
444     movl    RDX, [rsp + #28]	# spill
448     jmp     B13

44d     B70: #	out( B80 B71 ) &lt;- in( B62 )  Freq: 9.69451e-05
44d     movq    RSI, precise klass java/lang/String: 0x00000001226c1ca0:Constant:exact *	# ptr
457     call,static  wrapper for: _new_instance_Java
        # java.lang.StringLatin1::replace @ bci:116  L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=RBP L[6]=_
        # OopMap {rbp=Oop off=1116/0x45c}

45c     B71: #	out( B64 ) &lt;- in( B70 )  Freq: 9.69432e-05
        # Block is sole successor of call
45c     jmp     B64

461     B72: #	out( N1 ) &lt;- in( B4 )  Freq: 1.008e-06
461     movl    RSI, #-138	# int
466     movq    RBP, R10	# spill
469     movl    [rsp + #0], RDX	# spill
46c     movl    [rsp + #4], RCX	# spill
470     movl    [rsp + #12], R14	# spill
        nop 	# 2 bytes pad for loops and calls
477     call,static  wrapper for: uncommon_trap(reason=&apos;predicate&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.StringLatin1::replace @ bci:19  L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #4 L[3]=rsp + #12 L[4]=#0 L[5]=_ L[6]=_ STK[0]=#0 STK[1]=rsp + #12
        # OopMap {rbp=Oop off=1148/0x47c}
47c     ud2	# ShouldNotReachHere

490     B73: #	out( N1 ) &lt;- in( B26 B25 )  Freq: 1.90062e-06
490     movl    RSI, #-138	# int
495     movq    [rsp + #0], RBX	# spill
499     movl    [rsp + #24], R10	# spill
49e     movl    [rsp + #28], R14	# spill
4a3     call,static  wrapper for: uncommon_trap(reason=&apos;predicate&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.StringLatin1::replace @ bci:82  L[0]=rsp + #0 L[1]=rsp + #8 L[2]=rsp + #12 L[3]=rsp + #28 L[4]=rsp + #24 L[5]=RBP L[6]=_ STK[0]=rsp + #24 STK[1]=rsp + #28
        # OopMap {rbp=Oop [0]=Oop off=1192/0x4a8}
4a8     ud2	# ShouldNotReachHere

4bc     B74: #	out( B41 ) &lt;- in( B32 )  Freq: 7.9028e-07
4bc     movl    R10, #1	# int
4c2     movl    RDX, #1	# int
4c7     jmp     B41

4cc     B75: #	out( N1 ) &lt;- in( B14 B15 )  Freq: 1.50422e-06
4cc     movl    RSI, #-138	# int
4d1     movq    [rsp + #0], RBX	# spill
4d5     movl    [rsp + #16], R14	# spill
4da     movl    [rsp + #24], R10	# spill
4df     call,static  wrapper for: uncommon_trap(reason=&apos;predicate&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.StringLatin1::replace @ bci:61  L[0]=rsp + #0 L[1]=rsp + #8 L[2]=rsp + #12 L[3]=rsp + #16 L[4]=rsp + #24 L[5]=RBP L[6]=#0 STK[0]=#0 STK[1]=rsp + #24
        # OopMap {rbp=Oop [0]=Oop off=1252/0x4e4}
4e4     ud2	# ShouldNotReachHere

4f8     B76: #	out( N1 ) &lt;- in( B1 )  Freq: 5e-07
4f8     movl    RSI, #-187	# int
4fd     movq    [rsp + #0], R10	# spill
        nop 	# 2 bytes pad for loops and calls
503     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.lang.StringLatin1::canEncode @ bci:4  L[0]=_ STK[0]=RBP
        # java.lang.StringLatin1::replace @ bci:1  L[0]=rsp + #0 L[1]=rsp + #8 L[2]=rsp + #12 L[3]=_ L[4]=_ L[5]=_ L[6]=_
        # OopMap {[0]=Oop off=1288/0x508}
508     ud2	# ShouldNotReachHere

51c     B77: #	out( N1 ) &lt;- in( B9 )  Freq: 4.84647e-07
51c     movl    RSI, #-187	# int
521     movq    [rsp + #0], RBX	# spill
525     movl    [rsp + #16], R14	# spill
52a     movl    [rsp + #20], R10	# spill
52f     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.lang.StringLatin1::canEncode @ bci:4  L[0]=_ STK[0]=RBP
        # java.lang.StringLatin1::replace @ bci:41  L[0]=rsp + #0 L[1]=rsp + #8 L[2]=rsp + #12 L[3]=rsp + #16 L[4]=rsp + #20 L[5]=_ L[6]=_
        # OopMap {[0]=Oop off=1332/0x534}
534     ud2	# ShouldNotReachHere

548     B78: #	out( N1 ) &lt;- in( B2 )  Freq: 1.01328e-06
548     movl    RSI, #-10	# int
        nop 	# 2 bytes pad for loops and calls
54f     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.StringLatin1::replace @ bci:8  L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ STK[0]=#NULL
        # OopMap {off=1364/0x554}
554     ud2	# ShouldNotReachHere

568     B79: #	out( B81 ) &lt;- in( B68 )  Freq: 9.79275e-10
568     # exception oop is in rax; no code emitted
568     movq    RSI, RAX	# spill
56b     jmp,s   B81

56d     B80: #	out( B81 ) &lt;- in( B70 )  Freq: 9.69451e-10
56d     # exception oop is in rax; no code emitted
56d     movq    RSI, RAX	# spill

570     B81: #	out( N1 ) &lt;- in( B79 B80 )  Freq: 1.94873e-09
570     addq    rsp, 48	# Destroy frame
	popq    rbp

575     jmp     rethrow_stub

--------------------------------------------------------------------------------
</opto_assembly>
<writer thread='43011'/>

============================= C2-compiled nmethod ==============================
<opto_assembly compile_id='188'>
----------------------- MetaData before Compile_id = 188 ------------------------
{method}
 - this oop:          0x0000000121d889f8
 - method holder:     &apos;java/lang/String&apos;
 - constants:         0x0000000121d82360 constant pool [1059]/operands[28] {0x0000000121d82360} for &apos;java/lang/String&apos; cache=0x0000000121ea1220
 - access:            0x81000001  public 
 - name:              &apos;hashCode&apos;
 - signature:         &apos;()I&apos;
 - max stack:         3
 - max locals:        2
 - size of params:    1
 - method size:       13
 - highest level:     3
 - vtable index:      3
 - i2i entry:         0x0000000105ef3de0
 - adapters:          AHE@0x00007f850a00f860: 0xb0000000 i2c: 0x0000000105f3bee0 c2i: 0x0000000105f3bfc3 c2iUV: 0x0000000105f3bf8a c2iNCI: 0x0000000105f3c000
 - compiled entry     0x0000000106625940
 - code size:         60
 - code start:        0x0000000121d88990
 - code end (excl):   0x0000000121d889cc
 - method data:       0x0000000122041ca0
 - checked ex length: 0
 - linenumber start:  0x0000000121d889cc
 - localvar length:   2
 - localvar start:    0x0000000121d889de
 - compiled code: nmethod   1539    5       3       java.lang.String::hashCode (60 bytes)

------------------------ OptoAssembly for Compile_id = 188 -----------------------
#
#  int ( java/lang/String:NotNull:exact * )
#
#r018 rsi:rsi   : parm 0: java/lang/String:NotNull:exact *
# -- Old rsp -- Framesize: 48 --
#r583 rsp+44: in_preserve
#r582 rsp+40: return address
#r581 rsp+36: in_preserve
#r580 rsp+32: saved fp register
#r579 rsp+28: pad2, stack alignment
#r578 rsp+24: pad2, stack alignment
#r577 rsp+20: Fixed slot 1
#r576 rsp+16: Fixed slot 0
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N289: #	out( B1 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
000     movl    rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	decode_klass_not_null rscratch1, rscratch1
	cmpq    rax, rscratch1	 # Inline cache check
	jne     SharedRuntime::_ic_miss_stub
	nop	# nops to align entry point


020     B1: #	out( B3 B2 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
020     # stack bang (272 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #32	# Create frame

02c     movq    R14, RSI	# spill
02f     movl    RAX, [RSI + #16 (8-bit)]	# int ! Field: java/lang/String.hash
032     testl   RAX, RAX
034     je,s   B3  P=0.185789 C=48722.000000

036     B2: #	out( N289 ) &lt;- in( B19 B21 B22 B1 )  Freq: 1
036     addq    rsp, 32	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

045     ret

046     B3: #	out( B22 B4 ) &lt;- in( B1 )  Freq: 0.185789
046     movzbl  R10, [RSI + #21 (8-bit)]	# ubyte ! Field: java/lang/String.hashIsZero
04b     testl   R10, R10
04e     jne     B22  P=0.005634 C=9052.000000

054     B4: #	out( B24 B5 ) &lt;- in( B3 )  Freq: 0.184742
054     movsbl  RBP, [RSI + #20 (8-bit)]	# byte ! Field: java/lang/String.coder (constant)
058     testl   RBP, RBP
05a     jne     B24  P=0.000000 C=184151.000000

060     B5: #	out( B25 B6 ) &lt;- in( B4 )  Freq: 0.184742
060     movl    R8, [RSI + #12 (8-bit)]	# compressed ptr ! Field: java/lang/String.value (constant)
064     movl    RBP, [R12 + R8 &lt;&lt; 3 + #12] (compressed oop addressing)	# range
069     NullCheck R8

069     B6: #	out( B21 B7 ) &lt;- in( B5 )  Freq: 0.184742
069     testl   RBP, RBP	# unsigned
06b     jbe,u   B21  P=0.039330 C=118104.000000

071     B7: #	out( B23 B8 ) &lt;- in( B6 )  Freq: 0.177476
071     movl    R10, RBP	# spill
074     decl    R10	# int
077     cmpl    R10, RBP	# unsigned
07a     jnb,u   B23  P=0.000001 C=-1.000000

080     B8: #	out( B14 B9 ) &lt;- in( B7 )  Freq: 0.177476
080     movzbl  R11, [R12 + R8 &lt;&lt; 3 + #16] (compressed oop addressing)	# ubyte
086     movl    RDI, RBP	# spill
088     addl    RDI, #-7	# int
08b     decode_heap_oop_not_null R9,R8
08f     movl    RDX, #1	# int
094     cmpl    RDI, #1
097     jle     B14  P=0.000001 C=-1.000000

09d     B9: #	out( B11 ) &lt;- in( B8 )  Freq: 0.177476
09d     movl    R10, R11	# spill
0a0     sall    R10, #5
0a4     subl    R10, R11	# int
0a7     # TLS is in R15
0a7     jmp,s   B11

0a9     B10: #	out( B11 ) &lt;- in( B13 ) top-of-loop Freq: 4.33502
0a9     movl    RDI, [rsp + #0]	# spill

0ac     B11: #	out( B12 ) &lt;- in( B9 B10 ) Loop( B11-B10 ) Freq: 4.5125
0ac     movl    R11, RBP	# spill
0af     subl    R11, RDX	# int
0b2     addl    R11, #-7	# int
0b6     movl    R8, #8000	# int
0bc     cmpl    R8, R11
0bf     movl    RCX, #8000	# int
0c4     cmovlgt RCX, R11	# min
0c8     addl    RCX, RDX	# int
0ca     movl    [rsp + #0], RDI	# spill
        nop 	# 3 bytes pad for loops and calls

0d0     B12: #	out( B12 B13 ) &lt;- in( B11 B12 ) Loop( B12-B12 inner main of N94 strip mined) Freq: 114.735
0d0     movslq  R11, RDX	# i2l
0d3     movzbl  RAX, [R9 + #16 + R11]	# ubyte
0d9     movzbl  RDI, [R9 + #23 + R11]	# ubyte
0df     movzbl  R8, [R9 + #17 + R11]	# ubyte
0e5     movzbl  RBX, [R9 + #22 + R11]	# ubyte
0eb     addl    R10, RAX	# int
0ee     movzbl  RAX, [R9 + #20 + R11]	# ubyte
0f4     movl    RSI, R10	# spill
0f7     sall    RSI, #5
0fa     subl    RSI, R10	# int
0fd     addl    RSI, R8	# int
100     movzbl  R8, [R9 + #19 + R11]	# ubyte
106     movl    R13, RSI	# spill
109     sall    R13, #5
10d     subl    R13, RSI	# int
110     movzbl  R10, [R9 + #18 + R11]	# ubyte
116     addl    R13, R10	# int
119     movzbl  R10, [R9 + #21 + R11]	# ubyte
11f     movl    RSI, R13	# spill
122     sall    RSI, #5
125     subl    RSI, R13	# int
128     addl    RSI, R8	# int
12b     movl    R8, RSI	# spill
12e     sall    R8, #5
132     subl    R8, RSI	# int
135     addl    R8, RAX	# int
138     movl    RSI, R8	# spill
13b     sall    RSI, #5
13e     subl    RSI, R8	# int
141     addl    RSI, R10	# int
144     movl    R10, RSI	# spill
147     sall    R10, #5
14b     subl    R10, RSI	# int
14e     addl    R10, RBX	# int
151     movl    R11, R10	# spill
154     sall    R11, #5
158     subl    R11, R10	# int
15b     addl    R11, RDI	# int
15e     movl    R10, R11	# spill
161     sall    R10, #5
165     subl    R10, R11	# int
168     addl    RDX, #8	# int
16b     cmpl    RDX, RCX
16d     jl     B12	# loop end  P=0.960670 C=113459.000000

173     B13: #	out( B10 B14 ) &lt;- in( B12 )  Freq: 4.5125
173     movq    R8, [R15 + #296 (32-bit)]	# ptr
17a     testl   rax, [R8]	# Safepoint: poll for GC        # java.lang.StringLatin1::hashCode @ bci:37  L[0]=_ L[1]=R11 L[2]=R9 L[3]=RBP L[4]=RDX L[5]=_
        # java.lang.String::hashCode @ bci:27  L[0]=R14 L[1]=_
        # OopMap {r9=Oop r14=Oop off=378/0x17a}
17d     cmpl    RDX, [RSP + #0 (32-bit)]
180     jl     B10  P=0.960670 C=113459.000000

186     B14: #	out( B20 B15 ) &lt;- in( B8 B13 )  Freq: 0.177476
186     cmpl    RDX, RBP
188     jge,s   B20  P=0.500000 C=-1.000000

18a     B15: #	out( B16 ) &lt;- in( B14 )  Freq: 0.0887378
18a     # castII of RDX

18a     B16: #	out( B18 B17 ) &lt;- in( B15 B17 ) Loop( B16-B17 inner post of N270) Freq: 0.177476
18a     movzbl  R10, [R9 + #16 + RDX]	# ubyte
190     movl    RAX, R11	# spill
193     sall    RAX, #5
196     subl    RAX, R11	# int
199     addl    RAX, R10	# int
19c     incl    RDX	# int
19e     cmpl    RDX, RBP
1a0     jge,s   B18	# loop end  P=0.500000 C=113459.000000

1a2     B17: #	out( B16 ) &lt;- in( B16 )  Freq: 0.0887378
1a2     movl    R11, RAX	# spill
1a5     jmp,s   B16

1a7     B18: #	out( B21 B19 ) &lt;- in( B16 B20 )  Freq: 0.177476
1a7     testl   RAX, RAX
1a9     je,s   B21  P=0.000111 C=9001.000000

1ab     B19: #	out( B2 ) &lt;- in( B18 )  Freq: 0.177456
1ab     movl    [R14 + #16 (8-bit)], RAX	# int ! Field: java/lang/String.hash
1af     jmp     B2

1b4     B20: #	out( B18 ) &lt;- in( B14 )  Freq: 0.0887378
1b4     movl    RAX, R11	# spill
1b7     jmp,s   B18

1b9     B21: #	out( B2 ) &lt;- in( B18 B6 )  Freq: 0.00728556
1b9     movb    [R14 + #21 (8-bit)], #1	# byte ! Field: java/lang/String.hashIsZero
1be     xorl    RAX, RAX	# int
1c0     jmp     B2

1c5     B22: #	out( B2 ) &lt;- in( B3 )  Freq: 0.00104676
1c5     xorl    RAX, RAX	# int
1c7     jmp     B2

1cc     B23: #	out( N289 ) &lt;- in( B7 )  Freq: 1.79833e-07
1cc     movl    RSI, #-138	# int
1d1     movq    [rsp + #0], R14	# spill
1d5     movl    [rsp + #8], R8	# spill
        nop 	# 1 bytes pad for loops and calls
1db     call,static  wrapper for: uncommon_trap(reason=&apos;predicate&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.StringLatin1::hashCode @ bci:13  L[0]=_ L[1]=#0 L[2]=rsp + #8 L[3]=RBP L[4]=#0 L[5]=_ STK[0]=#0 STK[1]=RBP
        # java.lang.String::hashCode @ bci:27  L[0]=rsp + #0 L[1]=_
        # OopMap {[0]=Oop [8]=NarrowOop off=480/0x1e0}
1e0     ud2	# ShouldNotReachHere

1f4     B24: #	out( N289 ) &lt;- in( B4 )  Freq: 9.2371e-08
1f4     movl    RSI, #-187	# int
1f9     movq    [rsp + #0], R14	# spill
        nop 	# 2 bytes pad for loops and calls
1ff     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.lang.String::isLatin1 @ bci:10  L[0]=_ STK[0]=RBP
        # java.lang.String::hashCode @ bci:17  L[0]=rsp + #0 L[1]=_
        # OopMap {[0]=Oop off=516/0x204}
204     ud2	# ShouldNotReachHere

218     B25: #	out( N289 ) &lt;- in( B5 )  Freq: 1.87195e-07
218     movl    RSI, #-10	# int
        nop 	# 2 bytes pad for loops and calls
21f     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.StringLatin1::hashCode @ bci:5  L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=#NULL
        # java.lang.String::hashCode @ bci:27  L[0]=_ L[1]=_
        # OopMap {off=548/0x224}
224     ud2	# ShouldNotReachHere

--------------------------------------------------------------------------------
</opto_assembly>
   1570    5       3       java.lang.String::hashCode (60 bytes)   made not entrant
                              @ 17   java.lang.String::isLatin1 (19 bytes)   inline (hot)
                              @ 27   java.lang.StringLatin1::hashCode (42 bytes)   inline (hot)
   1570  569       4       java.lang.StringLatin1::lastIndexOf (40 bytes)
<writer thread='36611'/>
   1570   36       3       java.lang.AbstractStringBuilder::ensureCapacityInternal (39 bytes)   made not entrant
                              @ 24   java.lang.AbstractStringBuilder::newCapacity (55 bytes)   inline (hot)
                              @ 32   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
   1571  570       4       java.lang.String::startsWith (138 bytes)
<writer thread='43011'/>
<writer thread='36611'/>
<writer thread='24323'/>
   1581  584       3       sun.util.locale.LocaleUtils::isUpper (18 bytes)
<writer thread='39171'/>
   1611   74       3       java.lang.StringLatin1::replace (198 bytes)   made not entrant
                              @ 1   java.lang.StringLatin1::canEncode (13 bytes)   inline (hot)
                              @ 41   java.lang.StringLatin1::canEncode (13 bytes)   inline (hot)
                              @ 49   java.lang.StringConcatHelper::newArray (26 bytes)   force inline by annotation
                                @ 19   jdk.internal.misc.Unsafe::allocateUninitializedArray (55 bytes)   inline (hot)
                                  @ 16   java.lang.Class::isPrimitive (0 bytes)   (intrinsic)
                                  @ 51   jdk.internal.misc.Unsafe::allocateUninitializedArray0 (90 bytes)   (intrinsic)
                              @ 123   java.lang.String::&lt;init&gt; (15 bytes)   inline (hot)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
   1611  577       4       jdk.internal.org.objectweb.asm.ByteVector::putUTF8 (144 bytes)
<writer thread='42755'/>
   1617  585       3       java.util.StringTokenizer::scanToken (179 bytes)
<writer thread='40963'/>
   1617  587       3       java.util.StringTokenizer::skipDelimiters (116 bytes)
                              @ 11   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='24323'/>
   1617  588       3       java.util.StringTokenizer::nextToken (92 bytes)
<writer thread='42755'/>
                              @ 22   java.lang.String::charAt (25 bytes)
                                @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='40963'/>
                              @ 44   java.lang.String::charAt (25 bytes)
<writer thread='24323'/>
                              @ 27   java.util.StringTokenizer::skipDelimiters (116 bytes)
<writer thread='40963'/>
                                @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='24323'/>
   callee is too large
                              @ 58  java/util/NoSuchElementException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='42755'/>
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)
<writer thread='24323'/>
                              @ 73   java.util.StringTokenizer::scanToken (179 bytes)   callee is too large
<writer thread='40963'/>
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)
<writer thread='24323'/>
                              @ 88   java.lang.String::substring (58 bytes)   callee is too large
<writer thread='42755'/>
                                  @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='40963'/>
                                  @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='42755'/>
                                @ 21   java.lang.StringUTF16::charAt (11 bytes)
                                  @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
<writer thread='40963'/>
                                @ 21   java.lang.StringUTF16::charAt (11 bytes)
<writer thread='42755'/>
                                    @ 2   java.lang.StringUTF16::length (5 bytes)
<writer thread='40963'/>
                                  @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
                                    @ 2   java.lang.StringUTF16::length (5 bytes)
<writer thread='42755'/>
                                    @ 5   java.lang.String::checkIndex (48 bytes)   callee is too large
<writer thread='24579'/>
   1619  586       3       java.util.StringTokenizer::hasMoreTokens (29 bytes)
<writer thread='40963'/>
                                    @ 5   java.lang.String::checkIndex (48 bytes)   callee is too large
<writer thread='39171'/>
<writer thread='42755'/>
             
<writer thread='40963'/>
             
<writer thread='24579'/>
        
<writer thread='42755'/>
        
<writer thread='40963'/>
      
<writer thread='24579'/>
           
<writer thread='42755'/>
     
<writer thread='40963'/>
           
<writer thread='42755'/>
      
<writer thread='24579'/>
  
<writer thread='40963'/>
    
<writer thread='42755'/>
  @ 7   java.lang.StringUTF16::
<writer thread='40963'/>
@ 7   java.lang.StringUTF16::getChar (60 bytes)   intrinsic
<writer thread='24579'/>
         @ 6   java.util.StringTokenizer::skipDelimiters (116 bytes)   callee is too large
<writer thread='40963'/>
                              @ 61   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (29 bytes)
                                  @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='42755'/>
getChar (60 bytes)   intrinsic
                              @ 39   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (29 bytes)
                                  @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='39171'/>
<writer thread='24323'/>
   1621  591       3       jdk.internal.org.objectweb.asm.Handler::getExceptionTableSize (10 bytes)
<writer thread='39171'/>
<writer thread='42755'/>
        
<writer thread='24579'/>
   1621  589       3       java.lang.invoke.MethodType::checkPtypes (61 bytes)
<writer thread='24323'/>
                              @ 4   jdk.internal.org.objectweb.asm.Handler::getExceptionTableLength (21 bytes)
<writer thread='42755'/>
                          @ 13   java.lang.StringLatin1::indexOf (61 bytes)   callee is too large
<writer thread='40963'/>
                     
<writer thread='39171'/>
<writer thread='40963'/>
             @ 13   java.lang.StringLatin1::indexOf (61 bytes)   callee is too large
<writer thread='39171'/>
<writer thread='42755'/>
                              
<writer thread='24579'/>
             
<writer thread='42755'/>
  
<writer thread='39171'/>
<writer thread='40963'/>
                   
<writer thread='39171'/>
<writer thread='42755'/>
  @ 25  
<writer thread='40963'/>
               
<writer thread='24579'/>
      
<writer thread='42755'/>
 java.lang.StringUTF16::
<writer thread='40963'/>
@ 25  
<writer thread='24579'/>
           @ 24   java.lang.invoke.MethodType::
<writer thread='42755'/>
indexOf
<writer thread='40963'/>
 java.lang.StringUTF16::
<writer thread='39171'/>
<writer thread='42755'/>
 (43 bytes)   callee is too large
<writer thread='40963'/>
indexOf (43 bytes)   callee is too large
<writer thread='24579'/>
checkPtype (19 bytes)
<writer thread='39171'/>
<writer thread='24579'/>
                                @ 1   java.util.Objects::requireNonNull (14 bytes)
<writer thread='42755'/>
                              @ 59   java.lang.String::codePointAt (50 bytes)   callee is too large
<writer thread='40963'/>
                              @ 81   java.lang.String::codePointAt (50 bytes)   callee is too large
<writer thread='42755'/>
                              @ 73   java.util.StringTokenizer::isDelimiter (39 bytes)   callee is too large
<writer thread='24579'/>
                                  @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='42755'/>
                              @ 84   java.lang.Character::charCount (12 bytes)
<writer thread='40963'/>
                              @ 95   java.util.StringTokenizer::isDelimiter (39 bytes)   callee is too large
<writer thread='24579'/>
                                @ 14   java.lang.invoke.MethodHandleStatics::
<writer thread='40963'/>
                              @ 106   java.lang.Character::charCount (12 bytes)
<writer thread='42755'/>
                              @ 116   java.lang.String::charAt (25 bytes)
<writer thread='24579'/>
newIllegalArgumentException (9 bytes)
<writer thread='42755'/>
                                @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='24579'/>
                                  @ 5   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
<writer thread='24323'/>
   1624  593       3       jdk.internal.ref.CleanerImpl::getCleanerImpl (13 bytes)
                              @ 4   java.util.function.Function::apply (0 bytes)   no static binding
<writer thread='42755'/>
                                @ 12   java.lang.StringLatin1::charAt (28 bytes)
<writer thread='24579'/>
                              @ 56  
<writer thread='42755'/>
                                  @ 15  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='24579'/>
 java.lang.invoke.MethodType::checkSlotCount (33 bytes)
<writer thread='42755'/>
                                @ 21   java.lang.StringUTF16::charAt (11 bytes)
<writer thread='24579'/>
                                @ 13   java.lang.StringBuilder::&lt;init&gt;
<writer thread='42755'/>
                                  @ 2   java.lang.StringUTF16::checkIndex (9 bytes)
<writer thread='24579'/>
 (7 bytes)
<writer thread='42755'/>
                                    @ 2   java.lang.StringUTF16::length (5 bytes)
<writer thread='24579'/>
                                  @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (39 bytes)   callee is too large
<writer thread='42755'/>
                                    @ 5   java.lang.String::checkIndex (48 bytes)   callee is too large
<writer thread='24323'/>
   1625  594       3       java.lang.ref.Cleaner$1::apply (9 bytes)
<writer thread='24579'/>
                                @ 18   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   callee is too large
<writer thread='42755'/>
                                  @ 7   java.lang.StringUTF16::getChar (60 bytes)   intrinsic
<writer thread='24579'/>
                                @ 22   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   callee is too large
<writer thread='24323'/>
                              @ 5   java.lang.ref.Cleaner$1::apply (5 bytes)
<writer thread='24579'/>
                                @ 25   java.lang.StringBuilder::toString (35 bytes)   callee is too large
                                @ 28   java.lang.invoke.MethodHandleStatics::newIllegalArgumentException (9 bytes)
<writer thread='42755'/>
                              @ 133   java.lang.String::indexOf (7 bytes)
<writer thread='37635'/>

============================= C2-compiled nmethod ==============================
<opto_assembly compile_id='428'>
----------------------- MetaData before Compile_id = 428 ------------------------
{method}
 - this oop:          0x0000000121f14ab8
 - method holder:     &apos;java/util/HashMap$HashIterator&apos;
 - constants:         0x0000000121f14430 constant pool [90] {0x0000000121f14430} for &apos;java/util/HashMap$HashIterator&apos; cache=0x0000000121f14c70
 - access:            0xc1000010  final 
 - name:              &apos;nextNode&apos;
 - signature:         &apos;()Ljava/util/HashMap$Node;&apos;
 - max stack:         7
 - max locals:        3
 - size of params:    1
 - method size:       13
 - highest level:     3
 - vtable index:      -2
 - i2i entry:         0x0000000105ef3de0
 - adapters:          AHE@0x00007f850a00f860: 0xb0000000 i2c: 0x0000000105f3bee0 c2i: 0x0000000105f3bfc3 c2iUV: 0x0000000105f3bf8a c2iNCI: 0x0000000105f3c000
 - compiled entry     0x0000000106655d60
 - code size:         100
 - code start:        0x0000000121f14a20
 - code end (excl):   0x0000000121f14a84
 - method data:       0x00000001222823a0
 - checked ex length: 0
 - linenumber start:  0x0000000121f14a84
 - localvar length:   3
 - localvar start:    0x0000000121f14a90
 - compiled code: nmethod   1626  131       3       java.util.HashMap$HashIterator::nextNode (100 bytes)

------------------------ OptoAssembly for Compile_id = 428 -----------------------
#
#  java/util/HashMap$Node * ( java/util/HashMap$HashIterator:NotNull * )
#
#r018 rsi:rsi   : parm 0: java/util/HashMap$HashIterator:NotNull *
# -- Old rsp -- Framesize: 80 --
#r583 rsp+76: in_preserve
#r582 rsp+72: return address
#r581 rsp+68: in_preserve
#r580 rsp+64: saved fp register
#r579 rsp+60: pad2, stack alignment
#r578 rsp+56: pad2, stack alignment
#r577 rsp+52: Fixed slot 1
#r576 rsp+48: Fixed slot 0
#r595 rsp+44: spill
#r594 rsp+40: spill
#r593 rsp+36: spill
#r592 rsp+32: spill
#r591 rsp+28: spill
#r590 rsp+24: spill
#r589 rsp+20: spill
#r588 rsp+16: spill
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N681: #	out( B1 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
000     movl    rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	decode_klass_not_null rscratch1, rscratch1
	cmpq    rax, rscratch1	 # Inline cache check
	jne     SharedRuntime::_ic_miss_stub
	nop	# nops to align entry point


020     B1: #	out( B51 B2 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
020     # stack bang (168 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #64	# Create frame

02c     movq    RBX, RSI	# spill
02f     movl    R10, [RSI + #28 (8-bit)]	# compressed ptr ! Field: java/util/HashMap$HashIterator.this$0
033     movl    R11, [R12 + R10 &lt;&lt; 3 + #24] (compressed oop addressing)	# int ! Field: java/util/HashMap.modCount
038     NullCheck R10

038     B2: #	out( B49 B3 ) &lt;- in( B1 )  Freq: 0.999999
038     movl    R10, [RSI + #20 (8-bit)]	# compressed ptr ! Field: java/util/HashMap$HashIterator.next
03c     movl    [rsp + #24], R10	# spill
041     movl    RBP, [RSI + #12 (8-bit)]	# int ! Field: java/util/HashMap$HashIterator.expectedModCount
044     cmpl    R11, RBP
047     jne     B49  P=0.000000 C=10620.000000

04d     B3: #	out( B50 B4 ) &lt;- in( B2 )  Freq: 0.999999
04d     testl   R10, R10	# compressed ptr
050     je     B50  P=0.000000 C=10620.000000

056     B4: #	out( B34 B5 ) &lt;- in( B3 )  Freq: 0.999998
056     # TLS is in R15
056     cmpb    [R15 + #48 (8-bit)], #0
05b     jne     B34  P=0.001000 C=-1.000000

061     B5: #	out( B7 B6 ) &lt;- in( B48 B36 B34 B4 )  Freq: 0.999998
061     movl    R11, [rsp + #24]	# spill
066     movl    [RBX + #24 (8-bit)], R11	# compressed ptr ! Field: java/util/HashMap$HashIterator.current
06a     movl    R10, R11	# spill
06d     decode_heap_oop_not_null R10,R10
071     movq    [rsp + #16], R10	# spill
076     movq    R10, RBX	# ptr -&gt; long
079     movq    R11, [rsp + #16]	# spill
07e     movq    R11, R11	# ptr -&gt; long
07e     xorq    R11, R10	# long
081     shrq    R11, #20
085     testq   R11, R11
088     je,s   B7  P=0.001000 C=-1.000000

08a     B6: #	out( B37 B7 ) &lt;- in( B5 )  Freq: 0.998998
08a     shrq    R10, #9
08e     movq    RDI, 0x00000001126eb000	# ptr
098     addq    RDI, R10	# ptr
09b     cmpb    [RDI], #8
09e     jne     B37  P=0.001000 C=-1.000000

0a4     B7: #	out( B31 B8 ) &lt;- in( B39 B40 B37 B6 B5 )  Freq: 0.999998
0a4     # TLS is in R15
0a4     cmpb    [R15 + #48 (8-bit)], #0
0a9     jne     B31  P=0.001000 C=-1.000000

0af     B8: #	out( B11 B9 ) &lt;- in( B47 B33 B31 B7 )  Freq: 0.999998
0af     movl    R11, [rsp + #24]	# spill
0b4     movl    RBP, [R12 + R11 &lt;&lt; 3 + #24] (compressed oop addressing)	# compressed ptr ! Field: java/util/HashMap$Node.next
0b9     movl    [RBX + #20 (8-bit)], RBP	# compressed ptr ! Field: java/util/HashMap$HashIterator.next
0bc     movq    R10, RBX	# ptr -&gt; long
0bf     decode_heap_oop R11,RBP
0eb     movq    R11, R11	# ptr -&gt; long
0eb     xorq    R11, R10	# long
0ee     shrq    R11, #20
0f2     testq   R11, R11
0f5     je,s   B11  P=0.001000 C=-1.000000

0f7     B9: #	out( B11 B10 ) &lt;- in( B8 )  Freq: 0.998998
0f7     testl   RBP, RBP	# compressed ptr
0f9     je,s   B11  P=0.001000 C=-1.000000

0fb     B10: #	out( B41 B11 ) &lt;- in( B9 )  Freq: 0.997999
0fb     shrq    R10, #9
0ff     movq    RDI, 0x00000001126eb000	# ptr
109     addq    RDI, R10	# ptr
10c     cmpb    [RDI], #8
10f     jne     B41  P=0.001000 C=-1.000000

115     B11: #	out( B23 B12 ) &lt;- in( B43 B44 B41 B10 B9 B8 )  Freq: 0.999998
115     testl   RBP, RBP	# compressed ptr
117     jne     B23  P=0.152731 C=10620.000000

11d     B12: #	out( B52 B13 ) &lt;- in( B11 )  Freq: 0.847268
11d     movl    R11, [RBX + #28 (8-bit)]	# compressed ptr ! Field: java/util/HashMap$HashIterator.this$0
121     movl    R11, [R12 + R11 &lt;&lt; 3 + #36] (compressed oop addressing)	# compressed ptr ! Field: java/util/HashMap.table
126     NullCheck R11

126     B13: #	out( B53 B14 ) &lt;- in( B12 )  Freq: 0.847267
126     movl    R13, [R12 + R11 &lt;&lt; 3 + #12] (compressed oop addressing)	# range
12b     NullCheck R11

12b     B14: #	out( B23 B15 ) &lt;- in( B13 )  Freq: 0.847266
12b     movl    RBP, [RBX + #16 (8-bit)]	# int ! Field: java/util/HashMap$HashIterator.index
12e     cmpl    RBP, R13
131     jge     B23  P=0.072904 C=31082.000000

137     B15: #	out( B16 ) &lt;- in( B14 )  Freq: 0.785497
137     decode_heap_oop_not_null R10,R11
13b     movq    [rsp + #32], R10	# spill

140     B16: #	out( B45 B17 ) &lt;- in( B15 B22 ) Loop( B16-B22 inner ) Freq: 2.71335
140     movl    R10, RBP	# spill
143     incl    R10	# int
146     movl    [RBX + #16 (8-bit)], R10	# int ! Field: java/util/HashMap$HashIterator.index
14a     cmpl    RBP, R13	# unsigned
14d     jnb,u   B45  P=0.000001 C=-1.000000

153     B17: #	out( B24 B18 ) &lt;- in( B16 )  Freq: 2.71335
153     # TLS is in R15
153     cmpb    [R15 + #48 (8-bit)], #0
158     jne     B24  P=0.001000 C=-1.000000

15e     B18: #	out( B21 B19 ) &lt;- in( B46 B26 B24 B17 )  Freq: 2.71335
15e     movq    R10, [rsp + #32]	# spill
163     movl    RBP, [R10 + #16 + RBP &lt;&lt; #2]	# compressed ptr
168     movl    [RBX + #20 (8-bit)], RBP	# compressed ptr ! Field: java/util/HashMap$HashIterator.next
16b     movq    R10, RBX	# ptr -&gt; long
16e     decode_heap_oop R14,RBP
19a     movq    R8, R14	# ptr -&gt; long
19d     xorq    R8, R10	# long
1a0     shrq    R8, #20
1a4     testq   R8, R8
1a7     je,s   B21  P=0.001000 C=-1.000000

1a9     B19: #	out( B21 B20 ) &lt;- in( B18 )  Freq: 2.71064
1a9     testl   RBP, RBP	# compressed ptr
1ab     je,s   B21  P=0.001000 C=-1.000000

1ad     B20: #	out( B27 B21 ) &lt;- in( B19 )  Freq: 2.70793
1ad     shrq    R10, #9
1b1     movq    RDI, 0x00000001126eb000	# ptr
1bb     addq    RDI, R10	# ptr
1be     cmpb    [RDI], #8
1c1     jne     B27  P=0.001000 C=-1.000000

1c7     B21: #	out( B23 B22 ) &lt;- in( B29 B30 B27 B20 B19 B18 )  Freq: 2.71335
1c7     # TLS is in R15
1c7     movq    R10, [R15 + #296 (32-bit)]	# ptr
1ce     testl   rax, [R10]	# Safepoint: poll for GC        # java.util.HashMap$HashIterator::nextNode @ bci:95  L[0]=RBX L[1]=rsp + #32 L[2]=rsp + #16 STK[0]=R14
        # OopMap {r11=NarrowOop rbx=Oop rbp=NarrowOop r14=Oop [16]=Oop [24]=NarrowOop [32]=Oop off=462/0x1ce}
1d1     testl   RBP, RBP	# compressed ptr
1d3     jne,s   B23  P=0.233620 C=28816.000000

1d5     B22: #	out( B16 B23 ) &lt;- in( B21 )  Freq: 2.07946
1d5     movl    RBP, [RBX + #16 (8-bit)]	# int ! Field: java/util/HashMap$HashIterator.index
1d8     cmpl    RBP, R13
1db     jl     B16  P=0.927096 C=31082.000000

1e1     B23: #	out( N681 ) &lt;- in( B11 B22 B21 B14 )  Freq: 0.999994
1e1     movq    RAX, [rsp + #16]	# spill
1e6     addq    rsp, 64	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

1f5     ret

1f6     B24: #	out( B18 B25 ) &lt;- in( B17 )  Freq: 0.00271332
1f6     movl    R10, [RBX + #20 (8-bit)]	# compressed ptr ! Field: java/util/HashMap$HashIterator.next
1fa     testl   R10, R10	# compressed ptr
1fd     je     B18  P=0.500000 C=-1.000000

203     B25: #	out( B46 B26 ) &lt;- in( B24 )  Freq: 0.00135666
203     # TLS is in R15
203     movq    R8, [R15 + #56 (8-bit)]	# long
207     decode_heap_oop RDI,R10
233     testq   R8, R8
236     je     B46  P=0.001000 C=-1.000000

23c     B26: #	out( B18 ) &lt;- in( B25 )  Freq: 0.0013553
23c     # TLS is in R15
23c     movq    R10, [R15 + #72 (8-bit)]	# ptr
240     movq    [R10 + #-8 + R8], RDI	# ptr
245     addq    R8, #-8	# long
249     # TLS is in R15
249     movq    [R15 + #56 (8-bit)], R8	# long
24d     jmp     B18

252     B27: #	out( B21 B28 ) &lt;- in( B20 )  Freq: 0.00270793
252     # TLS is in R15
252     movq    R10, [R15 + #120 (8-bit)]	# ptr
256     # TLS is in R15
256     movq    R8, [R15 + #104 (8-bit)]	# long
25a     lock addl [rsp + #0], 0	! membar_volatile
260     cmpb    [RDI], #0
263     je     B21  P=0.500000 C=-1.000000

269     B28: #	out( B30 B29 ) &lt;- in( B27 )  Freq: 0.00135396
269     movb    [RDI], #0	# CMS card-mark byte 0
26c     testq   R8, R8
26f     jne,s   B30  P=0.500000 C=-1.000000

271     B29: #	out( B21 ) &lt;- in( B28 )  Freq: 0.000676982
271     movl    [rsp + #4], R11	# spill
276     # TLS is in R15
276     movq    RSI, R15	# spill
279     call_leaf,runtime  write_ref_field_post_entry
        No JVM State Info
        # 
286     movl    R11, [rsp + #4]	# spill
28b     jmp     B21

290     B30: #	out( B21 ) &lt;- in( B28 )  Freq: 0.000676982
290     movq    [R10 + #-8 + R8], RDI	# ptr
295     addq    R8, #-8	# long
299     # TLS is in R15
299     movq    [R15 + #104 (8-bit)], R8	# long
29d     jmp     B21

2a2     B31: #	out( B8 B32 ) &lt;- in( B7 )  Freq: 0.000999985
2a2     movl    R11, [RBX + #20 (8-bit)]	# compressed ptr ! Field: java/util/HashMap$HashIterator.next
2a6     testl   R11, R11	# compressed ptr
2a9     je     B8  P=0.500000 C=-1.000000

2af     B32: #	out( B47 B33 ) &lt;- in( B31 )  Freq: 0.000499993
2af     # TLS is in R15
2af     movq    R10, [R15 + #56 (8-bit)]	# long
2b3     decode_heap_oop RDI,R11
2df     testq   R10, R10
2e2     je     B47  P=0.001000 C=-1.000000

2e8     B33: #	out( B8 ) &lt;- in( B32 )  Freq: 0.000499493
2e8     # TLS is in R15
2e8     movq    R11, [R15 + #72 (8-bit)]	# ptr
2ec     movq    [R11 + #-8 + R10], RDI	# ptr
2f1     addq    R10, #-8	# long
2f5     # TLS is in R15
2f5     movq    [R15 + #56 (8-bit)], R10	# long
2f9     jmp     B8

2fe     B34: #	out( B5 B35 ) &lt;- in( B4 )  Freq: 0.000999985
2fe     movl    R10, [RSI + #24 (8-bit)]	# compressed ptr ! Field: java/util/HashMap$HashIterator.current
302     testl   R10, R10	# compressed ptr
305     je     B5  P=0.500000 C=-1.000000

30b     B35: #	out( B48 B36 ) &lt;- in( B34 )  Freq: 0.000499993
30b     # TLS is in R15
30b     movq    R11, [R15 + #56 (8-bit)]	# long
30f     decode_heap_oop RDI,R10
33b     testq   R11, R11
33e     je     B48  P=0.001000 C=-1.000000

344     B36: #	out( B5 ) &lt;- in( B35 )  Freq: 0.000499493
344     # TLS is in R15
344     movq    R10, [R15 + #72 (8-bit)]	# ptr
348     movq    [R10 + #-8 + R11], RDI	# ptr
34d     addq    R11, #-8	# long
351     # TLS is in R15
351     movq    [R15 + #56 (8-bit)], R11	# long
355     jmp     B5

35a     B37: #	out( B7 B38 ) &lt;- in( B6 )  Freq: 0.000998998
35a     # TLS is in R15
35a     movq    R10, [R15 + #104 (8-bit)]	# long
35e     # TLS is in R15
35e     movq    R11, [R15 + #120 (8-bit)]	# ptr
362     lock addl [rsp + #0], 0	! membar_volatile
368     cmpb    [RDI], #0
36b     je     B7  P=0.500000 C=-1.000000

371     B38: #	out( B40 B39 ) &lt;- in( B37 )  Freq: 0.000499499
371     movb    [RDI], #0	# CMS card-mark byte 0
374     testq   R10, R10
377     jne,s   B40  P=0.500000 C=-1.000000

379     B39: #	out( B7 ) &lt;- in( B38 )  Freq: 0.00024975
379     # TLS is in R15
379     movq    RSI, R15	# spill
37c     call_leaf,runtime  write_ref_field_post_entry
        No JVM State Info
        # 
389     jmp     B7

38e     B40: #	out( B7 ) &lt;- in( B38 )  Freq: 0.00024975
38e     movq    [R11 + #-8 + R10], RDI	# ptr
393     addq    R10, #-8	# long
397     # TLS is in R15
397     movq    [R15 + #104 (8-bit)], R10	# long
39b     jmp     B7

3a0     B41: #	out( B11 B42 ) &lt;- in( B10 )  Freq: 0.000997999
3a0     # TLS is in R15
3a0     movq    R10, [R15 + #104 (8-bit)]	# long
3a4     # TLS is in R15
3a4     movq    R11, [R15 + #120 (8-bit)]	# ptr
3a8     lock addl [rsp + #0], 0	! membar_volatile
3ae     cmpb    [RDI], #0
3b1     je     B11  P=0.500000 C=-1.000000

3b7     B42: #	out( B44 B43 ) &lt;- in( B41 )  Freq: 0.000499
3b7     movb    [RDI], #0	# CMS card-mark byte 0
3ba     testq   R10, R10
3bd     jne,s   B44  P=0.500000 C=-1.000000

3bf     B43: #	out( B11 ) &lt;- in( B42 )  Freq: 0.0002495
3bf     # TLS is in R15
3bf     movq    RSI, R15	# spill
3c2     call_leaf,runtime  write_ref_field_post_entry
        No JVM State Info
        # 
3cf     jmp     B11

3d4     B44: #	out( B11 ) &lt;- in( B42 )  Freq: 0.0002495
3d4     movq    [R11 + #-8 + R10], RDI	# ptr
3d9     addq    R10, #-8	# long
3dd     # TLS is in R15
3dd     movq    [R15 + #104 (8-bit)], R10	# long
3e1     jmp     B11

3e6     B45: #	out( N681 ) &lt;- in( B16 )  Freq: 2.74939e-06
3e6     movl    RSI, #-28	# int
3eb     movl    R10, [rsp + #24]	# spill
3f0     movl    [rsp + #12], R10	# spill
3f5     movq    [rsp + #16], RBX	# spill
3fa     movl    [rsp + #24], R11	# spill
3ff     call,static  wrapper for: uncommon_trap(reason=&apos;range_check&apos; action=&apos;make_not_entrant&apos; debug_id=&apos;0&apos;)
        # java.util.HashMap$HashIterator::nextNode @ bci:90  L[0]=rsp + #16 L[1]=rsp + #24 L[2]=rsp + #12 STK[0]=rsp + #16 STK[1]=rsp + #24 STK[2]=RBP
        # OopMap {[12]=NarrowOop [16]=Oop [24]=NarrowOop off=1028/0x404}
404     ud2	# ShouldNotReachHere

418     B46: #	out( B18 ) &lt;- in( B25 )  Freq: 1.35664e-06
418     movl    [rsp + #8], R11	# spill
41d     # TLS is in R15
41d     movq    RSI, R15	# spill
420     call_leaf,runtime  write_ref_field_pre_entry
        No JVM State Info
        # 
42d     movl    R11, [rsp + #8]	# spill
432     jmp     B18

437     B47: #	out( B8 ) &lt;- in( B32 )  Freq: 4.99986e-07
437     # TLS is in R15
437     movq    RSI, R15	# spill
43a     call_leaf,runtime  write_ref_field_pre_entry
        No JVM State Info
        # 
447     jmp     B8

44c     B48: #	out( B5 ) &lt;- in( B35 )  Freq: 4.99986e-07
44c     # TLS is in R15
44c     movq    RSI, R15	# spill
44f     call_leaf,runtime  write_ref_field_pre_entry
        No JVM State Info
        # 
45c     jmp     B5

461     B49: #	out( N681 ) &lt;- in( B2 )  Freq: 4.76837e-07
461     movl    RSI, #-187	# int
466     movq    [rsp + #0], RBX	# spill
46a     movl    [rsp + #12], R11	# spill
46f     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.util.HashMap$HashIterator::nextNode @ bci:16  L[0]=rsp + #0 L[1]=_ L[2]=rsp + #24 STK[0]=rsp + #12 STK[1]=RBP
        # OopMap {[0]=Oop [24]=NarrowOop off=1140/0x474}
474     ud2	# ShouldNotReachHere

488     B50: #	out( N681 ) &lt;- in( B3 )  Freq: 4.76836e-07
488     movl    RSI, #-187	# int
48d     movq    RBP, RBX	# spill
490     movl    [rsp + #4], R10	# spill
        nop 	# 2 bytes pad for loops and calls
497     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.util.HashMap$HashIterator::nextNode @ bci:28  L[0]=RBP L[1]=_ L[2]=rsp + #4 STK[0]=rsp + #24
        # OopMap {rbp=Oop [4]=NarrowOop [24]=NarrowOop off=1180/0x49c}
49c     ud2	# ShouldNotReachHere

4b0     B51: #	out( N681 ) &lt;- in( B1 )  Freq: 1.01328e-06
4b0     movl    RSI, #-10	# int
        nop 	# 2 bytes pad for loops and calls
4b7     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.util.HashMap$HashIterator::nextNode @ bci:9  L[0]=_ L[1]=_ L[2]=_ STK[0]=#NULL
        # OopMap {off=1212/0x4bc}
4bc     ud2	# ShouldNotReachHere

4d0     B52: #	out( N681 ) &lt;- in( B12 )  Freq: 8.58518e-07
4d0     movl    RSI, #-10	# int
        nop 	# 2 bytes pad for loops and calls
4d7     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.util.HashMap$HashIterator::nextNode @ bci:60  L[0]=_ L[1]=_ L[2]=_ STK[0]=#NULL
        # OopMap {off=1244/0x4dc}
4dc     ud2	# ShouldNotReachHere

4f0     B53: #	out( N681 ) &lt;- in( B13 )  Freq: 4.04008e-07
4f0     movl    RSI, #-187	# int
4f5     movq    RBP, RBX	# spill
4f8     movl    [rsp + #8], R11	# spill
        nop 	# 2 bytes pad for loops and calls
4ff     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.util.HashMap$HashIterator::nextNode @ bci:65  L[0]=RBP L[1]=rsp + #8 L[2]=rsp + #24 STK[0]=rsp + #8
        # OopMap {rbp=Oop [8]=NarrowOop [24]=NarrowOop off=1284/0x504}
504     ud2	# ShouldNotReachHere

--------------------------------------------------------------------------------
</opto_assembly>
<writer thread='42755'/>
                                @ 3   java.lang.String::indexOf (29 bytes)
                                  @ 1   java.lang.String::isLatin1 (19 bytes)
<writer thread='24323'/>
   1632  595       3       java.lang.ref.Cleaner$1::apply (5 bytes)
<writer thread='24579'/>
                                  @ 5   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
<writer thread='42755'/>
                                  @ 13   java.lang.StringLatin1::indexOf (61 bytes)   callee is too large
                                  @ 25   java.lang.StringUTF16::indexOf (43 bytes)   callee is too large
                              @ 150   java.lang.String::codePointAt (50 bytes)   callee is too large
                              @ 164   java.util.StringTokenizer::isDelimiter (39 bytes)   callee is too large
             
<writer thread='24323'/>
   1634  592       3       java.lang.ref.SoftReference::get (29 bytes)
<writer thread='42755'/>
                 @ 172   java.lang.Character::charCount (12 bytes)
<writer thread='24323'/>
                              @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
<writer thread='40963'/>
   1637  590       1       jdk.internal.org.objectweb.asm.MethodWriter::hasAsmInstructions (5 bytes)
<writer thread='24323'/>
   1644  596       3       java.lang.invoke.MethodType::toMethodDescriptorString (28 bytes)
                              @ 17   sun.invoke.util.BytecodeDescriptor::unparseMethod (66 bytes)   callee is too large
   1682  597       1       java.util.LinkedHashMap::removeEldestEntry (2 bytes)
   1682  598       3       java.util.LinkedHashMap::newNode (23 bytes)
                              @ 9   java.util.LinkedHashMap$Entry::&lt;init&gt; (10 bytes)
                                @ 6   java.util.HashMap$Node::&lt;init&gt; (26 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='42755'/>
   1684  600       3       java.util.LinkedHashMap::linkNodeLast (33 bytes)
<writer thread='24323'/>
                              @ 17   java.util.LinkedHashMap::linkNodeLast (33 bytes)
<writer thread='40963'/>
   1684  601       3       java.util.LinkedHashMap::afterNodeInsertion (40 bytes)
<writer thread='24579'/>
   1685  599       3       java.util.LinkedHashMap$Entry::&lt;init&gt; (10 bytes)
<writer thread='40963'/>
                              @ 15   java.util.LinkedHashMap::removeEldestEntry (2 bytes)
<writer thread='24579'/>
                              @ 6   java.util.HashMap$Node::&lt;init&gt; (26 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='42755'/>
   1687  602       3       java.lang.StringLatin1::inflate (34 bytes)
<writer thread='37635'/>
   1697  131       3       java.util.HashMap$HashIterator::nextNode (100 bytes)   made not entrant
   1697  397       4       java.lang.StringBuilder::append (8 bytes)
<writer thread='43011'/>

============================= C2-compiled nmethod ==============================
<opto_assembly compile_id='569'>
----------------------- MetaData before Compile_id = 569 ------------------------
{method}
 - this oop:          0x0000000121f051d0
 - method holder:     &apos;java/lang/StringLatin1&apos;
 - constants:         0x0000000121f02920 constant pool [372] {0x0000000121f02920} for &apos;java/lang/StringLatin1&apos; cache=0x0000000121f072b0
 - access:            0xc1000009  public static 
 - name:              &apos;lastIndexOf&apos;
 - signature:         &apos;([BII)I&apos;
 - max stack:         4
 - max locals:        4
 - size of params:    3
 - method size:       13
 - highest level:     3
 - vtable index:      -2
 - i2i entry:         0x0000000105ef3de0
 - adapters:          AHE@0x00007f850a00f9f0: 0xbaa00000 i2c: 0x0000000105f3ad60 c2i: 0x0000000105f3ae49 c2iUV: 0x0000000105f3ae10 c2iNCI: 0x0000000105f3ae86
 - compiled entry     0x0000000106645680
 - code size:         40
 - code start:        0x0000000121f05168
 - code end (excl):   0x0000000121f05190
 - method data:       0x0000000122230c78
 - checked ex length: 0
 - linenumber start:  0x0000000121f05190
 - localvar length:   4
 - localvar start:    0x0000000121f0519e
 - compiled code: nmethod   1768   90       3       java.lang.StringLatin1::lastIndexOf (40 bytes)

------------------------ OptoAssembly for Compile_id = 569 -----------------------
#
#  int ( byte[int:&gt;=0]:exact *, int, int )
#
#r018 rsi:rsi   : parm 0: byte[int:&gt;=0]:exact *
#r016 rdx   : parm 1: int
#r010 rcx   : parm 2: int
# -- Old rsp -- Framesize: 48 --
#r583 rsp+44: in_preserve
#r582 rsp+40: return address
#r581 rsp+36: in_preserve
#r580 rsp+32: saved fp register
#r579 rsp+28: pad2, stack alignment
#r578 rsp+24: pad2, stack alignment
#r577 rsp+20: Fixed slot 1
#r576 rsp+16: Fixed slot 0
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N1: #	out( B1 ) &lt;- in( B36 B37 B35 B28 )  Freq: 1

000     B1: #	out( B36 B2 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
000     # stack bang (240 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #32	# Create frame

00c     movl    RBP, RDX	# spill
00e     shrl    RBP, #8
011     testl   RBP, RBP
013     jne     B36  P=0.000000 C=33607.000000

019     B2: #	out( B37 B3 ) &lt;- in( B1 )  Freq: 1
019     movl    R11, [RSI + #12 (8-bit)]	# range
01d     NullCheck RSI

01d     B3: #	out( B26 B4 ) &lt;- in( B2 )  Freq: 0.999999
01d     movl    RAX, R11	# spill
020     decl    RAX	# int
022     cmpl    RCX, RAX
024     cmovll RAX, RCX	# signed, int
027     testl   RAX, RAX
029     jl     B26  P=0.000876 C=43355.000000

02f     B4: #	out( B35 B5 ) &lt;- in( B3 )  Freq: 0.999122
02f     testl   R11, R11	# unsigned
032     jbe,u   B35  P=0.000001 C=-1.000000

038     B5: #	out( B35 B6 ) &lt;- in( B4 )  Freq: 0.999121
038     cmpl    RAX, R11	# unsigned
03b     jnb,u   B35  P=0.000001 C=-1.000000

041     B6: #	out( B7 ) &lt;- in( B5 )  Freq: 0.99912
041     movl    R10, RAX	# spill
044     decl    R10	# int
047     movsbl  R9, RDX	# i2b

04b     B7: #	out( B28 B8 ) &lt;- in( B6 B8 ) Loop( B7-B8 inner pre of N206) Freq: 1.91916
04b     movsbl  R11, [RSI + #16 + RAX]	# byte
051     cmpl    R11, R9
054     je     B28  P=0.041208 C=43317.000000

05a     B8: #	out( B7 B9 ) &lt;- in( B7 )  Freq: 1.84007
05a     decl    RAX	# int
05c     cmpl    RAX, R10
05f     jg,s   B7	# loop end  P=0.500000 C=41532.000000

061     B9: #	out( B22 B10 ) &lt;- in( B8 )  Freq: 0.920036
061     cmpl    RAX, #6
064     jle     B22  P=0.000001 C=-1.000000

06a     B10: #	out( B11 ) &lt;- in( B9 )  Freq: 0.920035
06a     # castII of RAX
06a     movl    R10, #8000	# int

070     B11: #	out( B12 ) &lt;- in( B10 B21 ) Loop( B11-B21 ) Freq: 0.922048
070     movl    R11, RAX	# spill
073     addl    R11, #-6	# int
077     cmpl    R11, R10
07a     cmovlgt R11, R10	# min
07e     movl    RCX, RAX	# spill
080     subl    RCX, R11	# int

083     B12: #	out( B28 B13 ) &lt;- in( B11 B20 ) Loop( B12-B20 inner main of N124 strip mined) Freq: 3.2187
083     movslq  R8, RAX	# i2l
086     movsbl  R11, [RSI + #16 + R8]	# byte
08c     cmpl    R11, R9
08f     je     B28  P=0.041208 C=43317.000000

095     B13: #	out( B27 B14 ) &lt;- in( B12 )  Freq: 3.08607
095     movsbl  R11, [RSI + #15 + R8]	# byte
09b     cmpl    R11, R9
09e     je     B27  P=0.041208 C=43317.000000

0a4     B14: #	out( B29 B15 ) &lt;- in( B13 )  Freq: 2.9589
0a4     movsbl  R11, [RSI + #14 + R8]	# byte
0aa     cmpl    R11, R9
0ad     je     B29  P=0.041208 C=43317.000000

0b3     B15: #	out( B30 B16 ) &lt;- in( B14 )  Freq: 2.83697
0b3     movsbl  R11, [RSI + #13 + R8]	# byte
0b9     cmpl    R11, R9
0bc     je     B30  P=0.041208 C=43317.000000

0c2     B16: #	out( B31 B17 ) &lt;- in( B15 )  Freq: 2.72006
0c2     movsbl  R11, [RSI + #12 + R8]	# byte
0c8     cmpl    R11, R9
0cb     je,s   B31  P=0.041208 C=43317.000000

0cd     B17: #	out( B32 B18 ) &lt;- in( B16 )  Freq: 2.60797
0cd     movsbl  R11, [RSI + #11 + R8]	# byte
0d3     cmpl    R11, R9
0d6     je,s   B32  P=0.041208 C=43317.000000

0d8     B18: #	out( B33 B19 ) &lt;- in( B17 )  Freq: 2.50051
0d8     movsbl  R11, [RSI + #10 + R8]	# byte
0de     cmpl    R11, R9
0e1     je,s   B33  P=0.041208 C=43317.000000

0e3     B19: #	out( B34 B20 ) &lt;- in( B18 )  Freq: 2.39747
0e3     movsbl  R11, [RSI + #9 + R8]	# byte
0e9     cmpl    R11, R9
0ec     je,s   B34  P=0.041208 C=43317.000000

0ee     B20: #	out( B12 B21 ) &lt;- in( B19 )  Freq: 2.29867
0ee     addl    RAX, #-8	# int
0f1     cmpl    RAX, RCX
0f3     jg,s   B12	# loop end  P=0.999124 C=41532.000000

0f5     B21: #	out( B11 B22 ) &lt;- in( B20 )  Freq: 0.00201475
0f5     # TLS is in R15
0f5     movq    R11, [R15 + #296 (32-bit)]	# ptr
0fc     testl   rax, [R11]	# Safepoint: poll for GC        # java.lang.StringLatin1::lastIndexOf @ bci:35  L[0]=RSI L[1]=RDX L[2]=_ L[3]=RAX
        # OopMap {rsi=Oop off=252/0xfc}
0ff     cmpl    RAX, #6
102     jg     B11  P=0.999124 C=41532.000000

108     B22: #	out( B26 B23 ) &lt;- in( B9 B21 )  Freq: 2.69816e-06
108     cmpl    RAX, #-1
10b     jle,s   B26  P=0.500000 C=-1.000000

10d     B23: #	out( B24 ) &lt;- in( B22 )  Freq: 1.34908e-06
10d     # castII of RAX
        nop 	# 3 bytes pad for loops and calls

110     B24: #	out( B28 B25 ) &lt;- in( B23 B25 ) Loop( B24-B25 inner post of N206) Freq: 2.59137e-06
110     movsbl  R10, [RSI + #16 + RAX]	# byte
116     cmpl    R10, R9
119     je,s   B28  P=0.041208 C=43317.000000

11b     B25: #	out( B24 B26 ) &lt;- in( B24 )  Freq: 2.48459e-06
11b     decl    RAX	# int
11d     cmpl    RAX, #-1
120     jg,s   B24	# loop end  P=0.500000 C=41532.000000

122     B26: #	out( B28 ) &lt;- in( B22 B3 B25 )  Freq: 0.000879075
122     movl    RAX, #-1	# int
127     jmp,s   B28

129     B27: #	out( B28 ) &lt;- in( B13 )  Freq: 0.12717
129     decl    RAX	# int

12b     B28: #	out( N1 ) &lt;- in( B24 B7 B12 B31 B29 B33 B27 B32 B30 B34 B26 )  Freq: 0.999996
12b     addq    rsp, 32	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

13a     ret

13b     B29: #	out( B28 ) &lt;- in( B14 )  Freq: 0.12193
13b     addl    RAX, #-2	# int
13e     jmp,s   B28

140     B30: #	out( B28 ) &lt;- in( B15 )  Freq: 0.116905
140     addl    RAX, #-3	# int
143     jmp,s   B28

145     B31: #	out( B28 ) &lt;- in( B16 )  Freq: 0.112088
145     addl    RAX, #-4	# int
148     jmp,s   B28

14a     B32: #	out( B28 ) &lt;- in( B17 )  Freq: 0.107469
14a     addl    RAX, #-5	# int
14d     jmp,s   B28

14f     B33: #	out( B28 ) &lt;- in( B18 )  Freq: 0.10304
14f     addl    RAX, #-6	# int
152     jmp,s   B28

154     B34: #	out( B28 ) &lt;- in( B19 )  Freq: 0.0987944
154     addl    RAX, #-7	# int
157     jmp,s   B28

159     B35: #	out( N1 ) &lt;- in( B5 B4 )  Freq: 2.01151e-06
159     movq    RBP, RSI	# spill
15c     movl    [rsp + #4], RAX	# spill
160     movl    [rsp + #8], RDX	# spill
164     movl    RSI, #-138	# int
        nop 	# 2 bytes pad for loops and calls
16b     call,static  wrapper for: uncommon_trap(reason=&apos;predicate&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.StringLatin1::lastIndexOf @ bci:19  L[0]=RBP L[1]=rsp + #8 L[2]=_ L[3]=rsp + #4 STK[0]=rsp + #4
        # OopMap {rbp=Oop off=368/0x170}
170     ud2	# ShouldNotReachHere

184     B36: #	out( N1 ) &lt;- in( B1 )  Freq: 5e-07
184     movq    [rsp + #0], RSI	# spill
188     movl    [rsp + #8], RDX	# spill
18c     movl    [rsp + #12], RCX	# spill
190     movl    RSI, #-187	# int
        nop 	# 2 bytes pad for loops and calls
197     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.lang.StringLatin1::canEncode @ bci:4  L[0]=_ STK[0]=RBP
        # java.lang.StringLatin1::lastIndexOf @ bci:1  L[0]=rsp + #0 L[1]=rsp + #8 L[2]=rsp + #12 L[3]=_
        # OopMap {[0]=Oop off=412/0x19c}
19c     ud2	# ShouldNotReachHere

1b0     B37: #	out( N1 ) &lt;- in( B2 )  Freq: 1.01328e-06
1b0     movl    RSI, #-10	# int
        nop 	# 2 bytes pad for loops and calls
1b7     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.StringLatin1::lastIndexOf @ bci:11  L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=_ STK[1]=#NULL
        # OopMap {off=444/0x1bc}
1bc     ud2	# ShouldNotReachHere

--------------------------------------------------------------------------------
</opto_assembly>
   1795   90       3       java.lang.StringLatin1::lastIndexOf (40 bytes)   made not entrant
                              @ 1   java.lang.StringLatin1::canEncode (13 bytes)   inline (hot)
                              @ 14   java.lang.Math::min (11 bytes)   (intrinsic)
   1795  552       4       java.lang.String::coder (15 bytes)
<writer thread='39683'/>

============================= C2-compiled nmethod ==============================
<opto_assembly compile_id='517'>
----------------------- MetaData before Compile_id = 517 ------------------------
{method}
 - this oop:          0x00000001221c80d0
 - method holder:     &apos;java/util/Spliterators$IteratorSpliterator&apos;
 - constants:         0x00000001221c74a8 constant pool [132] {0x00000001221c74a8} for &apos;java/util/Spliterators$IteratorSpliterator&apos; cache=0x00000001221c83d8
 - access:            0x81000001  public 
 - name:              &apos;tryAdvance&apos;
 - signature:         &apos;(Ljava/util/function/Consumer;)Z&apos;
 - max stack:         4
 - max locals:        2
 - size of params:    2
 - method size:       13
 - highest level:     3
 - vtable index:      7
 - i2i entry:         0x0000000105ef3de0
 - adapters:          AHE@0x00007f850a00f8b0: 0xbb000000 i2c: 0x0000000105f3bb60 c2i: 0x0000000105f3bc47 c2iUV: 0x0000000105f3bc0e c2iNCI: 0x0000000105f3bc84
 - compiled entry     0x00000001066fb020
 - code size:         77
 - code start:        0x00000001221c8058
 - code end (excl):   0x00000001221c80a5
 - method data:       0x0000000122301ab0
 - checked ex length: 0
 - linenumber start:  0x00000001221c80a5
 - localvar length:   2
 - localvar start:    0x00000001221c80b4
 - compiled code: nmethod   1800  469       3       java.util.Spliterators$IteratorSpliterator::tryAdvance (77 bytes)

------------------------ OptoAssembly for Compile_id = 517 -----------------------
#
#  bool ( java/util/Spliterators$IteratorSpliterator:NotNull *, java/util/function/Consumer * )
#
#r018 rsi:rsi   : parm 0: java/util/Spliterators$IteratorSpliterator:NotNull *
#r016 rdx:rdx   : parm 1: java/util/function/Consumer *
# -- Old rsp -- Framesize: 64 --
#r583 rsp+60: in_preserve
#r582 rsp+56: return address
#r581 rsp+52: in_preserve
#r580 rsp+48: saved fp register
#r579 rsp+44: pad2, stack alignment
#r578 rsp+40: pad2, stack alignment
#r577 rsp+36: Fixed slot 1
#r576 rsp+32: Fixed slot 0
#r591 rsp+28: spill
#r590 rsp+24: spill
#r589 rsp+20: spill
#r588 rsp+16: spill
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N702: #	out( B1 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
000     movl    rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	decode_klass_not_null rscratch1, rscratch1
	cmpq    rax, rscratch1	 # Inline cache check
	jne     SharedRuntime::_ic_miss_stub
	nop	# nops to align entry point


020     B1: #	out( B74 B2 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
020     # stack bang (552 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #48	# Create frame

02c     movl    RBX, [RDX + #8 (8-bit)]	# compressed klass ptr
02f     NullCheck RDX

02f     B2: #	out( B75 B3 ) &lt;- in( B1 )  Freq: 1
02f     movl    R11, [RSI + #32 (8-bit)]	# compressed ptr ! Field: java/util/Spliterators$IteratorSpliterator.it
033     movl    RDI, [R12 + R11 &lt;&lt; 3 + #8] (compressed oop addressing)	# compressed klass ptr
038     NullCheck R11

038     B3: #	out( B44 B4 ) &lt;- in( B2 )  Freq: 0.999999
038     decode_heap_oop_not_null RCX,R11
03c     cmpl    RDI, narrowklass: precise klass java/util/ImmutableCollections$SetN$SetNIterator: 0x00000001228b52c0:Constant:exact *	# compressed klass ptr
042     jne,u   B44  P=0.016466 C=-1.000000

048     B4: #	out( B37 B5 ) &lt;- in( B3 )  Freq: 0.983533
048     movq    R10, RCX	# spill
04b     # checkcastPP of R10
04b     movl    R8, [R10 + #12 (8-bit)]	# int ! Field: java/util/ImmutableCollections$SetN$SetNIterator.remaining
04f     testl   R8, R8
052     jle     B37  P=0.043036 C=33321.000000

058     B5: #	out( B6 ) &lt;- in( B4 )  Freq: 0.941206
058     movl    R8, #1	# int

05e     B6: #	out( B36 B7 ) &lt;- in( B37 B5 B45 )  Freq: 0.999999
05e     testl   R8, R8
061     je     B36  P=0.046690 C=21161.000000

067     B7: #	out( B49 B8 ) &lt;- in( B6 )  Freq: 0.953309
067     cmpl    RDI, narrowklass: precise klass java/util/ImmutableCollections$SetN$SetNIterator: 0x00000001228b52c0:Constant:exact *	# compressed klass ptr
06d     jne,u   B49  P=0.009652 C=-1.000000

073     B8: #	out( B62 B9 ) &lt;- in( B7 )  Freq: 0.944108
073     # checkcastPP of RCX
073     movl    R10, [RCX + #12 (8-bit)]	# int ! Field: java/util/ImmutableCollections$SetN$SetNIterator.remaining
077     testl   R10, R10
07a     jle     B62  P=0.000000 C=12684.000000

080     B9: #	out( B72 B10 ) &lt;- in( B8 )  Freq: 0.944108
080     movl    R11, [RCX + #20 (8-bit)]	# compressed ptr ! Field: java/util/ImmutableCollections$SetN$SetNIterator.this$0
084     movl    R11, [R12 + R11 &lt;&lt; 3 + #16] (compressed oop addressing)	# compressed ptr ! Field: java/util/ImmutableCollections$SetN.elements (constant)
089     NullCheck R11

089     B10: #	out( B73 B11 ) &lt;- in( B9 )  Freq: 0.944107
089     movl    RDI, [R12 + R11 &lt;&lt; 3 + #12] (compressed oop addressing)	# range
08e     NullCheck R11

08e     B11: #	out( B46 B12 ) &lt;- in( B10 )  Freq: 0.944106
08e     movl    R9, [RCX + #16 (8-bit)]	# int ! Field: java/util/ImmutableCollections$SetN$SetNIterator.idx
092     incl    R9	# int
095     cmpl    R9, RDI
098     jge     B46  P=0.015857 C=24910.000000

09e     B12: #	out( B58 B13 ) &lt;- in( B11 B46 )  Freq: 0.944106
09e     movl    [RCX + #16 (8-bit)], R9	# int ! Field: java/util/ImmutableCollections$SetN$SetNIterator.idx
0a2     cmpl    R9, RDI	# unsigned
0a5     jnb,u   B58  P=0.000001 C=-1.000000

0ab     B13: #	out( B19 B14 ) &lt;- in( B12 )  Freq: 0.944105
0ab     decode_heap_oop_not_null RSI,R11
0af     movl    R9, [RSI + #16 + R9 &lt;&lt; #2]	# compressed ptr
0b4     testl   R9, R9	# compressed ptr
0b7     jne,s   B19  P=0.509664 C=24887.000000

0b9     B14: #	out( B15 ) &lt;- in( B13 )  Freq: 0.462929
0b9     # TLS is in R15
0b9     xorl    R8, R8	# int
0bc     movl    R14, #1	# int

0c2     B15: #	out( B47 B16 ) &lt;- in( B14 B17 ) Loop( B15-B17 inner ) Freq: 0.908302
0c2     movq    R9, [R15 + #296 (32-bit)]	# ptr
0c9     testl   rax, [R9]	# Safepoint: poll for GC        # java.util.ImmutableCollections$SetN$SetNIterator::next @ bci:24  L[0]=RCX L[1]=_
        # java.util.Spliterators$IteratorSpliterator::tryAdvance @ bci:63  L[0]=_ L[1]=_ STK[0]=RDX
        # OopMap {r11=NarrowOop rcx=Oop rdx=Oop rsi=Oop off=201/0xc9}
0cc     movl    R9, [RCX + #16 (8-bit)]	# int ! Field: java/util/ImmutableCollections$SetN$SetNIterator.idx
0d0     incl    R9	# int
0d3     cmpl    R9, RDI
0d6     jge     B47  P=0.015857 C=24910.000000

0dc     B16: #	out( B60 B17 ) &lt;- in( B15 B47 )  Freq: 0.908302
0dc     movl    [RCX + #16 (8-bit)], R9	# int ! Field: java/util/ImmutableCollections$SetN$SetNIterator.idx
0e0     cmpl    R9, RDI	# unsigned
0e3     jnb,u   B60  P=0.000001 C=-1.000000

0e9     B17: #	out( B15 B18 ) &lt;- in( B16 )  Freq: 0.908301
0e9     movl    RAX, [RSI + #16 + R9 &lt;&lt; #2]	# compressed ptr
0ee     testl   RAX, RAX	# compressed ptr
0f0     je,s   B15  P=0.490336 C=12203.000000

0f2     B18: #	out( B20 ) &lt;- in( B17 )  Freq: 0.462928
0f2     decode_heap_oop_not_null R11,RAX
0f6     jmp,s   B20

0f8     B19: #	out( B20 ) &lt;- in( B13 )  Freq: 0.481176
0f8     decode_heap_oop_not_null R11,R9
0fc     xorl    R8, R8	# int
0ff     movl    R14, #1	# int

105     B20: #	out( B21 ) &lt;- in( B18 B19 )  Freq: 0.944104
105     encode_heap_oop_not_null R9,R11
14e     decl    R10	# int
151     movl    [RCX + #12 (8-bit)], R10	# int ! Field: java/util/ImmutableCollections$SetN$SetNIterator.remaining

155     B21: #	out( B59 B22 ) &lt;- in( B20 B53 )  Freq: 0.953305
155     cmpl    RBX, narrowklass: precise klass java/util/stream/MatchOps$1MatchSink: 0x00000001228b5460:Constant:exact *	# compressed klass ptr
15b     jne,u   B59  P=0.000001 C=-1.000000

161     B22: #	out( B61 B23 ) &lt;- in( B21 )  Freq: 0.953304
161     # checkcastPP of RDX
161     movzbl  R11, [RDX + #12 (8-bit)]	# ubyte ! Field: java/util/stream/MatchOps$BooleanTerminalSink.stop
166     testl   R11, R11
169     jne     B61  P=0.000000 C=20046.000000

16f     B23: #	out( B68 B24 ) &lt;- in( B22 )  Freq: 0.953304
16f     movl    R11, [RDX + #20 (8-bit)]	# compressed ptr ! Field: java/util/stream/MatchOps$1MatchSink.val$predicate
173     movl    R10, [R12 + R11 &lt;&lt; 3 + #8] (compressed oop addressing)	# compressed klass ptr
178     NullCheck R11

178     B24: #	out( B54 B25 ) &lt;- in( B23 )  Freq: 0.953303
178     decode_heap_oop_not_null RSI,R11
17c     cmpl    R10, narrowklass: precise klass jdk/internal/module/IllegalAccessMaps$$Lambda$33: 0x0000000122daf0e0:Constant:exact *	# compressed klass ptr
183     jne,u   B54  P=0.006355 C=-1.000000

189     B25: #	out( B70 B26 ) &lt;- in( B24 )  Freq: 0.947244
189     # checkcastPP of RSI
189     movl    RBX, [RSI + #12 (8-bit)]	# compressed ptr ! Field: jdk/internal/module/IllegalAccessMaps$$Lambda$33.arg$1 (constant)
18c     movl    R11, [R12 + R9 &lt;&lt; 3 + #8] (compressed oop addressing)	# compressed klass ptr
191     NullCheck R9

191     B26: #	out( B67 B27 ) &lt;- in( B25 )  Freq: 0.947243
191     cmpl    R11, narrowklass: precise klass java/lang/module/ModuleDescriptor$Exports: 0x0000000122db0e30:Constant:exact *	# compressed klass ptr
198     jne,u   B67  P=0.000000 C=-1.000000

19e     B27: #	out( B71 B28 ) &lt;- in( B26 )  Freq: 0.947243
19e     decode_heap_oop_not_null R11,R9
1a2     # checkcastPP of R11
1a2     movl    R10, [R11 + #16 (8-bit)]	# compressed ptr ! Field: java/lang/module/ModuleDescriptor$Exports.source
1a6     movsbl  R9, [R12 + R10 &lt;&lt; 3 + #20] (compressed oop addressing)	# byte ! Field: java/lang/String.coder (constant)
1ac     NullCheck R10

1ac     B28: #	out( B38 B29 ) &lt;- in( B27 )  Freq: 0.947242
1ac     cmpl    R10, RBX	# compressed ptr
1af     je,u   B38  P=0.017750 C=36563.000000

1b5     B29: #	out( B33 B30 ) &lt;- in( B28 )  Freq: 0.930429
1b5     testl   RBX, RBX	# compressed ptr
1b7     je     B33  P=0.001000 C=-1.000000

1bd     B30: #	out( B63 B31 ) &lt;- in( B29 )  Freq: 0.929498
1bd     movsbl  RCX, [R12 + RBX &lt;&lt; 3 + #20] (compressed oop addressing)	# byte ! Field: java/lang/String.coder (constant)
1c3     cmpl    R9, RCX
1c6     jne     B63  P=0.000000 C=34175.000000

1cc     B31: #	out( B33 B32 ) &lt;- in( B30 )  Freq: 0.929498
1cc     movl    RBX, [R12 + RBX &lt;&lt; 3 + #12] (compressed oop addressing)	# compressed ptr ! Field: java/lang/String.value (constant)
1d1     movl    R9, [R12 + R10 &lt;&lt; 3 + #12] (compressed oop addressing)	# compressed ptr ! Field: java/lang/String.value (constant)
1d6     movl    R10, [R12 + RBX &lt;&lt; 3 + #12] (compressed oop addressing)	# range
1db     movl    RCX, [R12 + R9 &lt;&lt; 3 + #12] (compressed oop addressing)	# range
1e0     cmpl    RCX, R10
1e3     jne     B33  P=0.001000 C=-1.000000

1e9     B32: #	out( B38 B33 ) &lt;- in( B31 )  Freq: 0.928568
1e9     decode_heap_oop_not_null R10,RBX
1ed     leaq    RSI, [R12 + RBX &lt;&lt; 3 + #16] (compressed oop addressing)	# ptr compressedoopoff32
1f2     decode_heap_oop_not_null R10,R9
1f6     leaq    RDI, [R12 + R9 &lt;&lt; 3 + #16] (compressed oop addressing)	# ptr compressedoopoff32
1fb     String Equals RDI,RSI,RCX -&gt; RAX    // KILL XMM1, XMM0, RBX
2b7     testl   RAX, RAX
2b9     jne,s   B38  P=0.017055 C=16711.000000

2bb     B33: #	out( B69 B34 ) &lt;- in( B40 B29 B32 B31 B42 B43 B55 )  Freq: 0.9533
2bb     movl    R10, [RDX + #16 (8-bit)]	# compressed ptr ! Field: java/util/stream/MatchOps$1MatchSink.val$matchKind
2bf     movzbl  R9, [R12 + R10 &lt;&lt; 3 + #20] (compressed oop addressing)	# ubyte ! Field: java/util/stream/MatchOps$MatchKind.stopOnPredicateMatches
2c5     NullCheck R10

2c5     B34: #	out( B48 B35 ) &lt;- in( B33 )  Freq: 0.953299
2c5     cmpl    R8, R9
2c8     je     B48  P=0.012771 C=20046.000000

2ce     B35: #	out( N702 ) &lt;- in( B34 B48 B36 )  Freq: 0.999989
2ce     movl    RAX, R14	# spill
2d1     vzeroupper
	addq    rsp, 48	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

2e3     ret

2e4     B36: #	out( B35 ) &lt;- in( B6 )  Freq: 0.0466896
2e4     xorl    R14, R14	# int
2e7     jmp,s   B35

2e9     B37: #	out( B6 ) &lt;- in( B4 )  Freq: 0.0423273
2e9     xorl    R8, R8	# int
2ec     jmp     B6

2f1     B38: #	out( B77 B39 ) &lt;- in( B28 B32 )  Freq: 0.0326501
2f1     movl    RBP, [R11 + #20 (8-bit)]	# compressed ptr ! Field: java/lang/module/ModuleDescriptor$Exports.targets
2f5     movl    R11, [R12 + RBP &lt;&lt; 3 + #8] (compressed oop addressing)	# compressed klass ptr
2fa     NullCheck RBP

2fa     B39: #	out( B42 B40 ) &lt;- in( B38 )  Freq: 0.0326501
2fa     cmpl    R11, narrowklass: precise klass java/util/ImmutableCollections$SetN: 0x00000001233617d0:Constant:exact *	# compressed klass ptr
301     je,us  B42  P=0.641490 C=-1.000000

303     B40: #	out( B33 B41 ) &lt;- in( B39 )  Freq: 0.0117054
303     cmpl    R11, narrowklass: precise klass java/util/ImmutableCollections$Set12: 0x0000000123364ce0:Constant:exact *	# compressed klass ptr
30a     je,us  B33  P=0.999999 C=-1.000000

30c     B41: #	out( N702 ) &lt;- in( B40 )  Freq: 1.17054e-08
30c     movl    RSI, #-58	# int
311     movq    [rsp + #0], RDX	# spill
        nop 	# 3 bytes pad for loops and calls
318     call,static  wrapper for: uncommon_trap(reason=&apos;bimorphic_or_optimized_type_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.module.ModuleDescriptor$Exports::isQualified @ bci:4  L[0]=_ STK[0]=RBP
        # jdk.internal.module.IllegalAccessMaps::lambda$isExported$6 @ bci:12  L[0]=_ L[1]=_
        # jdk.internal.module.IllegalAccessMaps$$Lambda$33/0x0000000800091c40::test @ bci:8  L[0]=_ L[1]=_
        # java.util.stream.MatchOps$1MatchSink::accept @ bci:12  L[0]=rsp + #0 L[1]=_
        # java.util.Spliterators$IteratorSpliterator::tryAdvance @ bci:68  L[0]=_ L[1]=_
        # OopMap {rbp=NarrowOop [0]=Oop off=800/0x320}
320     ud2	# ShouldNotReachHere

334     B42: #	out( B33 B43 ) &lt;- in( B39 )  Freq: 0.0209447
334     decode_heap_oop_not_null R10,RBP
338     # checkcastPP of R10
338     movl    R10, [R10 + #12 (8-bit)]	# int ! Field: java/util/ImmutableCollections$SetN.size (constant)
33c     testl   R10, R10
33f     jne     B33  P=0.278169 C=284.000000

345     B43: #	out( B33 ) &lt;- in( B42 )  Freq: 0.0151185
345     movl    R8, #1	# int
34b     jmp     B33

350     B44: #	out( B64 B45 ) &lt;- in( B3 )  Freq: 0.0164656
350     cmpl    RDI, narrowklass: precise klass java/util/ImmutableCollections$Set12$1: 0x00000001228b5390:Constant:exact *	# compressed klass ptr
356     jne,u   B64  P=0.000001 C=-1.000000

35c     B45: #	out( B6 ) &lt;- in( B44 )  Freq: 0.0164656
35c     movq    R10, RCX	# spill
35f     # checkcastPP of R10
35f     movl    R9, [R10 + #12 (8-bit)]	# int ! Field: java/util/ImmutableCollections$Set12$1.idx
363     movl    R8, #1	# int
369     xorl    RSI, RSI	# int
36b     testl   R9, R9
36e     cmovlle R8, RSI	# signed, int
372     jmp     B6

377     B46: #	out( B12 ) &lt;- in( B11 )  Freq: 0.0149708
377     xorl    R9, R9	# int
37a     jmp     B12

37f     B47: #	out( B16 ) &lt;- in( B15 )  Freq: 0.014403
37f     xorl    R9, R9	# int
382     jmp     B16

387     B48: #	out( B35 ) &lt;- in( B34 )  Freq: 0.0121743
387     movb    [RDX + #12 (8-bit)], #1	# byte ! Field: java/util/stream/MatchOps$BooleanTerminalSink.stop
38b     movzbl  R11, [R12 + R10 &lt;&lt; 3 + #21] (compressed oop addressing)	# ubyte ! Field: java/util/stream/MatchOps$MatchKind.shortCircuitResult
391     movb    [RDX + #13 (8-bit)], R11	# byte ! Field: java/util/stream/MatchOps$BooleanTerminalSink.value
395     jmp     B35

39a     B49: #	out( B65 B50 ) &lt;- in( B7 )  Freq: 0.00920136
39a     cmpl    RDI, narrowklass: precise klass java/util/ImmutableCollections$Set12$1: 0x00000001228b5390:Constant:exact *	# compressed klass ptr
3a0     jne,u   B65  P=0.000001 C=-1.000000

3a6     B50: #	out( B56 B51 ) &lt;- in( B49 )  Freq: 0.00920135
3a6     # checkcastPP of RCX
3a6     movl    R11, [RCX + #12 (8-bit)]	# int ! Field: java/util/ImmutableCollections$Set12$1.idx
3aa     movl    R10, [RCX + #16 (8-bit)]	# compressed ptr ! Field: java/util/ImmutableCollections$Set12$1.this$0
3ae     cmpl    R11, #1
3b2     je,s   B56  P=0.100000 C=-1.000000

3b4     B51: #	out( B66 B52 ) &lt;- in( B50 )  Freq: 0.00828122
3b4     cmpl    R11, #2
3b8     jne     B66  P=0.000001 C=-1.000000

3be     B52: #	out( B78 B53 ) &lt;- in( B51 )  Freq: 0.00828121
3be     movl    [RCX + #12 (8-bit)], #1	# int ! Field: java/util/ImmutableCollections$Set12$1.idx
3c5     movl    R9, [R12 + R10 &lt;&lt; 3 + #16] (compressed oop addressing)	# compressed ptr ! Field: java/util/ImmutableCollections$Set12.e1 (constant)
3ca     NullCheck R10

3ca     B53: #	out( B21 ) &lt;- in( B57 B52 )  Freq: 0.00920133
3ca     xorl    R8, R8	# int
3cd     movl    R14, #1	# int
3d3     jmp     B21

3d8     B54: #	out( B76 B55 ) &lt;- in( B24 )  Freq: 0.00605851
3d8     movq    [rsp + #0], RDX	# spill
3dc     movl    RBP, R14	# spill
3df     decode_heap_oop RDX,R9
        nop 	# 3 bytes pad for loops and calls
40e     movq    rax, #Universe::non_oop_word()
	call,dynamic  java.util.function.Predicate::test
        # java.util.stream.MatchOps$1MatchSink::accept @ bci:12  L[0]=rsp + #0 L[1]=_
        # java.util.Spliterators$IteratorSpliterator::tryAdvance @ bci:68  L[0]=_ L[1]=_
        # OopMap {[0]=Oop off=1056/0x420}

420     B55: #	out( B33 ) &lt;- in( B54 )  Freq: 0.00605839
        # Block is sole successor of call
420     movl    R8, RAX	# spill
423     movl    R14, RBP	# spill
426     movq    RDX, [rsp + #0]	# spill
42a     jmp     B33

42f     B56: #	out( B79 B57 ) &lt;- in( B50 )  Freq: 0.000920135
42f     movl    [RCX + #12 (8-bit)], #0	# int ! Field: java/util/ImmutableCollections$Set12$1.idx
436     movl    R9, [R12 + R10 &lt;&lt; 3 + #12] (compressed oop addressing)	# compressed ptr ! Field: java/util/ImmutableCollections$Set12.e0 (constant)
43b     NullCheck R10

43b     B57: #	out( B53 ) &lt;- in( B56 )  Freq: 0.000920134
43b     jmp,s   B53

43d     B58: #	out( N702 ) &lt;- in( B12 )  Freq: 9.56642e-07
43d     movl    RSI, #-28	# int
442     movq    RBP, RDX	# spill
445     movq    [rsp + #0], RCX	# spill
449     movl    [rsp + #8], R11	# spill
44e     movl    [rsp + #12], R9	# spill
        nop 	# 1 bytes pad for loops and calls
454     call,static  wrapper for: uncommon_trap(reason=&apos;range_check&apos; action=&apos;make_not_entrant&apos; debug_id=&apos;0&apos;)
        # java.util.ImmutableCollections$SetN$SetNIterator::next @ bci:18  L[0]=rsp + #0 L[1]=_ STK[0]=rsp + #8 STK[1]=rsp + #12
        # java.util.Spliterators$IteratorSpliterator::tryAdvance @ bci:63  L[0]=_ L[1]=_ STK[0]=RBP
        # OopMap {rbp=Oop [0]=Oop [8]=NarrowOop off=1116/0x45c}
45c     ud2	# ShouldNotReachHere

470     B59: #	out( N702 ) &lt;- in( B21 )  Freq: 9.53305e-07
470     movl    RSI, #-34	# int
475     movq    RBP, RDX	# spill
478     movl    [rsp + #0], R9	# spill
47c     call,static  wrapper for: uncommon_trap(reason=&apos;class_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.util.Spliterators$IteratorSpliterator::tryAdvance @ bci:68  L[0]=_ L[1]=_ STK[0]=RBP STK[1]=rsp + #0
        # OopMap {rbp=Oop [0]=NarrowOop off=1156/0x484}
484     ud2	# ShouldNotReachHere

498     B60: #	out( N702 ) &lt;- in( B16 )  Freq: 9.20363e-07
498     movl    RSI, #-28	# int
49d     movq    RBP, RDX	# spill
4a0     movq    [rsp + #0], RCX	# spill
4a4     movl    [rsp + #8], R11	# spill
4a9     movl    [rsp + #12], R9	# spill
        nop 	# 2 bytes pad for loops and calls
4b0     call,static  wrapper for: uncommon_trap(reason=&apos;range_check&apos; action=&apos;make_not_entrant&apos; debug_id=&apos;0&apos;)
        # java.util.ImmutableCollections$SetN$SetNIterator::next @ bci:18  L[0]=rsp + #0 L[1]=_ STK[0]=rsp + #8 STK[1]=rsp + #12
        # java.util.Spliterators$IteratorSpliterator::tryAdvance @ bci:63  L[0]=_ L[1]=_ STK[0]=RBP
        # OopMap {rbp=Oop [0]=Oop [8]=NarrowOop off=1208/0x4b8}
4b8     ud2	# ShouldNotReachHere

4cc     B61: #	out( N702 ) &lt;- in( B22 )  Freq: 4.76652e-07
4cc     movl    RSI, #-187	# int
4d1     movq    RBP, RDX	# spill
4d4     movl    [rsp + #0], R9	# spill
4d8     movl    [rsp + #4], R11	# spill
        nop 	# 3 bytes pad for loops and calls
4e0     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.util.stream.MatchOps$1MatchSink::accept @ bci:4  L[0]=RBP L[1]=rsp + #0 STK[0]=rsp + #4
        # java.util.Spliterators$IteratorSpliterator::tryAdvance @ bci:68  L[0]=_ L[1]=_
        # OopMap {rbp=Oop [0]=NarrowOop off=1256/0x4e8}
4e8     ud2	# ShouldNotReachHere

4fc     B62: #	out( N702 ) &lt;- in( B8 )  Freq: 4.72054e-07
4fc     movl    RSI, #-187	# int
501     movq    RBP, RDX	# spill
504     movq    [rsp + #0], RCX	# spill
508     movl    [rsp + #8], R10	# spill
        nop 	# 3 bytes pad for loops and calls
510     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.util.ImmutableCollections$SetN$SetNIterator::next @ bci:4  L[0]=rsp + #0 L[1]=_ STK[0]=rsp + #8
        # java.util.Spliterators$IteratorSpliterator::tryAdvance @ bci:63  L[0]=_ L[1]=_ STK[0]=RBP
        # OopMap {rbp=Oop [0]=Oop off=1304/0x518}
518     ud2	# ShouldNotReachHere

52c     B63: #	out( N702 ) &lt;- in( B30 )  Freq: 4.64749e-07
52c     movl    RSI, #-187	# int
531     movq    RBP, RDX	# spill
534     movq    [rsp + #0], R11	# spill
538     movl    [rsp + #8], R10	# spill
53d     movl    [rsp + #12], RBX	# spill
541     movl    [rsp + #16], R9	# spill
546     movl    [rsp + #20], RCX	# spill
        nop 	# 2 bytes pad for loops and calls
54c     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.lang.String::equals @ bci:33  L[0]=rsp + #8 L[1]=_ L[2]=rsp + #12 STK[0]=rsp + #16 STK[1]=rsp + #20
        # jdk.internal.module.IllegalAccessMaps::lambda$isExported$6 @ bci:5  L[0]=_ L[1]=rsp + #0
        # jdk.internal.module.IllegalAccessMaps$$Lambda$33/0x0000000800091c40::test @ bci:8  L[0]=_ L[1]=_
        # java.util.stream.MatchOps$1MatchSink::accept @ bci:12  L[0]=RBP L[1]=_
        # java.util.Spliterators$IteratorSpliterator::tryAdvance @ bci:68  L[0]=_ L[1]=_
        # OopMap {rbp=Oop [0]=Oop [8]=NarrowOop [12]=NarrowOop off=1364/0x554}
554     ud2	# ShouldNotReachHere

568     B64: #	out( N702 ) &lt;- in( B44 )  Freq: 1.64656e-08
568     movq    RBP, RSI	# spill
56b     movq    [rsp + #0], RDX	# spill
56f     movl    [rsp + #8], R11	# spill
574     movl    RSI, #-58	# int
        nop 	# 3 bytes pad for loops and calls
57c     call,static  wrapper for: uncommon_trap(reason=&apos;bimorphic_or_optimized_type_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.util.Spliterators$IteratorSpliterator::tryAdvance @ bci:50  L[0]=RBP L[1]=rsp + #0 STK[0]=rsp + #8
        # OopMap {rbp=Oop [0]=Oop [8]=NarrowOop off=1412/0x584}
584     ud2	# ShouldNotReachHere

598     B65: #	out( N702 ) &lt;- in( B49 )  Freq: 9.20136e-09
598     movl    RSI, #-58	# int
59d     movq    RBP, RDX	# spill
5a0     movl    [rsp + #0], R11	# spill
5a4     call,static  wrapper for: uncommon_trap(reason=&apos;bimorphic_or_optimized_type_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.util.Spliterators$IteratorSpliterator::tryAdvance @ bci:63  L[0]=_ L[1]=_ STK[0]=RBP STK[1]=rsp + #0
        # OopMap {rbp=Oop [0]=NarrowOop off=1452/0x5ac}
5ac     ud2	# ShouldNotReachHere

5c0     B66: #	out( N702 ) &lt;- in( B51 )  Freq: 8.28122e-09
5c0     movl    RSI, #35	# int
5c5     movq    RBP, RDX	# spill
5c8     call,static  wrapper for: uncommon_trap(reason=&apos;unloaded&apos; action=&apos;reinterpret&apos; index=&apos;35&apos; debug_id=&apos;0&apos;)
        # java.util.ImmutableCollections$Set12$1::next @ bci:84  L[0]=_
        # java.util.Spliterators$IteratorSpliterator::tryAdvance @ bci:63  L[0]=_ L[1]=_ STK[0]=RBP
        # OopMap {rbp=Oop off=1488/0x5d0}
5d0     ud2	# ShouldNotReachHere

5e4     B67: #	out( N702 ) &lt;- in( B26 )  Freq: 1e-35
5e4     movl    RSI, #-34	# int
5e9     movq    RBP, RDX	# spill
5ec     movl    [rsp + #0], RBX	# spill
5ef     movl    [rsp + #4], R9	# spill
5f4     call,static  wrapper for: uncommon_trap(reason=&apos;class_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # jdk.internal.module.IllegalAccessMaps$$Lambda$33/0x0000000800091c40::test @ bci:5  L[0]=_ L[1]=_ STK[0]=rsp + #0 STK[1]=rsp + #4
        # java.util.stream.MatchOps$1MatchSink::accept @ bci:12  L[0]=RBP L[1]=_
        # java.util.Spliterators$IteratorSpliterator::tryAdvance @ bci:68  L[0]=_ L[1]=_
        # OopMap {rbp=Oop [0]=NarrowOop [4]=NarrowOop off=1532/0x5fc}
5fc     ud2	# ShouldNotReachHere

610     B68: #	out( N702 ) &lt;- in( B23 )  Freq: 9.65963e-07
610     movl    RSI, #-10	# int
615     movl    RBP, R9	# spill
618     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.util.stream.MatchOps$1MatchSink::accept @ bci:12  L[0]=_ L[1]=_ STK[0]=#NULL STK[1]=RBP
        # java.util.Spliterators$IteratorSpliterator::tryAdvance @ bci:68  L[0]=_ L[1]=_
        # OopMap {rbp=NarrowOop off=1568/0x620}
620     ud2	# ShouldNotReachHere

634     B69: #	out( N702 ) &lt;- in( B33 )  Freq: 9.65959e-07
634     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
63c     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.util.stream.MatchOps$1MatchSink::accept @ bci:21  L[0]=_ L[1]=_ STK[0]=_ STK[1]=#NULL
        # java.util.Spliterators$IteratorSpliterator::tryAdvance @ bci:68  L[0]=_ L[1]=_
        # OopMap {off=1604/0x644}
644     ud2	# ShouldNotReachHere

658     B70: #	out( N702 ) &lt;- in( B25 )  Freq: 9.59823e-07
658     movl    RSI, #-12	# int
65d     movq    RBP, RDX	# spill
660     movl    [rsp + #0], RBX	# spill
        nop 	# 1 bytes pad for loops and calls
664     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;make_not_entrant&apos; debug_id=&apos;0&apos;)
        # jdk.internal.module.IllegalAccessMaps$$Lambda$33/0x0000000800091c40::test @ bci:5  L[0]=_ L[1]=_ STK[0]=rsp + #0 STK[1]=#NULL
        # java.util.stream.MatchOps$1MatchSink::accept @ bci:12  L[0]=RBP L[1]=_
        # java.util.Spliterators$IteratorSpliterator::tryAdvance @ bci:68  L[0]=_ L[1]=_
        # OopMap {rbp=Oop [0]=NarrowOop off=1644/0x66c}
66c     ud2	# ShouldNotReachHere

680     B71: #	out( N702 ) &lt;- in( B27 )  Freq: 9.59822e-07
680     movl    RSI, #-10	# int
685     movl    RBP, RBX	# spill
        nop 	# 1 bytes pad for loops and calls
688     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # jdk.internal.module.IllegalAccessMaps::lambda$isExported$6 @ bci:5  L[0]=_ L[1]=_ STK[0]=#NULL STK[1]=RBP
        # jdk.internal.module.IllegalAccessMaps$$Lambda$33/0x0000000800091c40::test @ bci:8  L[0]=_ L[1]=_
        # java.util.stream.MatchOps$1MatchSink::accept @ bci:12  L[0]=_ L[1]=_
        # java.util.Spliterators$IteratorSpliterator::tryAdvance @ bci:68  L[0]=_ L[1]=_
        # OopMap {rbp=NarrowOop off=1680/0x690}
690     ud2	# ShouldNotReachHere

6a4     B72: #	out( N702 ) &lt;- in( B9 )  Freq: 9.56644e-07
6a4     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
6ac     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.util.ImmutableCollections$SetN$SetNIterator::next @ bci:11  L[0]=_ L[1]=_ STK[0]=#NULL
        # java.util.Spliterators$IteratorSpliterator::tryAdvance @ bci:63  L[0]=_ L[1]=_ STK[0]=_
        # OopMap {off=1716/0x6b4}
6b4     ud2	# ShouldNotReachHere

6c8     B73: #	out( N702 ) &lt;- in( B10 )  Freq: 9.56643e-07
6c8     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
6d0     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.util.ImmutableCollections$SetN$SetNIterator::nextIndex @ bci:22  L[0]=_ L[1]=_ STK[0]=_ STK[1]=#NULL
        # java.util.ImmutableCollections$SetN$SetNIterator::next @ bci:15  L[0]=_ L[1]=_ STK[0]=_
        # java.util.Spliterators$IteratorSpliterator::tryAdvance @ bci:63  L[0]=_ L[1]=_ STK[0]=_
        # OopMap {off=1752/0x6d8}
6d8     ud2	# ShouldNotReachHere

6ec     B74: #	out( N702 ) &lt;- in( B1 )  Freq: 4.76837e-07
6ec     movq    RBP, RSI	# spill
6ef     movq    [rsp + #8], RDX	# spill
6f4     movl    RSI, #-187	# int
        nop 	# 3 bytes pad for loops and calls
6fc     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.util.Spliterators$IteratorSpliterator::tryAdvance @ bci:1  L[0]=RBP L[1]=rsp + #8 STK[0]=rsp + #8
        # OopMap {rbp=Oop [8]=Oop off=1796/0x704}
704     ud2	# ShouldNotReachHere

718     B75: #	out( N702 ) &lt;- in( B2 )  Freq: 4.76837e-07
718     movq    RBP, RSI	# spill
71b     movq    [rsp + #0], RDX	# spill
71f     movl    [rsp + #8], R11	# spill
724     movl    RSI, #-187	# int
        nop 	# 3 bytes pad for loops and calls
72c     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.util.Spliterators$IteratorSpliterator::tryAdvance @ bci:16  L[0]=RBP L[1]=rsp + #0 STK[0]=rsp + #8
        # OopMap {rbp=Oop [0]=Oop [8]=NarrowOop off=1844/0x734}
734     ud2	# ShouldNotReachHere

748     B76: #	out( N702 ) &lt;- in( B54 )  Freq: 6.05851e-08
748     # exception oop is in rax; no code emitted
748     movq    RSI, RAX	# spill
74b     vzeroupper
	addq    rsp, 48	# Destroy frame
	popq    rbp

753     jmp     rethrow_stub

758     B77: #	out( N702 ) &lt;- in( B38 )  Freq: 3.30837e-08
758     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
760     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.module.ModuleDescriptor$Exports::isQualified @ bci:4  L[0]=_ STK[0]=#NULL
        # jdk.internal.module.IllegalAccessMaps::lambda$isExported$6 @ bci:12  L[0]=_ L[1]=_
        # jdk.internal.module.IllegalAccessMaps$$Lambda$33/0x0000000800091c40::test @ bci:8  L[0]=_ L[1]=_
        # java.util.stream.MatchOps$1MatchSink::accept @ bci:12  L[0]=_ L[1]=_
        # java.util.Spliterators$IteratorSpliterator::tryAdvance @ bci:68  L[0]=_ L[1]=_
        # OopMap {off=1896/0x768}
768     ud2	# ShouldNotReachHere

77c     B78: #	out( N702 ) &lt;- in( B52 )  Freq: 8.39117e-09
77c     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
784     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.util.ImmutableCollections$Set12$1::next @ bci:70  L[0]=_ STK[0]=#NULL
        # java.util.Spliterators$IteratorSpliterator::tryAdvance @ bci:63  L[0]=_ L[1]=_ STK[0]=_
        # OopMap {off=1932/0x78c}
78c     ud2	# ShouldNotReachHere

7a0     B79: #	out( N702 ) &lt;- in( B56 )  Freq: 9.32354e-10
7a0     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
7a8     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.util.ImmutableCollections$Set12$1::next @ bci:33  L[0]=_ STK[0]=#NULL
        # java.util.Spliterators$IteratorSpliterator::tryAdvance @ bci:63  L[0]=_ L[1]=_ STK[0]=_
        # OopMap {off=1968/0x7b0}
7b0     ud2	# ShouldNotReachHere

--------------------------------------------------------------------------------
</opto_assembly>
<writer thread='43011'/>

============================= C2-compiled nmethod ==============================
<opto_assembly compile_id='552'>
----------------------- MetaData before Compile_id = 552 ------------------------
{method}
 - this oop:          0x0000000121d8cc78
 - method holder:     &apos;java/lang/String&apos;
 - constants:         0x0000000121d82360 constant pool [1059]/operands[28] {0x0000000121d82360} for &apos;java/lang/String&apos; cache=0x0000000121ea1220
 - access:            0x81000000  
 - name:              &apos;coder&apos;
 - signature:         &apos;()B&apos;
 - max stack:         2
 - max locals:        1
 - size of params:    1
 - method size:       13
 - highest level:     3
 - vtable index:      -2
 - i2i entry:         0x0000000105ef3de0
 - adapters:          AHE@0x00007f850a00f860: 0xb0000000 i2c: 0x0000000105f3bee0 c2i: 0x0000000105f3bfc3 c2iUV: 0x0000000105f3bf8a c2iNCI: 0x0000000105f3c000
 - compiled entry     0x0000000106626160
 - code size:         15
 - code start:        0x0000000121d8cc50
 - code end (excl):   0x0000000121d8cc5f
 - method data:       0x0000000122118d28
 - checked ex length: 0
 - linenumber start:  0x0000000121d8cc5f
 - localvar length:   1
 - localvar start:    0x0000000121d8cc6a
 - compiled code: nmethod   1810    7       3       java.lang.String::coder (15 bytes)

------------------------ OptoAssembly for Compile_id = 552 -----------------------
#
#  byte ( java/lang/String:NotNull:exact * )
#
#r018 rsi:rsi   : parm 0: java/lang/String:NotNull:exact *
# -- Old rsp -- Framesize: 32 --
#r583 rsp+28: in_preserve
#r582 rsp+24: return address
#r581 rsp+20: in_preserve
#r580 rsp+16: saved fp register
#r579 rsp+12: pad2, stack alignment
#r578 rsp+ 8: pad2, stack alignment
#r577 rsp+ 4: Fixed slot 1
#r576 rsp+ 0: Fixed slot 0
#
000     N16: #	out( B1 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
000     movl    rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	decode_klass_not_null rscratch1, rscratch1
	cmpq    rax, rscratch1	 # Inline cache check
	jne     SharedRuntime::_ic_miss_stub
	nop	# nops to align entry point


020     B1: #	out( N16 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
020     # stack bang (96 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #16	# Create frame

02c     movsbl  RAX, [RSI + #20 (8-bit)]	# byte ! Field: java/lang/String.coder (constant)
030     addq    rsp, 16	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

03f     ret

--------------------------------------------------------------------------------
</opto_assembly>
   1812    7       3       java.lang.String::coder (15 bytes)   made not entrant
   1812  572 %     4       jvmLearning.chapter11.Test::doubleValue @ 2 (18 bytes)
<writer thread='36611'/>

============================= C2-compiled nmethod ==============================
<opto_assembly compile_id='570'>
----------------------- MetaData before Compile_id = 570 ------------------------
{method}
 - this oop:          0x0000000121d88758
 - method holder:     &apos;java/lang/String&apos;
 - constants:         0x0000000121d82360 constant pool [1059]/operands[28] {0x0000000121d82360} for &apos;java/lang/String&apos; cache=0x0000000121ea1220
 - access:            0xc1000001  public 
 - name:              &apos;startsWith&apos;
 - signature:         &apos;(Ljava/lang/String;I)Z&apos;
 - max stack:         4
 - max locals:        9
 - size of params:    3
 - method size:       13
 - highest level:     3
 - vtable index:      -2
 - i2i entry:         0x0000000105ef3de0
 - adapters:          AHE@0x00007f850a00fa90: 0xbba00000 i2c: 0x0000000105f3a660 c2i: 0x0000000105f3a74a c2iUV: 0x0000000105f3a711 c2iNCI: 0x0000000105f3a787
 - compiled entry     0x00000001066ad3a0
 - code size:         138
 - code start:        0x0000000121d88648
 - code end (excl):   0x0000000121d886d2
 - method data:       0x00000001222c1790
 - checked ex length: 0
 - linenumber start:  0x0000000121d886d2
 - localvar length:   9
 - localvar start:    0x0000000121d886ea
 - compiled code: nmethod   1824  328       3       java.lang.String::startsWith (138 bytes)

------------------------ OptoAssembly for Compile_id = 570 -----------------------
#
#  bool ( java/lang/String:NotNull:exact *, java/lang/String:exact *, int )
#
#r018 rsi:rsi   : parm 0: java/lang/String:NotNull:exact *
#r016 rdx:rdx   : parm 1: java/lang/String:exact *
#r010 rcx   : parm 2: int
# -- Old rsp -- Framesize: 64 --
#r583 rsp+60: in_preserve
#r582 rsp+56: return address
#r581 rsp+52: in_preserve
#r580 rsp+48: saved fp register
#r579 rsp+44: pad2, stack alignment
#r578 rsp+40: pad2, stack alignment
#r577 rsp+36: Fixed slot 1
#r576 rsp+32: Fixed slot 0
#r591 rsp+28: spill
#r590 rsp+24: spill
#r589 rsp+20: spill
#r588 rsp+16: spill
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N333: #	out( B1 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
000     movl    rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	decode_klass_not_null rscratch1, rscratch1
	cmpq    rax, rscratch1	 # Inline cache check
	jne     SharedRuntime::_ic_miss_stub
	nop	# nops to align entry point


020     B1: #	out( B30 B2 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
020     # stack bang (296 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #48	# Create frame

02c     movq    R8, RSI	# spill
02f     movl    R13, RCX	# spill
032     testl   RCX, RCX
034     jl     B30  P=0.000000 C=3087.000000

03a     B2: #	out( B33 B3 ) &lt;- in( B1 )  Freq: 1
03a     movl    RBX, [RSI + #12 (8-bit)]	# compressed ptr ! Field: java/lang/String.value (constant)
03d     movl    RSI, [R12 + RBX &lt;&lt; 3 + #12] (compressed oop addressing)	# range
042     NullCheck RBX

042     B3: #	out( B34 B4 ) &lt;- in( B2 )  Freq: 0.999999
042     movl    R11, [RDX + #12 (8-bit)]	# compressed ptr ! Field: java/lang/String.value (constant)
046     NullCheck RDX

046     B4: #	out( B35 B5 ) &lt;- in( B3 )  Freq: 0.999997
046     movl    RBP, [R12 + R11 &lt;&lt; 3 + #12] (compressed oop addressing)	# range
04b     NullCheck R11

04b     B5: #	out( B27 B6 ) &lt;- in( B4 )  Freq: 0.999996
04b     movsbl  R10, [RDX + #20 (8-bit)]	# byte ! Field: java/lang/String.coder (constant)
050     movsbl  R8, [R8 + #20 (8-bit)]	# byte ! Field: java/lang/String.coder (constant)
055     movl    R9, RBP	# spill
058     movl    RCX, R10	# spill
05b     sarl    R9, RCX
05e     movl    RDI, RSI	# spill
060     movl    RCX, R8	# spill
063     sarl    RDI, RCX
065     subl    RDI, R9	# int
068     cmpl    R13, RDI
06b     jg     B27  P=0.000324 C=3087.000000

071     B6: #	out( B31 B7 ) &lt;- in( B5 )  Freq: 0.999673
071     cmpl    R8, R10
074     jne     B31  P=0.000000 C=3086.000000

07a     B7: #	out( B32 B8 ) &lt;- in( B6 )  Freq: 0.999672
07a     testl   R8, R8
07d     jne     B32  P=0.000000 C=3086.000000

083     B8: #	out( B24 B9 ) &lt;- in( B7 )  Freq: 0.999672
083     testl   RBP, RBP	# unsigned
085     jbe,u   B24  P=0.042220 C=23638.000000

08b     B9: #	out( B28 B10 ) &lt;- in( B8 )  Freq: 0.957465
08b     cmpl    R13, RSI	# unsigned
08e     jnb,u   B28  P=0.000001 C=-1.000000

094     B10: #	out( B28 B11 ) &lt;- in( B9 )  Freq: 0.957464
094     movslq  R10, RBP	# i2l
097     movslq  RDX, R13	# i2l
09a     addq    R10, RDX	# long
09d     movslq  R8, RSI	# i2l
0a0     decq    R10	# long
0a3     cmpq    R10, R8	# unsigned
0a6     jnb,u   B28  P=0.000001 C=-1.000000

0ac     B11: #	out( B28 B12 ) &lt;- in( B10 )  Freq: 0.957463
0ac     movl    R10, RBP	# spill
0af     decl    R10	# int
0b2     cmpl    R10, RBP	# unsigned
0b5     jnb,u   B28  P=0.000001 C=-1.000000

0bb     B12: #	out( B26 B13 ) &lt;- in( B11 )  Freq: 0.957462
0bb     movsbl  R9, [R12 + R11 &lt;&lt; 3 + #16] (compressed oop addressing)	# byte
0c1     decode_heap_oop_not_null R10,RBX
0c5     movsbl  RCX, [R10 + #16 + R13]	# byte
0cb     cmpl    RCX, R9
0ce     jne     B26  P=0.092226 C=22640.000000

0d4     B13: #	out( B29 B14 ) &lt;- in( B12 )  Freq: 0.869159
0d4     movl    RBX, RBP	# spill
0d6     addl    RBX, #-3	# int
0d9     decode_heap_oop_not_null R11,R11
0dd     cmpl    RBX, #1
0e0     jle     B29  P=0.000001 C=-1.000000

0e6     B14: #	out( B15 ) &lt;- in( B13 )  Freq: 0.869158
0e6     movl    RSI, #1	# int
0eb     xorl    RAX, RAX	# int
        nop 	# 3 bytes pad for loops and calls

0f0     B15: #	out( B25 B16 ) &lt;- in( B14 B19 ) Loop( B15-B19 inner main of N155) Freq: 2.48611
0f0     movslq  R8, RSI	# i2l
0f3     movsbl  R9, [R11 + #16 + R8]	# byte
0f9     movq    RCX, RDX	# spill
0fc     addq    RCX, R8	# long
0ff     movsbl  RDI, [R10 + #16 + RCX]	# byte
105     cmpl    RDI, R9
108     jne,s   B25  P=0.092226 C=22640.000000

10a     B16: #	out( B25 B17 ) &lt;- in( B15 )  Freq: 2.25682
10a     movsbl  R9, [R10 + #17 + RCX]	# byte
110     movsbl  RDI, [R11 + #17 + R8]	# byte
116     cmpl    R9, RDI
119     jne,s   B25  P=0.092226 C=22640.000000

11b     B17: #	out( B25 B18 ) &lt;- in( B16 )  Freq: 2.04868
11b     movsbl  R9, [R10 + #18 + RCX]	# byte
121     movsbl  RDI, [R11 + #18 + R8]	# byte
127     cmpl    R9, RDI
12a     jne,s   B25  P=0.092226 C=22640.000000

12c     B18: #	out( B25 B19 ) &lt;- in( B17 )  Freq: 1.85974
12c     movsbl  R9, [R10 + #19 + RCX]	# byte
132     movsbl  R8, [R11 + #19 + R8]	# byte
138     cmpl    R9, R8
13b     jne,s   B25  P=0.092226 C=22640.000000

13d     B19: #	out( B15 B20 ) &lt;- in( B18 )  Freq: 1.68823
13d     addl    RSI, #4	# int
140     cmpl    RSI, RBX
142     jl,s   B15	# loop end  P=0.957780 C=23638.000000

144     B20: #	out( B24 B21 ) &lt;- in( B29 B19 )  Freq: 0.0712781
144     cmpl    RSI, RBP
146     jge,s   B24  P=0.500000 C=-1.000000

148     B21: #	out( B22 ) &lt;- in( B20 )  Freq: 0.035639
148     # castII of RSI

148     B22: #	out( B25 B23 ) &lt;- in( B21 B23 ) Loop( B22-B23 inner post of N407) Freq: 0.0652594
148     movsbl  RCX, [R11 + #16 + RSI]	# byte
14e     movl    R8, RSI	# spill
151     addl    R8, R13	# int
154     movsbl  R8, [R10 + #16 + R8]	# byte
15a     cmpl    R8, RCX
15d     jne,s   B25  P=0.092226 C=22640.000000

15f     B23: #	out( B22 B24 ) &lt;- in( B22 )  Freq: 0.0592408
15f     incl    RSI	# int
161     cmpl    RSI, RBP
163     jl,s   B22	# loop end  P=0.500000 C=23638.000000

165     B24: #	out( B25 ) &lt;- in( B20 B8 B23 )  Freq: 0.107466
165     movl    RAX, #1	# int

16a     B25: #	out( N333 ) &lt;- in( B22 B17 B26 B15 B16 B18 B24 B27 )  Freq: 0.999993
16a     addq    rsp, 48	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

179     ret

17a     B26: #	out( B25 ) &lt;- in( B12 )  Freq: 0.0883031
17a     xorl    RAX, RAX	# int
17c     jmp,s   B25

17e     B27: #	out( B25 ) &lt;- in( B5 )  Freq: 0.00032395
17e     xorl    RAX, RAX	# int
180     jmp,s   B25

182     B28: #	out( N333 ) &lt;- in( B11 B9 B10 )  Freq: 2.91054e-06
182     movl    RSI, #-138	# int
187     movl    [rsp + #0], RBX	# spill
18a     movl    [rsp + #4], R11	# spill
18f     movl    [rsp + #8], R13	# spill
        nop 	# 3 bytes pad for loops and calls
197     call,static  wrapper for: uncommon_trap(reason=&apos;predicate&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.String::startsWith @ bci:71  L[0]=_ L[1]=_ L[2]=_ L[3]=rsp + #0 L[4]=rsp + #4 L[5]=#0 L[6]=RBP L[7]=_ L[8]=rsp + #8 STK[0]=#0 STK[1]=RBP
        # OopMap {[0]=NarrowOop [4]=NarrowOop off=412/0x19c}
19c     ud2	# ShouldNotReachHere

1b0     B29: #	out( B20 ) &lt;- in( B13 )  Freq: 8.80701e-07
1b0     movl    RSI, #1	# int
1b5     xorl    RAX, RAX	# int
1b7     jmp,s   B20

1b9     B30: #	out( N333 ) &lt;- in( B1 )  Freq: 5e-07
1b9     movl    RSI, #-187	# int
1be     movq    RBP, R8	# spill
1c1     movq    [rsp + #0], RDX	# spill
1c5     movl    [rsp + #12], RCX	# spill
        nop 	# 2 bytes pad for loops and calls
1cb     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.lang.String::startsWith @ bci:1  L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #12 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ STK[0]=rsp + #12
        # OopMap {rbp=Oop [0]=Oop off=464/0x1d0}
1d0     ud2	# ShouldNotReachHere

1e4     B31: #	out( N333 ) &lt;- in( B6 )  Freq: 4.99836e-07
1e4     movl    RSI, #-187	# int
1e9     movl    [rsp + #0], R13	# spill
1ed     movl    [rsp + #4], RBX	# spill
1f1     movl    [rsp + #8], R11	# spill
1f6     movl    [rsp + #16], R8	# spill
1fb     movl    [rsp + #20], R10	# spill
        nop 	# 3 bytes pad for loops and calls
203     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.lang.String::startsWith @ bci:50  L[0]=_ L[1]=_ L[2]=rsp + #0 L[3]=rsp + #4 L[4]=rsp + #8 L[5]=#0 L[6]=RBP L[7]=rsp + #16 L[8]=_ STK[0]=rsp + #16 STK[1]=rsp + #20
        # OopMap {[4]=NarrowOop [8]=NarrowOop off=520/0x208}
208     ud2	# ShouldNotReachHere

21c     B32: #	out( N333 ) &lt;- in( B7 )  Freq: 4.99836e-07
21c     movl    RSI, #-187	# int
221     movl    [rsp + #0], R13	# spill
225     movl    [rsp + #4], RBX	# spill
229     movl    [rsp + #8], R11	# spill
22e     movl    [rsp + #12], R8	# spill
233     call,static  wrapper for: uncommon_trap(reason=&apos;unstable_if&apos; action=&apos;reinterpret&apos; debug_id=&apos;0&apos;)
        # java.lang.String::startsWith @ bci:55  L[0]=_ L[1]=_ L[2]=rsp + #0 L[3]=rsp + #4 L[4]=rsp + #8 L[5]=#0 L[6]=RBP L[7]=_ L[8]=_ STK[0]=rsp + #12
        # OopMap {[4]=NarrowOop [8]=NarrowOop off=568/0x238}
238     ud2	# ShouldNotReachHere

24c     B33: #	out( N333 ) &lt;- in( B2 )  Freq: 1.01328e-06
24c     movl    RSI, #-10	# int
        nop 	# 2 bytes pad for loops and calls
253     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.String::length @ bci:4  L[0]=_ STK[0]=#NULL
        # java.lang.String::startsWith @ bci:6  L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ STK[0]=_
        # OopMap {off=600/0x258}
258     ud2	# ShouldNotReachHere

26c     B34: #	out( N333 ) &lt;- in( B3 )  Freq: 1.01328e-06
26c     movl    RSI, #-10	# int
        nop 	# 2 bytes pad for loops and calls
273     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.String::startsWith @ bci:10  L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ STK[0]=_ STK[1]=_ STK[2]=#NULL
        # OopMap {off=632/0x278}
278     ud2	# ShouldNotReachHere

28c     B35: #	out( N333 ) &lt;- in( B4 )  Freq: 1.01328e-06
28c     movl    RSI, #-10	# int
        nop 	# 2 bytes pad for loops and calls
293     call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos; debug_id=&apos;0&apos;)
        # java.lang.String::length @ bci:4  L[0]=_ STK[0]=#NULL
        # java.lang.String::startsWith @ bci:10  L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ STK[0]=_ STK[1]=_
        # OopMap {off=664/0x298}
298     ud2	# ShouldNotReachHere

--------------------------------------------------------------------------------
</opto_assembly>
<writer thread='43011'/>

============================= C2-compiled nmethod ==============================
<opto_assembly compile_id='572' compile_kind='osr'>
----------------------- MetaData before Compile_id = 572 ------------------------
{method}
 - this oop:          0x000000012231dc80
 - method holder:     &apos;jvmLearning/chapter11/Test&apos;
 - constants:         0x000000012231d978 constant pool [39] {0x000000012231d978} for &apos;jvmLearning/chapter11/Test&apos; cache=0x000000012231c040
 - access:            0xc1000009  public static 
 - name:              &apos;doubleValue&apos;
 - signature:         &apos;(I)I&apos;
 - max stack:         3
 - max locals:        2
 - size of params:    1
 - method size:       13
 - vtable index:      -2
 - i2i entry:         0x0000000105ef3de0
 - adapters:          AHE@0x00007f850a00f950: 0xa0000000 i2c: 0x0000000105f3b460 c2i: 0x0000000105f3b542 c2iUV: 0x0000000105f3b509 c2iNCI: 0x0000000105f3b57f
 - compiled entry     0x0000000105f3b542
 - code size:         18
 - code start:        0x000000012231dc48
 - code end (excl):   0x000000012231dc5a
 - method data:       0x000000012231c248
 - checked ex length: 0
 - linenumber start:  0x000000012231dc5a
 - localvar length:   2
 - localvar start:    0x000000012231dc66

------------------------ OptoAssembly for Compile_id = 572 -----------------------
#
#  int ( rawptr:BotPTR )
#
#r018 rsi:rsi   : parm 0: rawptr:BotPTR
# -- Old rsp -- Framesize: 32 --
#r583 rsp+28: in_preserve
#r582 rsp+24: return address
#r581 rsp+20: in_preserve
#r580 rsp+16: saved fp register
#r579 rsp+12: pad2, stack alignment
#r578 rsp+ 8: pad2, stack alignment
#r577 rsp+ 4: Fixed slot 1
#r576 rsp+ 0: Fixed slot 0
#
000     N28: #	out( B1 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
000     # breakpoint
        nop 	# 11 bytes pad for loops and calls

010     B1: #	out( N28 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
010     # stack bang (96 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #16	# Create frame

01c     movl    RBP, [RSI + #8 (8-bit)]	# int
01f     movq    RDI, RSI	# spill
022     call_leaf,runtime  OSR_migration_end
        No JVM State Info
        # 
02f     sall    RBP, #1
031     movl    RAX, RBP	# spill
033     addq    rsp, 16	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

042     ret

--------------------------------------------------------------------------------
</opto_assembly>
   1855  571 %     3       jvmLearning.chapter11.Test::doubleValue @ 2 (18 bytes)   made not entrant
   1856  603       4       jvmLearning.chapter11.Test::doubleValue (18 bytes)
<writer thread='36611'/>
   1862  328       3       java.lang.String::startsWith (138 bytes)   made not entrant
                              @ 6   java.lang.String::length (11 bytes)   inline (hot)
                                @ 6   java.lang.String::coder (15 bytes)   inline (hot)
                              @ 10   java.lang.String::length (11 bytes)   inline (hot)
                                @ 6   java.lang.String::coder (15 bytes)   inline (hot)
                              @ 39   java.lang.String::coder (15 bytes)   inline (hot)
                              @ 47   java.lang.String::coder (15 bytes)   inline (hot)
<writer thread='43011'/>

============================= C2-compiled nmethod ==============================
<opto_assembly compile_id='603'>
----------------------- MetaData before Compile_id = 603 ------------------------
{method}
 - this oop:          0x000000012231dc80
 - method holder:     &apos;jvmLearning/chapter11/Test&apos;
 - constants:         0x000000012231d978 constant pool [39] {0x000000012231d978} for &apos;jvmLearning/chapter11/Test&apos; cache=0x000000012231c040
 - access:            0xc1000009  public static 
 - name:              &apos;doubleValue&apos;
 - signature:         &apos;(I)I&apos;
 - max stack:         3
 - max locals:        2
 - size of params:    1
 - method size:       13
 - vtable index:      -2
 - i2i entry:         0x0000000105ef3de0
 - adapters:          AHE@0x00007f850a00f950: 0xa0000000 i2c: 0x0000000105f3b460 c2i: 0x0000000105f3b542 c2iUV: 0x0000000105f3b509 c2iNCI: 0x0000000105f3b57f
 - compiled entry     0x0000000105f3b542
 - code size:         18
 - code start:        0x000000012231dc48
 - code end (excl):   0x000000012231dc5a
 - method data:       0x000000012231c248
 - checked ex length: 0
 - linenumber start:  0x000000012231dc5a
 - localvar length:   2
 - localvar start:    0x000000012231dc66

------------------------ OptoAssembly for Compile_id = 603 -----------------------
#
#  int ( int )
#
#r018 rsi   : parm 0: int
# -- Old rsp -- Framesize: 32 --
#r583 rsp+28: in_preserve
#r582 rsp+24: return address
#r581 rsp+20: in_preserve
#r580 rsp+16: saved fp register
#r579 rsp+12: pad2, stack alignment
#r578 rsp+ 8: pad2, stack alignment
#r577 rsp+ 4: Fixed slot 1
#r576 rsp+ 0: Fixed slot 0
#
000     N1: #	out( B1 ) &lt;- in( B1 )  Freq: 1

000     B1: #	out( N1 ) &lt;- BLOCK HEAD IS JUNK  Freq: 1
000     # stack bang (96 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #16	# Create frame

00c     movl    RAX, RSI	# spill
00e     sall    RAX, #1
010     addq    rsp, 16	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

01f     ret

--------------------------------------------------------------------------------
</opto_assembly>
<writer thread='24323'/>
   1877  604       3       jvmLearning.chapter11.Test::calcSum (26 bytes)
                              @ 12   jvmLearning.chapter11.Test::doubleValue (18 bytes)   inlining prohibited by policy
<writer thread='36611'/>
   1880  605 %     4       jvmLearning.chapter11.Test::calcSum @ 4 (26 bytes)
<writer thread='39683'/>
   1883  469       3       java.util.Spliterators$IteratorSpliterator::tryAdvance (77 bytes)   made not entrant
                              @ 50   java.util.ImmutableCollections$SetN$SetNIterator::hasNext (13 bytes)   inline (hot)
                              @ 50   java.util.ImmutableCollections$Set12$1::hasNext (13 bytes)   inline (hot)
                               \-&gt; TypeProfile (340/20649 counts) = java/util/ImmutableCollections$Set12$1
                               \-&gt; TypeProfile (20309/20649 counts) = java/util/ImmutableCollections$SetN$SetNIterator
                              @ 63   java.util.ImmutableCollections$SetN$SetNIterator::next (47 bytes)   inline (hot)
                              @ 63   java.util.ImmutableCollections$Set12$1::next (92 bytes)   inline (hot)
                               \-&gt; TypeProfile (190/19685 counts) = java/util/ImmutableCollections$Set12$1
                               \-&gt; TypeProfile (19495/19685 counts) = java/util/ImmutableCollections$SetN$SetNIterator
                                @ 15   java.util.ImmutableCollections$SetN$SetNIterator::nextIndex (56 bytes)   inline (hot)
                                @ 15   java.util.ImmutableCollections$SetN$SetNIterator::nextIndex (56 bytes)   inline (hot)
                              @ 68   java.util.stream.MatchOps$1MatchSink::accept (44 bytes)   inline (hot)
                               \-&gt; TypeProfile (19685/19685 counts) = java/util/stream/MatchOps$1MatchSink
                                @ 12   jdk.internal.module.IllegalAccessMaps$$Lambda$33/0x0000000800091c40::test (12 bytes)   inline (hot)
                                @ 12   jdk.internal.module.IllegalAccessMaps$$Lambda$31/0x0000000800091440::test (12 bytes)   executed &lt; MinInliningThreshold times
                                 \-&gt; TypeProfile (15635/15735 counts) = jdk/internal/module/IllegalAccessMaps$$Lambda$33
                                  @ 8   jdk.internal.module.IllegalAccessMaps::lambda$isExported$6 (24 bytes)   inline (hot)
                                    @ 1   java.lang.module.ModuleDescriptor$Exports::source (5 bytes)   accessor
                                    @ 5   java.lang.String::equals (50 bytes)   inline (hot)
                                      @ 44   java.lang.StringLatin1::equals (36 bytes)   (intrinsic)
                                    @ 12   java.lang.module.ModuleDescriptor$Exports::isQualified (18 bytes)   inline (hot)
                                      @ 4   java.util.ImmutableCollections$SetN::isEmpty (13 bytes)   inline (hot)
                                      @ 4   java.util.ImmutableCollections$Set12::isEmpty (2 bytes)   inline (hot)
                                       \-&gt; TypeProfile (2715/7573 counts) = java/util/ImmutableCollections$Set12
                                       \-&gt; TypeProfile (4858/7573 counts) = java/util/ImmutableCollections$SetN
<writer thread='9219'/>
C1 Runtime statistics:
 _resolve_invoke_virtual_cnt:     103
 _resolve_invoke_opt_virtual_cnt: 173
 _resolve_invoke_static_cnt:      67
 _handle_wrong_method_cnt:        18
 _ic_miss_cnt:                    60
 _generic_arraycopy_cnt:          0
 _generic_arraycopystub_cnt:      0
 _byte_arraycopy_cnt:             0
 _short_arraycopy_cnt:            0
 _int_arraycopy_cnt:              0
 _long_arraycopy_cnt:             0
 _oop_arraycopy_cnt:              0
 _arraycopy_slowcase_cnt:         0
 _arraycopy_checkcast_cnt:        0
 _arraycopy_checkcast_attempt_cnt:0
 _new_type_array_slowcase_cnt:    3
 _new_object_array_slowcase_cnt:  1
 _new_instance_slowcase_cnt:      4
 _new_multi_array_slowcase_cnt:   0
 _monitorenter_slowcase_cnt:      2
 _monitorexit_slowcase_cnt:       0
 _patch_code_slowcase_cnt:        0
 _throw_range_check_exception_count:            0:
 _throw_index_exception_count:                  0:
 _throw_div0_exception_count:                   0:
 _throw_null_pointer_exception_count:           0:
 _throw_class_cast_exception_count:             0:
 _throw_incompatible_class_change_error_count:  0:
 _throw_array_store_exception_count:            0:
 _throw_count:                                  0:

<statistics type='deoptimization'>
Deoptimization traps recorded:
  2622 (100.0%) total
                       constraint/none/nop: 2622 (100.0%)
</statistics>
<statistics type='SharedRuntime'>
   60 inline cache miss in compiled
   18 wrong method
   67 unresolved static call site
  103 unresolved virtual call site
  173 unresolved opt virtual call site
  395 slow partial subtype
15475 byte array copies
  188 short array copies
   89 int array copies
  100 long array copies
   20 checkcast array copies
  633 unsafe array copies
AdapterHandlerTable: empty 131 longest 4 total 240 average 1.481481
AdapterHandlerTable: lookups 13139 buckets 13914 equals 12306 hits 12306 compact 12306
</statistics>
<statistics type='opto'>
--- Compiler Statistics ---
Methods seen: 116  Methods parsed: 116  Nodes created: 34937
Blocks parsed: 517  Blocks seen: 641
480 original NULL checks - 393 elided (81%); optimizer leaves 83,
41 made implicit (49%)
CCP: 26  constants found: 0
Total frameslots = 128, Max frameslots = 12
Inserted 0 spill loads, 0 spill stores, 0 mem-mem moves and 0 copies.
Total load cost=      0, store cost =      0, mem-mem cost =  0.00, copy cost =     0.
Adjusted spill cost =       0.
Conservatively coalesced 59 copies, 0 pairs, 139 post alloc.
Used cisc instruction  2,  remained in register 285
Average allocation trips 1.421053
High Pressure Blocks = 0, Low Pressure Blocks = 0
Nops added 0 bytes to total of 14647 bytes, for 0.00%
Peephole: peephole rules applied: 0
PhaseIdealLoop=158, sum _unique=111490
</statistics>
<statistics type='intrinsic'>
Compiler intrinsic usage:
     3 (20.0%) _min (worked)
     5 (33.3%) _arraycopy (worked)
     1 ( 6.7%) _isPrimitive (worked)
     1 ( 6.7%) _compressStringC (worked)
     4 (26.7%) _equalsL (worked)
     1 ( 6.7%) _allocateUninitializedArray (worked)
    15 (100.0%) total (worked)
</statistics>
<writer thread='14851'/>
<destroy_vm stamp='1.897'/>
<tty_done stamp='2.772'/>
</tty>
<hotspot_log_done stamp='2.772'/>
</hotspot_log>
